---
title: "Limited plasticity but increased variance in physiological rates across ectotherm populations under climate change"
bibliography: ./bib/refs.bib
csl: ./bib/functional-ecology.csl
format:
  docx:
    reference-doc: ./bib/template.docx
    output-file: "ms_fe.docx"
editor_options: 
  chunk_output_type: console
execute:
  freeze: auto  # re-render only when source changes
  cache: false
  echo: false
  warning: false
  error: false
  include: true
crossref:
  fig-title: 'Figure'
  fig-labels: arabic
  title-delim: "-"
  fig-prefix: "Figure"
  tbl-prefix: "Table"
editor: 
  markdown: 
    wrap: 72
---

```{r, setup}
#| label: setup
#| echo: false
#| include: false
##################################
# Clean workspace
##################################
    rm(list=ls())

##################################
# Loading packages & Functions
##################################
    pacman::p_load(tidyverse,  metafor, flextable, raster, rasterVis,  patchwork, RColorBrewer, ggtree, ape, phytools, viridis, MCMCglmm, brms, latex2exp, orchaRd, multcomp, ggbeeswarm, magick, ggimage, gt, performance, ggthemes, mapproj)

#devtools::install_github(repo = "ErikKusch/KrigR")
## Function to produce colour palette
# Note that temp is stored as a factor of 10 C larger, so needs to be divided. Also, we can create a custom colour palette function using colorRampPallette
colfunc <- colorRampPalette(rev(brewer.pal(10,"RdBu")))
#test colfunc(10) will generate the exact Hex codes for 10 different colours can 10 to 100 and you get 100 colour hex codes. Very useful webpage: https://pjbartlein.github.io/REarthSysSci/rasterVis01.html

    # loading functions
    source("./R/functions.R")
  
  options(digits = 2, scipen = 3)

my_theme <- function(){
  theme(
           axis.title.y = element_text(size = 20), 
           axis.title.x = element_text(size = 20),
           axis.text.x = element_text(size = 18),
            axis.text.y = element_text(size = 18),
            plot.title = element_text(size = 28))
}
```

```{r, data_setup_summary}
#| label: data_setup_summary
#| echo: false
##########################
## Load processed datasets
##########################
data_wide <- read.csv("./output/data/data_final_wide.csv")
data_long <- read.csv("./output/data/data_final_long.csv")

data_long2 <- data_long %>% mutate(type = factor(type, levels = c("acute", "acclim")))

##########################
## Summarize data
##########################

 data_wide$lat <- as.numeric(data_wide$lat)
    new_papers <- data_wide[-grep("_o", data_wide$record_num),]
    old_papers <- data_wide[grep("_o", data_wide$record_num),]
  
    # habitat
      spp_habitat <- data_wide %>%
                      group_by(habitat) %>%
                      summarise(spp_n = length(unique(species_full)))
      tot_spp <- sum(spp_habitat[,2])
      
    # Taxa
      taxa_sum <- data_wide %>%  
              group_by(habitat, phylum, class) %>% 
              summarise(spp = length(unique(species_full)), n = n()) %>% data.frame()
      
      taxa_sum_long <- data_long2 %>% group_by(habitat, phylum, class) %>% 
              summarise(spp = length(unique(species_full)), n = n()) %>% data.frame()

    # Traits 
      traits_habitat <- data_long2 %>% filter(grepl("lnRR_Q10",name))  %>% 
                      group_by(habitat, trait_category) %>%
                      summarise(spp_n = length(unique(species_full)), k = n())
      traits_all <- data_long2 %>% filter(grepl("lnRR_Q10",name)) %>% 
                      group_by(trait_category) %>%   
                      summarise(spp_n = length(unique(species_full)), k = n())
    
      # Acclimation time vary across habitat?
      
      acclim_time <- data_wide %>% 
                      group_by(habitat) %>% 
                      summarise(mean = mean(acclim_period, na.rm = TRUE),
                                  sd = sd(acclim_period, na.rm = TRUE),
                                  n = n())
      test_m_t <- t.test(acclim_period ~ habitat, data = data_wide %>% filter(!habitat == "f"))
      test_f_t <- t.test(acclim_period ~ habitat, data = data_wide %>% filter(!habitat == "m"))
      test_f_m <- t.test(acclim_period ~ habitat, data = data_wide %>% filter(!habitat == "t"))
      
#########################
## Phylogeny
#########################
 ## Tree data
    tree_data <-  data_long %>%
                  group_by(species_full)                                                 %>%
                  mutate(n = length(habitat))                                            %>%
                  dplyr::select(species_full,  habitat, n)                               %>% 
                  distinct(species_full, habitat, n)
    #rownames(tree_data) <- tree_data$species_full
    #tree_data <- tree_data[,2:3]
    
 ## Load the phylogenetic tree
                tree <- read.tree("./tree/tree_binary_SN_Q10.tre")   
      tree$tip.label <- gsub("_", " ", tree$tip.label)
      tree$tip.label <- gsub("Enithares sp", "Enithares ciliata", tree$tip.label)
  
      # Do a tree check with original data
        #  tree_checks(data_long, tree, dataCol = "species_full", type = "checks") 

##################################
# Tree checking and pruning
##################################
  # Have a look at species in data and tree. 
  tree <- tree_checks(data_long, tree, dataCol = "species_full", type = "prune")
      
# Check that taxa dropped
 # tree_checks(data_long, tree, dataCol = "species_full", type = "checks")

##################################
# Branch lengths and cor matrix
##################################
      # Now that we have the tree file, we need to use it to create a phylogenetic correlation matrix using Grafen's method. This assumes Brownian motion and is the best we can do without a molecular phylogeny. The topology of the tree should be fairly good. We will explore a few different options with p to determine the best power function
      tree_p0.5 <- compute.brlen(tree, method = "Grafen", power = 0.5) # Probably most sensible power
      tree_p0.6 <- compute.brlen(tree, method = "Grafen", power = 0.6) # Probably most sensible power
      tree_p0.7 <- compute.brlen(tree, method = "Grafen", power = 0.7) # Probably most sensible power
      tree_p0.8 <- compute.brlen(tree, method = "Grafen", power = 0.8) # Probably most sensible power
      tree_p0.9 <- compute.brlen(tree, method = "Grafen", power = 0.9) # Probably most sensible power
      tree_p1.0 <- compute.brlen(tree, method = "Grafen", power = 1.0) # Probably most sensible power
     
     # Create null nodes 
      tree_p0.5$node.label <- NULL # We don't use nodes and will cause a warning so create null node names(
      tree_p0.6$node.label <- NULL # We don't use nodes and will cause a warning so create null node names(
      tree_p0.7$node.label <- NULL # We don't use nodes and will cause a warning so create null node names
      tree_p0.8$node.label <- NULL # We don't use nodes and will cause a warning so create null node names
      tree_p0.9$node.label <- NULL # We don't use nodes and will cause a warning so create null node names
      tree_p1.0$node.label <- NULL # We don't use nodes and will cause a warning so create null node names
```

<p style="text-align: center;">

Daniel W.A. Noble^1^ $\ddagger$, Fonti Kar^2^, Alex Bush^3^, Frank
Seebacher^4^ $\dagger$, & Shinichi Nakagawa^2,5^ $\dagger$

</p>

## Affiliations:

^1^ Division of Ecology and Evolution, Research School of Biology, The
Australian National University, Canberra, ACT 2600, Australia\
^2^ Ecology and Evolution Research Centre, School of Biological, Earth
and Environmental Sciences, University of New South Wales, Sydney, NSW,
Australia\
^3^ Department of Biology, Lancaster University, Liverpool, UK\
^4^ School of Life and Environmental Sciences, University of Sydney,
Sydney, NSW 2006, Australia\
^5^ Department of Biological Sciences, University of Alberta, CW 405, Biological Sciences Building, Edmonton, AB T6G 2E9, Canada\
$\dagger$ contributed equally\
$\ddagger$ corresponding author, daniel.noble\@anu.edu.au

**Running head**: Physiological rate variation in ectotherms

## **Abstract**

1.	Climate change causes warmer and more variable temperatures globally, impacting physiological rates and function in ectothermic animals. Acclimation of physiological rates can help maintain function. However, it is unresolved how variance in physiological rates changes with temperature despite its potential ecological and evolutionary importance. 
2.	We developed new effect sizes that capture how both the mean and variation in physiological rates change across temperature (based on the temperature coefficient, $Q_{10}$), and used them to test how acclimation and acute thermal responses vary across aquatic and terrestrial ectotherms using meta-analysis (>1900 effects from 226 species). Comparing both the magnitude of acclimation and changes in variation side-by-side provides unique opportunities for evaluating the importance of plasticity and selection under climate change.
3.	We show that variance in physiological rates increases at higher temperatures, but that the magnitude of change depends on habitat. Freshwater and marine ectotherms are capable of acclimation and have the greatest increase in variance. In contrast, terrestrial ectotherms lack the capacity for acclimation and have smaller increases in variance. Simulations suggest that these patterns may result from differences in among-individual variation in thermal breadth and optima of performance curves across habitats. 
4.	Our results highlight the greater vulnerability of terrestrial ectotherms to climate change because of both a lack of acclimation capacity and a limited increases in variance that may provide less raw material for evolutionary adaptation. Considering both acclimation capacity and variance in physiological rates side-by-side is therefore important for understanding how climate change will impact populations.


## **Introduction**

Climate change is expected to result in warmer and more variable thermal environments globally [@Suarez2023; @Ummenhofer2017]. Greater thermal variability is predicted to pose strong selection pressure that leads to genetic adaptation and/or the evolution of adaptive phenotypic plasticity -- both of which are considered important for population resilience to human-induced climate change [@Seebacher2015-wi; @Chevin2015; @Chevin2017; @Chevin2010; @seebacher2023can; @cooke2021one]. Without plasticity or adaptation, high extinction rates are expected unless organisms can migrate to track suitable habitats [@Cahill2012].

Reversible phenotypic plasticity, such as physiological acclimation, is relatively rapid and can be fine-tuned to environmental conditions making it the first ‘line-of-defense’ against environmental change [@Dewitt1998]. For example, physiological rates are known to speed up as temperature increases because of the thermodynamic effects on chemical reaction rates -- so called 'acute' temperature responses (@fig-concept). However, longer-lasting (days-weeks) temperature increases that move environmental conditions away from thermal maxima of physiological rate functions (i.e., thermal performance curves) can be mitigated by acclimation, which adjust reaction rates [@Seebacher2015-wi; @Havird2020-mj]. Physiological acclimation is driven by endocrine and epigenetic processes that change the underlying physiology to allow organisms to maintain physiological performance around a fitness optimum despite changes in the environment [@seebacher2019histone; @little2013thyroid; @taff2016endocrine]. Acclimation therefore alters acute thermal sensitivity to offset the potentially negative effects of acute temperature changes (e.g., higher energetic demands). Acclimation, however, does not necessarily result in complete compensation in response to environmental change [ *sensu* @huey1999testing]. Rather, increased physiological rates are often only partially compensated such that ectotherms acclimated to, and measured at, warmer temperatures (R2.2 in @fig-concept) have higher physiological rates than those acclimated to, and measured at, cooler temperatures (R1.1 in @fig-concept) [@huey1999testing; @Havird2020-mj].

Acclimation is expected to evolve in populations experiencing high but predictable environmental variability, and when the costs of plasticity are low [@Chevin2017; @Dewitt1998; @Reed2010]. Thermal variation and predictability differ across habitats (terrestrial, marine and freshwater) [@steele2019comparison], and it may be expected that organisms within these habitats vary in their capacity for acclimation. @rohr2018complex show relationships between acclimation capacity, latitude and body size suggesting climate could be an important driver of acclimation responses. In addition, species occupying terrestrial habitats exhibit weaker acclimation capacities and, therefore may be particularly vulnerable to climate change given their greater probability of experiencing thermal extremes that overwhelm physiological homeostasis [@Seebacher2015-wi; @Gunderson2015-hz; @hoffmann2013upper; @morley2019physiological]. In contrast, marine and freshwater organisms appear to have greater physiological acclimation capacity [e.g., @Seebacher2015-wi; @Pottier2022]. However, the focus of research up to now has been primarily on mean physiological responses neglecting how variability in physiological processes might also be impacted by higher temperatures.

As mean physiological rates increase with temperature it is likely that intrapopulation variability will also be impacted. Positive mean-variance relationships are common across biology suggesting that, as physiological rates increase with temperature, so too should variability [i.e., Taylor's Law; @giometto2015sample]. Differences in the shape of thermal performance curves (thermal breadth, maximal performance and thermal maxima) can reflect among-individual variability at higher temperatures, which can also differ between different levels of biological organisation, environmental conditions, and acclimation responses [@rezende2019thermal; @tattersall2012coping; @schulte2011thermal; @angilletta2009thermal]. Presumably, increases in variation in physiological rates reflects environment-mediated changes to underlying regulatory networks, which can lead to an increased variation in phenotypic outcomes [@costanzo2021environmental; @matthey2020plasticity]. Quantifying levels of among-individual variation in thermal performance curves is important to understand their capacity to evolve, as well as the resilience of populations to environmental change [@careau2014individual].  

Changes in physiological rate variability is expected to have consequences for the flow of energy within and between populations, communities, and ecosystems [ @seebacher2023can; @barneche2021warming; @Sanderson2023; @Bolnick2011]. Generally, more variable populations are predicted to be associated with broader niches, have increased growth rates, and decreased vulnerability to environmental change, lowering extinction risk [i.e., "portfolio effects",@Schindler2010] [see also, @forsman2015rethinking; @forsman2014effects; @Bolnick2011;  @hart2016variation; @Schindler2010; @portner2021climate]. In addition, if phenotypic and genetic variation in physiological rates are correlated and linked to fitness, reduced phenotypic variation may limit responses to selection and reduce the capacity of populations to evolve [@Pelletier2012; @hoffmann2011climate]. Therefore, maintaining intrapopulation variability in physiological rates in a warmer world may be important for population resilience to climate change.

Here, we use meta-analysis to establish the current state-of-knowledge of the extent to which aquatic and terrestrial ectotherms are capable of physiological plasticity. We developed new effect sizes ([@fig-concept]A)to quantify how variance in physiological rates change with temperature to ask the following questions regarding acclimation-induced changes in trait means and variances: 1) Does variance in physiological rates change as temperatures rise? 2) Are temperature effects on means of physiological rates greater than changes in variance across aquatic and terrestrial ectotherms? 3) How do changes in trait mean and variance relate to different life-stages, traits, and habitats? 4) Are changes in mean and variance of physiological rates impacted by past climate history? 5) How are variances in physiological rates expected to change under climate change? 

```{r, fig-concept}
#| label: fig-concept
#| fig-width: 8
#| fig-height: 12
#| fig-cap: "Calculations of acute and acclimation $lnVR_{Q_{10}}$ and $lnRR_{Q_{10}}$. (A) Two idealised thermal performance curves for animals acclimated at 'cold' ('blue') temperatures and warm ('red') temperatures. Shaded blue and red areas are the thermal maxima of the performance curves. Physiological rates are measured for a sample of ectotherms at two different temperatures along the thermal performance curves ($T_{1}$ = 20°C and $T_{2}$ = 30°C) for both curves. At each temperature a mean physiological rate (R) (points) and its standard deviation (SD) (error bars above and below mean) are estimated. R1.1 and R1.2 are the rates and associated SD (subscripted) for the cold acclimated animals at temperature 1 and 2, respectively. R2.1 and R2.2 are the rates and associated SD (subscripted) for the warm acclimated animals at temperature 1 and 2, respectively. An example of how acute and acclimation $lnVR_{Q_{10}}$ and $lnRR_{Q_{10}}$ are calculated from the treatments within the study is provided on the right-hand side of the figure with reference to each of the four possible groups. Two acute effect sizes can be calculated, one for the cold acclimated animals and one for the warm acclimated animals. Acute effects quantify the thermodynamic impacts of temperature on reaction rates whereas acclimated reaction rates measure how much (if at all) these rates are suppressed from having experienced the temperatures chronically (B) Species are expected, *a priori*, to vary in their thermal performance curves (thin lines) around an average (thick black line). We restricted our data to areas of each species' performance curve that fell within the natural thermal range of the species (thick lines on each species-level curve). However, given it was not possible to measure the full performance curve for each species some test temperatures within studies may have converged on or moved past the thermal maxima. In such cases, we expected our $Q_{10}$ effect sizes to be smaller as indicated by comparing the black dashed lines to grey dashed lines." 

fig_concept <- magick::image_read("output/figures/fig1.png")
plot(fig_concept)
```

## **Materials and Methods**

### *Literature collection*

We compiled literature on ectothermic animals that measured physiological rates (e.g., metabolic rates, heart rates, enzyme reaction rates) at two or more temperatures after having been acclimated at these temperatures for at least 1 week. We used data from a previous meta-analysis [@Seebacher2015-wi] and updated @Seebacher2015-wi's data by extracting data from suitable studies from our own searches that followed the same search protocol. We extracted data from an extra `r length(unique(new_papers$record_num))` papers (with a total of `r dim(new_papers)[1]` effects; a `r  (length(unique(new_papers$record_num)) / length(unique(old_papers$record_num)))*100`% increase in the number of published articles). For full details on the search protocol, see the *Supplementary Materials*, where we also provide a PRISMA flow diagram of our extraction process (@fig-prisma).

### *Data Compilation*

We extracted means, standard deviations, and sample sizes for physiological rates measured at the two test temperatures that coincided with acclimation temperatures ([@fig-concept]A). If there were more than two temperatures, we chose only the temperatures that fell within the most likely natural range of temperatures experienced by the species in question (@fig-concept). We extracted these data from text, tables or figures of a given paper. Data were extracted from figures using the R package *metaDigitise* [@Pick2019-mg]. We also recorded the phylum, class, order, genus and species, and the latitude and longitude from where the experimental animals were sourced. For studies that did not provide latitude and longitude for the population, we searched for similar studies by the same lab group to identify where the population was likely to have been sourced. If the experimental animals were derived from the wild, we recorded the nearest latitude and longitude of the field collection site. If the animals were sourced from a commercial supplier, we took the latitude and longitude of the supplier. When it was not possible to find latitude and longitude using these methods, we looked up the distribution of the species in question and took the latitude and longitude of the centroid of the species' distributional range.

### $Q_{10}$ Based Effect Sizes and Sampling Variances for Means and Variances

Following @Noble2022-ty we calculated a series of temperature-corrected effect sizes that compared mean physiological rates ($lnRR_{Q_{10}}$) as well as the variability in physiological rates ($lnVR_{Q_{10}}$) (@fig-concept). These effect sizes are similar to the traditional temperature coefficient ($Q_{10}$), but with formal analytical approximations of their sampling variances. Sampling variances for effect sizes allowed us to make use of traditional meta-analytic modelling approaches.

#### *Comparing changes in mean physiological rates*

To compare mean physiological rates, we calculated the log $Q_{10}$ response ratio, $lnRR_{Q_{10}}$ [@Noble2022-ty] as follows:

$$
  lnRR_{Q_{10}} = ln\left( \frac{R_{2}}{R_{1}} \right){ \left(\ \frac{10^{\circ}C}{T_{2}-T_{1}} \right) }
$$ {#eq-lnq10}

Where, $R_{1}$ and $R_{2}$ are mean physiological rates at temperatures $T_{1}$ and $T_{2}$, respectively. Log transformation of this ratio makes the effect size normally distributed. @eq-lnq10 is essentially a temperature corrected equivalent to the log response ratio (lnRR) [@Hedges1999-de; @Lajeunesse2011-fq] when the numerator and denominator are measured at different temperatures. This allows comparisons of the means from two temperature treatments directly regardless of the absolute measurement temperatures. The sampling variance for @eq-lnq10 can be computed as follows [as described in @Noble2022-ty]:

$$
  s_{lnRR_{Q_{10}}} = \left( \frac{SD_{2}^2}{R^2_{2}N_{2}} + \frac{SD_{1}^2}{R^2_{1}N_{1}} \right){ \left(\ \frac{10^{\circ}C}{T_{2}-T_{1}} \right) }^2
$$ {#eq-Vlnq10}

Here, $SD_{1}^2$ and $SD_{2}^2$ are the standard deviations, and $N_{1}$ and $N_{2}$ are the sample sizes of the groups measured at $T_{1}$ and $T_{2}$, respectively ([@fig-concept]A).

#### *Comparing variance in physiological rates*

@Nakagawa2015-fo proposed analogous effect size estimates to *lnRR* that allow for comparisons of changes in variance between two groups, the log variance ratio (*lnVR*) and the log coefficient of variation (*lnCVR*). Here, we focus on *lnVR* but derivations for *lnCVR*, along with re-analyses with lnCVR, are presented in the *Supplementary Materials*. In short, *lnVR* is a ratio that describes the difference in trait variability between two groups. Like *lnRR*, *lnVR* can also easily be extended to its $Q_{10}$ analogue (and associated sampling variance) as follows:

$$
lnVR_{Q_{10}} = ln\left( \frac{SD_{2}}{SD_{1}} \right){ \left(\ \frac{10^{\circ}C}{T_{2}-T_{1}} \right) }
$$ {#eq-lnq10VR} $$
s_{lnVR_{Q_{10}}} = \left( \frac{1}{2\left( N_{2}-1 \right)} + \frac{1}{2\left(N_{1} - 1\right)} \right){ \left(\ \frac{10^{\circ}C}{T_{2}-T_{1}} \right) }^2
$$ {#eq-slnq10VR}

where parameters are defined above. @eq-lnq10VR and @eq-slnq10VR describe the change in physiological rate variance (@eq-lnq10VR) normalised to a 10°C temperature change along with its sampling variance (@eq-slnq10VR). 

#### *Calculating acute and acclimation* $lnRR_{Q_{10}}$ and $lnVR_{Q_{10}}$ estimates*

Effect sizes can be calculated from samples of organisms measured acutely at two temperatures or after having been acclimated these same temperatures ([@fig-concept]A). For studies that measure acute and acclimated responses we used the mean, standard deviation, and sample size to derive both acute and acclimation $lnRR_{Q_{10}}$ and $lnVR_{Q_{10}}$ estimates. For studies that only measured $R_{1}$, $R_{2}$, $SD_{1}^2$ and $SD_{2}^2$ acutely we could only calculate acute versions of these effect size estimates. For all effect sizes the higher temperature was in the numerator and the lower of the two temperatures in the denominator. As such, positive effect sizes indicate that the mean (i.e., $lnRR_{Q_{10}}$) or variance ($lnVR_{Q_{10}}$) is larger at the higher of the two temperatures (numerator) when standardized to 10°C. When measuring plasticity, it is the difference between $lnRR_{Q_{10}}$ acute (denoted, $lnRR_{Q_{10_{acute}}}$) and acclimation (denoted, $lnRR_{Q_{10_{acclimation}}}$) that captures the degree to which organisms plastically adjust (or acclimate). As done by @Seebacher2015-wi, we consider acute $lnRR_{Q_{10}}$ and $lnVR_{Q_{10}}$ as animals measured acutely at both temperatures even though one of the acute measurements is also the acclimation temperature. A better measure of "acute" responses would be to calculate $lnRR_{Q_{10}}$ and $lnVR_{Q_{10}}$ on two completely new temperatures but this was not often done in studies. Importantly, our effect sizes, as with $Q_{10}$ more generally, all assume that the effect of temperature on physiological rates (or changes in variance) is log-linear (see [@fig-concept]B & *Supplementary Materials* for further discussion). We test and control for any violations of these assumptions in our analysis (see below).


### *Moderator Variables*

We recorded or derived a series of moderator variables from each study that are expected to have an impact on our effect size estimates. This included the duration of acclimation in days given that acclimation responses may depend on how long chronic temperature exposure occurs. We also recorded if the sample of animals were derived from captive or wild stocks, the life-history stage of the animals used ("adult" or "juvenile") and the habitat type ("freshwater", "marine" or "terrestrial") given that @Seebacher2015-wi show that these factors can impact $Q_{10}$ estimates. Physiological rate measures varied widely across the studies but could generally be grouped into two broad categories that included whole-organism measures, which all integrate a diversity of physiological and biochemical processes, and biochemical processes (e.g., enzyme reaction rates, proton leak) [@Seebacher2015-wi; @rezende2019thermal]. We explore differences across more detailed trait categories in *Supplemental Materials*, but note sample sizes are limited for many traits. Traits that could not be categorised into these two we classified as ‘Other’.

### *Meta-Analysis*

We analysed our data using multilevel meta-analytic (MLMA) and meta-regression (MLMR) models in R (vers.
`r paste0(R.Version()$major, ".", R.Version()$minor)`) using *brms* [vers. `r utils::packageVersion("brms")` @Burkner2017-wg; @Burkner2018-ur; @noauthor_2021-az] and *metafor* [vers. `r utils::packageVersion("metafor")` @Viechtbauer2010-fn]. We fit both Bayesian and frequentist approaches to ensure that our results were consistent, and to create orchard plots that more easily convey heterogeneity in effects with prediction intervals [vers. 2.0, @Nakagawa2021-ls; @nakagawaorchard]. Prediction intervals can be interpreted as the range of expected effects from future studies [@Noble2022-ty]. In addition, Bayesian methods better protect against type I errors in the presence of complex sources of non-independence [@Nakagawa2021-uf; @Song2021-ba; @Noble2017-mz]. In all cases, frequentist and Bayesian models resulted in the same conclusions. For our Bayesian models, we ran 4 MCMC chains, each with a warm-up (burn-in) of 1000 followed by 4000 sampling iterations keeping every 5 iterations for a minimum of 3200 samples from the posterior distribution. We used flat Gaussian priors for 'fixed' effects (i.e.,$N(0, 10)$) and a student t-distribution for 'random' effects (i.e., $student_{t}$(3, 0, 10)). We checked that all MCMC chains were mixing and had converged (i.e., $R_{hat}$ = 1). 
We also explored the potential for publication bias in our dataset but there was no evidence it existed (details in *Supplementary Materials*). We report overall meta-analytic means (denoted by $\mu$) and contrasts between meta-analytic means (denoted by $\beta$) throughout.

#### *Multi-level Meta-analysis (MLMA) Models*

We first fit multi-level meta-analysis (MLMA) models (i.e., intercept-only models) for both $lnRR_{Q_{10}}$ and $lnVR_{Q_{10}}$, that included study, species, trait type, and phylogeny as random effects to account for non-independence and identify sources of variability. We refer to this model structure as “Model 1” in the results. Our MLMA models allowed us to partition the variation in $lnRR_{Q_{10}}$ and $lnVR_{Q_{10}}$ among these key sources while accounting for total sampling variance in each. This allowed us to calculate the proportion of total heterogeneity [i.e., $I_{total}^2$; *sensu* @Nakagawa2012-oc; @Noble2022-ty] along with various $I^2$ metrics describing the proportion of variance explained by each random effect level [@Nakagawa2012-oc]. We also present 95% prediction intervals which describe the expected distribution of effects for future studies [@Nakagawa2021-ls; @Noble2022-ty].

A phylogeny was derived using the Open Tree of Life (OTL) with the *rotl* package in R (vers. `r utils::packageVersion("rotl")`) [@Michonneau2016-if], and plotted using *ggtree* (vers. `r utils::packageVersion("ggtree")`) [@Yu2017-wj]. We resolved all polytomies in the tree. Any missing taxa were replaced with closely related species and branch lengths were computed using Grafen's method [using power = 0.7, @Grafen1989-pr]. Models fit using correlation matrices computed with different power (p) parameters (from 0.5 – 1.0) had nearly identical $AIC_{c}$. As such, we used an intermediate value of p = 0.7. We used the R packages *ape* (vers. `r utils::packageVersion("ape")`) [@Paradis2019-gx] and *phytools* (vers. `r utils::packageVersion("phytools")`) [@Revell2012-vq] to prune the tree for individual analyses and calculate phylogenetic covariance (or correlation) matrices used in meta-analytic models.

#### *Multi-level Meta-regression (MLMR) Models*

After quantifying levels of heterogeneity, we fit a series of multi-level meta-regression (MLMR) models to test our key questions. In all models, we included the same random effects as we used in our MLMA models. Acclimation time varied from `r range(data_wide$acclim_period, na.rm = TRUE)[1]` to `r range(data_wide$acclim_period, na.rm = TRUE)[2]` days (mean $\pm$ SD = `r mean(data_wide$acclim_period, na.rm = TRUE)` $\pm$ `r sd(data_wide$acclim_period, na.rm = TRUE)` days), and terrestrial ectotherms were acclimated for a much shorter duration (mean $\pm$ SD = `r acclim_time[3,2]` $\pm$ `r acclim_time[3,3]` days, n = `r acclim_time[3,4]`) than freshwater (mean $\pm$ SD = `r acclim_time[1,2]` $\pm$ `r acclim_time[1,3]` days, n = `r acclim_time[1,4]`) and marine species (mean $\pm$ SD = `r acclim_time[2,2]` $\pm$ `r acclim_time[2,3]` days, n = `r acclim_time[2,4]`). To control for these differences, acclimation time was mean-centered (mean = 0) and included in all our models, although it was not a strong predictor of effect size variation in any of our models (*Supplementary Materials*, @fig-accl_time).

In addition to the acclimation period, all our models corrected for possible violations of the log-linearity assumption associated with effect size calculations ([@fig-concept]; and see *Supplementary Materials* @fig-lnrrq10_temp). We predicted that, if $lnRR_{Q_{10}}$ and $lnVR_{Q_{10}}$ were not strictly log-linear there would be a decrease in average effect size for studies applying higher temperature treatments, because these temperatures are expected to either converge on or cross the thermal maxima of the performance curve causing reaction rates to decelerate or decrease beyond $T_{op}$ [@michaletz2024hotter]. Given that our data included a wide range of species and habitats, we also included a random slope of maximum temperature that varied across species because we expected that species would vary in their thermal performance curves, which would be reflected in experimental treatments. We mean-centered the maximum temperature and included it in our models.

Lastly, all models included a random slope of effect type (acute vs acclimation) to estimate the variance in  the magnitude of plastic changes (acute vs acclimation) across studies. Such an analysis is similar to analyses using an effect size that is a contrast between $lnRR_{Q_{10_{acute}}}$ and $lnRR_{Q_{10_{acclimation}}}$ but is more powerful because it allows studies without acute responses to be included (see *Supplementary Materials*). With acclimation time and maximum temperature as moderators in all our models. 

Accounting for these in our meta-regression models, we proceeded to build separate models that tested our core questions. All estimates from our models are therefore conditioned on an average acclimation time (i.e., `r mean(data_wide$acclim_period, na.rm = TRUE)` days) and an average maximum temperature (i.e., 23°C) across the dataset.We first tested the extent to which acute and acclimation $lnRR_{Q_{10}}$ and $lnVR_{Q_{10}}$ effect sizes varied between habitat types (i.e., terrestrial, freshwater, and marine). Models included an interaction between effect type (i.e., acute or acclimation) and habitat (referred to as “Model 2”). Reduced mean $lnRR_{Q_{10_{acclimation}}}$ relative to $lnRR_{Q_{10_{acute}}}$ indicates that acclimation to thermal environments results in (partial) compensation of physiological rates (i.e., phenotypic plasticity), whereas no differences between $lnRR_{Q_{10_{acute}}}$ and $lnRR_{Q_{10_{acclimation}}}$ indicates that organisms did not acclimate [@Havird2020-mj; @Seebacher2015-wi]. In contrast, a difference in $lnVR_{Q_{10_{acclimation}}}$ relative to $lnVR_{Q_{10_{acute}}}$ would show that changes in between-individual variation differ between acute responses and acclimation responses. 

Second, we tested whether acute and acclimation $lnRR_{Q_{10}}$ and $lnVR_{Q_{10}}$ differed between whole-organism versus biochemical traits across habitats by fitting an model with an interaction between type, habitat and trait category (referred to as "Model 3"). A more detailed trait analysis is presented in the *Supplementary Materials*. We expected that whole-organism traits would be more likely to maintain variation in physiological function and be less likely to acclimate because whole-organism function relies on a greater number of biochemical reactions each with different thermal sensitivities [@fields2001protein; @angilletta2009thermal].

Third, we tested whether different life-stages were more or less likely to acclimate by fitting a model for each habitat type and including an interaction between life-stage ('adult' or 'juvenile') and effect type (referred to as "Model 4"). We predicted that acclimation responses would be more likely early in development compared to later in development as this pattern has been shown in previous studies [e.g.,@moghadam2019heat], but that this should depend on the habitat type given the different constraints faced by different early life stages across major habitat types.

Finally, we tested whether the change in $lnRR_{Q_{10_{acclimation}}}$ and $lnVR_{Q_{10}}$ were predicted by climate variability (CV) (details on climate data can be found in the *Supplementary Materials*). We only used $lnRR_{Q_{10_{acclimation}}}$ and $lnVR_{Q_{10_{acclimation}}}$ for these models because our predictions were specifically focused on acclimation responses; though there were no differences between $lnVR_{Q_{10_{acclimation}}}$ and $lnVR_{Q_{10_{acute}}}$. We fit models that included an interaction between habitat type and thermal coefficient of variability (CV) as moderators (referred to as "Model 5"). We also explored whether environmental predictability explained capacity for acclimation; we estimated predictability as the correlation of temperatures across months at a given location. However, such analyses are challenging to interpret because the temporal scale that is biologically relevant to different organisms will be different making the choice of lag to estimate the correlation difficult to apply across taxa. As such, we report a simple analysis in the *Supplementary Materials* but note that it does not differ from our CV analysis. 

#### *Modelling how climate change can impact relative variance in physiological rates*

To explore the potential consequences of the impacts that human-induced climate change may have on variance in physiological rates we fit a model that included an interaction between acclimation type, habitat type, latitude and longitude (referred to as “Model 6”). We assumed that any change in $lnVR_{Q_{10}}$ across latitude and longitude could vary by habitat type (i.e., an interaction between habitat). We used non-linear tensors for latitude and longitude as any response could be complicated by local factors (e.g., altitude). Our model included random effects of species, trait, phylogeny and study. We predicted the expected change in $lnVR_{Q_{10}}$ for each wild population in our dataset at its specific populations latitude and longitude. We first converted the predicted $lnVR_{Q_{10}}$ to a 1°C change as opposed to 10°C to better map to relevant changes in temperature coinciding with climate change:

$$
lnVR_{Q_{1}} = \frac{lnVR_{Q_{10}}}{10}
$$ {#eq-lCVRpred}

We then multiplied this predicted change by the change in air and sea surface temperatures at the locations of each population (and species) that is expected under high emissions scenarios in 2080.


### *Identifying patterns of among-individual variance in performance curves contributing to variance increases*

Changes in $lnVR_{Q_{10}}$ are expected to depend on differences in the among-individual variation in the thermal performance curves across species [@angilletta2009thermal]. In other words, we expect performance curves to vary among individuals within a population and this variation is expected to co-vary with habitats [@angilletta2009thermal]. To understand how differences in thermal performance curve variation correlate with the empirical patterns of variance change we observe, we conducted a simple simulation as a sensitivity analysis to better understand the characteristics of performance curves that could lead to our observed changes in variance across temperatures and habitats. The simulation varied among-individual variation in performance curves to identify the parameters that could produce the results we observed. To simulate performance curves, we used an asymmetrical Gaussian function [@angilletta2009thermal]:

$$
P_{T} = 2\epsilon^{-\frac{(T-\delta)^2}{2\sigma^2}}\Phi\left(\alpha\frac{T-\delta}{\sigma}\right)
$$ {#eq-sim}

where $T$ is temperature, $\delta$ is the optimal temperature (the temperature where performance is maximized), $\sigma$ the performance breadth, and $\alpha$ the skewness of the curve (see @fig-sim in *Supplementary Materials* for example curves).  We simulated *n* = 1000 individual performance curves by varying the amount of between individual variance on each of the key parameters ($\delta$, $\sigma$) in all possible combinations from 0.01 to 2. We also varied $\alpha$, but this did not impact our conclusions and so we kept among-individual variation fixed for each simulation (at 0.01). From the population of performance curves, we took the standard deviation at two temperatures (18 and 28°C) to calculate $lnVR_{Q_{10}}$ and identify potential parameter spaces that could produce observed patterns in our empirical data. 

```{r lnrrq10}
#| label: lnrrq10
#| echo: false
#| cache: true
#| message: false
#| warning: false
#| include: false

#############
## lnRRQ10 ##
#############
##################################################
# Organise the data and prune tree
##################################################
# Subset the data
lnRRQ10_data <- data_long2 %>% filter(grepl("lnRR", name) & !is.na(effect_size) & !is.na(V) & !V == 0 & !is.na(acclim_period)) %>% 
                              mutate(spp = species_full, c_accl_time = acclim_period - mean(acclim_period, na.rm = TRUE),
                                    max_temp_c = scale(temp_2, scale = FALSE))

# Check and prune tree
tree_lnrr <- tree_checks(data = lnRRQ10_data, tree = tree_p0.7, dataCol = "species_full", type = "prune")
tree_checks(data = lnRRQ10_data, tree = tree_lnrr, dataCol = "species_full", type = "check") # Good

# Create the phylo correlation matrix
phylo_cor <- vcv(tree_lnrr, cor = TRUE)
        A <- vcv(tree_lnrr, cor = FALSE) # For bayes, need cov matrix

# have a quick look on habitat, development and type. Mostly looks sensible but there is not too much data in terrestrial realm.
sum_life <- lnRRQ10_data %>% group_by(life.hist, type, habitat) %>% summarise(n=n()) %>% arrange(habitat)

##################################################
# Grafen mode comparison test with different power
##################################################

rerun = FALSE
if(rerun){
    # Create a list of the distinct trees to loop over
           list  <- list(tree_p0.5, tree_p0.6, tree_p0.7, tree_p0.8, tree_p0.9, tree_p1.0)
    names(list)  <- c("tree_p0.5", "tree_p0.6", "tree_p0.7", "tree_p0.8", "tree_p0.9", "tree_p1.0")
    
    # Create an empty list to store the models
        mod_list <- list()
    
    for(i in 1:length(list)){

    tree_lnrr_phylo <- tree_checks(data = lnRRQ10_data, tree = list[[i]], dataCol = "species_full", type = "prune")
    phylo_cor_phylo <- vcv(tree_lnrr_phylo, cor = TRUE)
       model1_phylo <- metafor::rma.mv(effect_size ~ 1, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_phylo), dfs = "contain", 
                              test = "t", data = lnRRQ10_data) 
             mod_list[[i]] <- model1_phylo 
        names(mod_list)[i] <- names(list)[i]       
        print(paste0("Model using ", names(mod_list)[i], " is finished with ", length(list)-i, " left to run"))
    }

  # Save the model list so that it doesn't need to be re-run again. It takes a LONG time otherwise.
    saveRDS(mod_list, file = "./output/models/lnRRQ10_phylo")

} else {
  
  # Load the model list
    #mod_list <- readRDS("./output/models/lnRRQ10_phylo")

  # Have a look at the AIC of the various models to compare which power paramater is best, if any.
   #aic <- sapply(mod_list, function(x) AIC(x))

}


##################################################
# Model 1.1: Intercept only model. 
##################################################
rerun = FALSE
if(rerun){
  model1.1 <- metafor::rma.mv(effect_size ~ 1, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor), dfs = "contain", 
                              test = "t", data = lnRRQ10_data) 
  
  model1.1_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  1 + (~1 | record_num) + (1 | gr(species_full, cov = A)) + (1 | spp) + (1|trait), data2 = list(A=A), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data)
  
  # Save model1.1
  saveRDS(model1.1, file = "./output/models/lnRRQ10_1.1")
  saveRDS(model1.1_bayes, file = "./output/models/lnRRQ10_1.1_bayes")
} else{ 
  model1.1 <- readRDS("./output/models/lnRRQ10_1.1")
model1.1_bayes <- readRDS("./output/models/lnRRQ10_1.1_bayes")
}

# Heterogeneity analysis
   w <- with(lnRRQ10_data, 1/V) # weights
  sv <- sum(w*(dim(lnRRQ10_data)[1]-1)) / (sum(w)^2 + sum(w^2))

# extract posterior sds, but square them to turn to variance
  posteriors_1.1 <- posterior_samples(model1.1_bayes, pars = c("^sd", "sigma"))^2
  colnames(posteriors_1.1) <- gsub("__Intercept", "", colnames(posteriors_1.1))
  colnames(posteriors_1.1) <- gsub("sd_", "", colnames(posteriors_1.1))
  
    res <- posteriors_1.1[,"sigma"]
   stdy <- posteriors_1.1[,"record_num"]
  phylo <- posteriors_1.1[,"species_full"]
    spp <- posteriors_1.1[,"spp"]
  trait <- posteriors_1.1[,"trait"]
  total <- phylo + spp + res + sv + stdy + trait
 
  # Calculate I2
     tot_i2 <- (sv / total)*100    ; mean(tot_i2)  ; quantile(tot_i2, c(0.025, 0.975))
   phylo_i2 <- (phylo / total)*100 ; mean(phylo_i2); quantile(phylo_i2, c(0.025, 0.975))
     spp_i2 <- (spp / total)*100   ; mean(spp_i2)  ; quantile(spp_i2, c(0.025, 0.975))
    stdy_i2 <- (stdy / total)*100  ; mean(stdy_i2) ; quantile(stdy_i2, c(0.025, 0.975))
   trait_i2 <- (trait / total)*100 ; mean(trait_i2); quantile(trait_i2, c(0.025, 0.975))
     res_i2 <- (res / total)*100   ; mean(res_i2)  ; quantile(res_i2, c(0.025, 0.975))
  
  # Table
     i2_lnrr <- data.frame(name = c("Phylogeny", "Species", "Study", "Trait"),
                           est = c(mean(phylo_i2),mean(spp_i2), mean(stdy_i2), mean(trait_i2)),
                           lci = c(quantile(phylo_i2, c(0.025, 0.975))[1], quantile(spp_i2, c(0.025, 0.975))[1],
                                   quantile(stdy_i2, c(0.025, 0.975))[1], quantile(trait_i2, c(0.025, 0.975))[1]),
                           uci = c(quantile(phylo_i2, c(0.025, 0.975))[2], quantile(spp_i2, c(0.025, 0.975))[2],
                                   quantile(stdy_i2, c(0.025, 0.975))[2], quantile(trait_i2, c(0.025, 0.975))[2]))
     
###################################################
# Model 1.2: Model controlling for acclimation time, 
# type and habitat assuming type can vary by habitat
###################################################

if(rerun){
  # More realistic model with. *** Reviewers want to control for the fact that we want to estimate the difference in effect sizes between acclimation and acute responses at the level of each effect size within each study. We can do this using random slope and will deal with studies where only acclimation is estimated better without loosing power.***
  model1.2 <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + habitat + type:habitat, V = V, 
                              random = list(~1 + type | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor), dfs = "contain", 
                              test = "t", data = lnRRQ10_data)

   
  # Secondary sensitivity analysis that uses cluster robust variance estimation to deal with unaccounted sources of non-independence. Not completely dealing with sharced sampling covariances in data as when collected these data were never indicated in past studies so hard to build full VCV matrix.
   
   model1.2_rve <- robust(model1.2, cluster = lnRRQ10_data$record_num) # Consistent.

  # Baysian model allows us to propagate error better is should be more robust to non-independence. *** Reviewers want to control for the fact that we want to estimate the difference in effect sizes between acclimation and acute responses at the level of each effect size within each study. We can do this using random slope and will deal with studies where only acclimation is estimated better without loosing power.***
   model1.2_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  max_temp_c + c_accl_time + type + habitat + type:habitat + (~1 + type| record_num) + (1 | gr(species_full, cov = A)) + (1 + max_temp_c| spp) + (1|trait), data2 = list(A=A), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data)
                                  
  # Save model1.2
  saveRDS(model1.2, file = "./output/models/lnRRQ10_1.2")
  saveRDS(model1.2_bayes, file = "./output/models/lnRRQ10_1.2_bayes")

  } else{
        model1.2 <- readRDS("./output/models/lnRRQ10_1.2")
  model1.2_bayes <- readRDS("./output/models/lnRRQ10_1.2_bayes")
}

####################################################
## Model 1.2: Bayesian Contrasts
###################################################
  posteriors_1.2 <- posterior_samples(model1.2_bayes, pars = "^b")
  f_acute  <- posteriors_1.2[,"b_Intercept"]; pmcmc(f_acute)
  f_acclim <- posteriors_1.2[,"b_Intercept"] + posteriors_1.2[,"b_typeacclim"]
  m_acute  <- posteriors_1.2[,"b_Intercept"] + posteriors_1.2[,"b_habitatm"]
  m_acclim <- posteriors_1.2[,"b_Intercept"] + posteriors_1.2[,"b_habitatm"] + posteriors_1.2[,"b_typeacclim"] + posteriors_1.2[,"b_typeacclim:habitatm"]
  t_acute  <- posteriors_1.2[,"b_Intercept"] + posteriors_1.2[,"b_habitatt"]
  t_acclim <- posteriors_1.2[,"b_Intercept"] + posteriors_1.2[,"b_habitatt"] + posteriors_1.2[,"b_typeacclim"] + posteriors_1.2[,"b_typeacclim:habitatt"]

# Q10 values for each category. Effect sizes are quite small really
   f_acute_Q10 <- exp(f_acute) ; mean(f_acute_Q10); quantile(f_acute_Q10, c(0.025, 0.975))
  f_acclim_Q10 <- exp(f_acclim); mean(f_acclim_Q10); quantile(f_acclim_Q10, c(0.025, 0.975))
   m_acute_Q10 <- exp(m_acute) ; mean(m_acute_Q10); quantile(m_acute_Q10, c(0.025, 0.975))
  m_acclim_Q10 <- exp(m_acclim); mean(m_acclim_Q10); quantile(m_acclim_Q10, c(0.025, 0.975))
   t_acute_Q10 <- exp(t_acute) ; mean(t_acute_Q10); quantile(t_acute_Q10, c(0.025, 0.975))
  t_acclim_Q10 <- exp(t_acclim); mean(t_acclim_Q10); quantile(t_acclim_Q10, c(0.025, 0.975))

# % change in mean acclimation relative to acute. Note that this is the change in two Q10 contrasts not the % difference between low and high temp (i.e., lnRR)
  # Calculate the mean lnRR for acclimation and acute, then calculate thir difference and make the relative change relative to acute to talk about % reduction in lnRRQ10 in relation to acute.
  change_f <- ((f_acclim - f_acute) / f_acute)*100; quantile(change_f, c(0.025, 0.975)) # 17% reduction in lnRRQ10
  change_m <- ((m_acclim - m_acute) / m_acute)*100; quantile(change_m, c(0.025, 0.975)) # 16% reduction in lnRRQ10
  change_t <- ((t_acclim - t_acute) / t_acute)*100; quantile(change_t, c(0.025, 0.975))
  avg_change <- (change_f + change_m + change_t) / 3; quantile(avg_change, c(0.025, 0.975)) # Could use weighted mean, but for now this seems fine.
  
  # First get sample sizes
    N <- lnRRQ10_data %>% group_by(habitat, type) %>% summarise(n=n())
  
  # Calculated weighted mean by sample size. 
    f_RR_mean <- (f_acute * N[1,"n"][[1]] + f_acclim * N[2,"n"][[1]]) / sum(N[1:2, "n"]); pmcmc(f_RR_mean)
    m_RR_mean <- (m_acute * N[3,"n"][[1]] + m_acclim * N[3,"n"][[1]]) / sum(N[3:4, "n"]); pmcmc(m_RR_mean)
    t_RR_mean <- (t_acute * N[5,"n"][[1]] + t_acclim * N[6,"n"][[1]]) / sum(N[5:6, "n"]); pmcmc(t_RR_mean)

  # Rates differ?
    t_f_rates <- (t_RR_mean - f_RR_mean)
    t_m_rates <- (t_RR_mean - m_RR_mean)

####################################################
# Model 1.3's: Trait type varied by acclimation type
# but data is separated by habitat to simplify
####################################################
  # Add two general trait categories to test for trait differences (whole-organism vs biochemical)
    lnRRQ10_data <- lnRRQ10_data %>% 
                    mutate(trait_broad = ifelse(trait_category %in% c("cardiac", "rest_MR", "sprint", "muscle", "endurance", "max_MR"), 
                                                "tissue/organism",
                                         ifelse(trait_category %in% c("ATPase", "metabolic_enzyme", "antiox", "mito_oxidation", "mito_leak"), 
                                                "biochemical", trait_category)))
  
  # Filter to different habitats
   lnRRQ10_data_m <- lnRRQ10_data %>% filter(habitat == "m" & trait_broad != "other") 
   lnRRQ10_data_f <- lnRRQ10_data %>% filter(habitat == "f" & trait_broad != "other") 
   lnRRQ10_data_t <- lnRRQ10_data %>% filter(habitat == "t" & trait_broad != "other")
  
  # Prune tree
   tree_m <- tree_checks(lnRRQ10_data_m, tree = tree_lnrr, dataCol = "species_full", type = "prune")
   tree_f <- tree_checks(lnRRQ10_data_f, tree = tree_lnrr, dataCol = "species_full", type = "prune")
   tree_t <- tree_checks(lnRRQ10_data_t, tree = tree_lnrr, dataCol = "species_full", type = "prune")
   
   # cor matrices
   m_phylo <- vcv(tree_m, corr = TRUE)
       A_m <- vcv(tree_m, corr = FALSE)
   f_phylo <- vcv(tree_f, corr = TRUE)
       A_f <- vcv(tree_f, corr = FALSE)
   t_phylo <- vcv(tree_t, corr = TRUE)
       A_t <- vcv(tree_t, corr = FALSE)
    
if(rerun){
  
#################################
  # Broad Trait Category Models
  # Subset to only trait categories 
  # that are clear. Remove 'other'
#################################
  # Full Bayesian model   
   model1.3_btrait_bayes <- brms::brm(effect_size | se(sqrt(V)) ~  max_temp_c + c_accl_time + type*trait_broad*habitat + 
                                           (1 + type | record_num) + 
                                           (1 | gr(species_full, cov = A)) + 
                                           (1 + max_temp_c | spp) +(1|trait) + 
                                           (1 + trait_broad |gr(obs, cor = FALSE)),  
                                         data2 = list(A=A), family = gaussian(), 
                                         prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), 
                                         control = list(adapt_delta = 0.98, max_treedepth = 12), 
                                         chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = filter(lnRRQ10_data, trait_broad != "other"))
    saveRDS(model1.3_btrait_bayes, "./output/models/model1.3_btrait_bayes")
    
  # Metafor models for creating plots. Subset by habitat to make this easier. **NOTE: For these models we are only able to include two random slopes. Metafor does not allow additional terms. Given that trait type slope is in Bayeisan model and it doesn't generally impact things much we will not include it here givem these models just make it more convient to plot.
      # Marine
         model1.3_m_broad <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_broad + type:trait_broad, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 + trait_broad| obs),
                              R = list(species_full = m_phylo), dfs = "contain", 
                              test = "t", struct = c("GEN","HCS"),  phi = 0,
                              data = lnRRQ10_data_m)
         saveRDS(model1.3_m_broad, "./output/models/model1.3_m_broad")
    
      # Freshwater
         model1.3_f_broad <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_broad + type:trait_broad, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 + trait_broad| obs),
                              R = list(species_full = f_phylo), dfs = "contain", 
                              test = "t", struct = c("GEN","HCS"), phi = 0,
                              data = lnRRQ10_data_f)
          saveRDS(model1.3_f_broad, "output/models/model1.3_f_broad")
      
      # Terrestrial
         model1.3_t_broad <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_broad + type:trait_broad, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 + trait_broad| obs),
                              R = list(species_full = t_phylo), dfs = "contain", 
                              test = "t", struct = c("GEN","HCS"), phi = 0,
                              data = lnRRQ10_data_t)
         saveRDS(model1.3_t_broad, "output/models/model1.3_t_broad")
          
  } else{
    model1.3_btrait_bayes <- readRDS("./output/models/model1.3_btrait_bayes")
         model1.3_m_broad <- readRDS("./output/models/model1.3_m_broad")
         model1.3_f_broad <- readRDS("./output/models/model1.3_f_broad")
         model1.3_t_broad <- readRDS("./output/models/model1.3_t_broad")
}

###########################################################
  # Processing Bayesian Posteriors
###########################################################
      # Create new data for predictions
       trait_b_data <- data.frame(  type = c("acclim", "acute"),
                              max_temp_c = 0,
                             c_accl_time = 0,
                                       V = 0,
                                 habitat = rep(c("t", "m", "f"), each = 4),
                             trait_broad = rep(c("tissue/organism", "biochemical"), each = 2))     
      
       # Predict from model. Note this is the summary.
         pred_lnrr_traitb <- fitted(model1.3_btrait_bayes, 
                                     newdata = trait_b_data, re_formula = NA,
                                     summary = TRUE, 
                                     robust = FALSE)
         pred_lnrr_traitb <- cbind(trait_b_data, pred_lnrr_traitb)
    
       # Predict to get the posterior. Note that we have the full posterior distribution here for each of the 12 categories in the new data. Here, we want to look at the difference between acute and acclimation within each of the categories. 
            pred_lnrr_trait_post <- fitted(model1.3_btrait_bayes, 
                                     newdata = trait_b_data, re_formula = NA,
                                     summary = FALSE, 
                                     robust = FALSE)
        contrast_lnrr_trait_post <-  pred_lnrr_trait_post[,c(1,3,5,7,9,11)] - pred_lnrr_trait_post[,c(2,4,6,8,10,12)] # Acclimation - acute.
            
        # Contrast statistics
            contrast_lnrr_trait_stats <- data.frame( habitat = rep(c("t", "m", "f"), each = 2),
                                                     trait = rep(c("tissue/organism", "biochemical"), each = 1),
                                                    diff = sapply(data.frame(contrast_lnrr_trait_post), mean),
                                                     l95 = sapply(data.frame(contrast_lnrr_trait_post), function(x) quantile(x, 0.025)),
                                                     u95 = sapply(data.frame(contrast_lnrr_trait_post), function(x) quantile(x, 0.975)),
                                                       p = sapply(data.frame(contrast_lnrr_trait_post), function(x) p_value(pmcmc(x))))
       # Contrasts for pooled acute and acclimation across trait categories
            
            contrast_lnrr_trait_cat_stats <- rbind(get_whole_bio(pred_lnrr_trait_post, habitat = "t", trait_b_data),
                                                        get_whole_bio(pred_lnrr_trait_post, habitat = "m", trait_b_data),
                                                        get_whole_bio(pred_lnrr_trait_post, habitat = "f", trait_b_data))
###########################################################
## Model 1.4 - whether chance between q10 depends on life stage and habitat
###########################################################
rerun = FALSE
if(rerun){
  # More realistic model with 
  model1.4 <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type*habitat*life.hist, V = V, 
                              random = list(~1 + type | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor), dfs = "contain", 
                              test = "t", data = lnRRQ10_data)

  
   model1.4_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  max_temp_c + c_accl_time + type*habitat*life.hist + (1 + type| record_num) + (1 | gr(species_full, cov = A)) + (1 + max_temp_c| spp) + (1|trait), data2 = list(A=A), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data)
                                  
  # Save model1.4
  saveRDS(model1.4, file = "./output/models/lnRRQ10_1.4")
  saveRDS(model1.4_bayes, file = "./output/models/lnRRQ10_1.4_bayes")

  } else{
        model1.4 <- readRDS("./output/models/lnRRQ10_1.4")
  model1.4_bayes <- readRDS("./output/models/lnRRQ10_1.4_bayes")
}
 
#######################################################################
# Bayesian posteriors from model 1.4
#######################################################################
 # Create the data we want to make predictions for. Just more intuitive
  newdata <- data.frame( c_accl_time = 0, 
                          max_temp_c = 0, 
                                type = relevel(factor(c("acclim", "acute")), ref = "acute"), 
                             habitat = rep(c("m", "f", "t"), each = 4), 
                           life.hist = rep(c("j", "a"), each = 2))
  
# Calculate the design matrix using this new data. Need to be careful here to check that the levels are set up the same as the posterior.
  X <- model.matrix(~max_temp_c + c_accl_time + type*habitat*life.hist, data = newdata) 

# Extract posteriors
  posteriors_1_4 <- posterior_samples(model1.4_bayes, pars = "^b")

# Now we can do all the calculations in one shot.
         pred <- apply(t(posteriors_1_4), 2, function(x) as.matrix(X)%*%x)
     sum_pred <- apply(pred, 1, function(x) mean(x))
  sum_predL95 <- apply(pred, 1, function(x) quantile(x, 0.025))
  sum_predU95 <- apply(pred, 1, function(x) quantile(x, 0.975))
            p <- apply(pred, 1, function(x) p_value(pmcmc(x)))

  # Create a summary dataset. 
  newdata <- cbind(newdata, est = sum_pred, L = sum_predL95, u = sum_predU95, p = p)  

# Now, lets calculate the contrasts between acute and acclim for a and j within each habitat. We need to use pred for that because it's the entire posterior distribution
############
    # Contrast between Acclimation and Acute WITHIN each life-history stage. Double checked a bunch of calculations to make sure the right contrasts were being done. 
############
  contrast_lnrr_lh_post <-  pred[c(1,3,5,7,9,11),] - pred[c(2,4,6,8,10,12),] # Acclimation - acute.
            
        # Contrast statistics
            contrast_stage_lnrr_lh_stats <- data.frame( habitat = rep(c("m", "f", "t"), each = 2),
                                                     stage = rep(c("j", "a"), each = 1),
                                                    diff = apply(data.frame(contrast_lnrr_lh_post), 1, mean),
                                                     l95 = apply(data.frame(contrast_lnrr_lh_post), 1, function(x) quantile(x, 0.025)),
                                                     u95 = apply(data.frame(contrast_lnrr_lh_post), 1, function(x) quantile(x, 0.975)),
                                                       p = apply(data.frame(contrast_lnrr_lh_post), 1, function(x) p_value(pmcmc(x))))
############
    # Contrast between Acclimation and Acute ACROSS each life-history stage. Double checked a bunch of comparisons.
############
          contrast_lnrr_lh_post_type <-  pred[c(4,3,8,7,12,11),] - pred[c(2,1,6,5,10,9),] # Adult - Jeu.
            
        # Contrast statistics
            contrast_type_lnrr_lh_stats <- data.frame( habitat = rep(c("m", "f", "t"), each = 2),
                                                     type = rep(c("acute", "acclim"), each = 1),
                                                    diff = apply(data.frame(contrast_lnrr_lh_post_type), 1, mean),
                                                     l95 = apply(data.frame(contrast_lnrr_lh_post_type), 1, function(x) quantile(x, 0.025)),
                                                     u95 = apply(data.frame(contrast_lnrr_lh_post_type), 1, function(x) quantile(x, 0.975)),
                                                       p = apply(data.frame(contrast_lnrr_lh_post_type), 1, function(x) p_value(pmcmc(x))))
    
  # Acute differences between a and j across all habitats
     acute_all_lh <- c(contrast_lnrr_lh_post_type[1,], contrast_lnrr_lh_post_type[3,], contrast_lnrr_lh_post_type[5,]) 
    acclim_all_lh <- c(contrast_lnrr_lh_post_type[2,], contrast_lnrr_lh_post_type[4,], contrast_lnrr_lh_post_type[6,])

  # Contrast adult vs juv across habitats regardless of the acute/acclim
               contrast_lnrr_lh_cat_stats <- rbind(get_lifestage(pred, habitat = "t", newdata),
                                                   get_lifestage(pred, habitat = "m", newdata),
                                                   get_lifestage(pred, habitat = "f", newdata))
               
####################################################
# Sensitivity analysis -- Do Acute Q10's (hot / cold) differ?
####################################################
 # Goal here is to test the assumption that acute Q10's are different or not. Note Reviewer wanted more analysis in this space so added additional models
 lnRRQ10_data_acute <-  lnRRQ10_data %>% filter(grepl("acute", name))

 if(rerun){ 
    model1.s1 <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + name, V = V, 
                              random = list(~1 + name | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_acute, control = list(optimizer = "bobyqa"))
    saveRDS(model1.s1, file = "./output/models/model1.s1")

    model1.s1_int <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + name*habitat, V = V, 
                              random = list(~1 + name | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_acute, control = list(optimizer = "bobyqa"))
    saveRDS(model1.s1_int, file = "./output/models/model1.s1_int")

    AIC(model1.s1_int, model1.s1) # AIC better for non-interaction model

    # Bayesian models to check its the same result
    model1.s1_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  max_temp_c + c_accl_time + name + (~1 + name| record_num) + (1 | gr(species_full, cov = A)) + (1 + max_temp_c| spp) + (1|trait), data2 = list(A=A), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data_acute)
    
    saveRDS(model1.s1_bayes, file = "./output/models/model1.s1_bayes")

    model1.s1_bayes_int <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  max_temp_c + c_accl_time + name*habitat + (~1 + name | record_num) + (1 | gr(species_full, cov = A)) + (1 + max_temp_c| spp) + (1|trait), data2 = list(A=A), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data_acute)
    
    saveRDS(model1.s1_bayes_int, file = "./output/models/model1.s1_bayes_int")

} else{
            model1.s1 <-  readRDS(file = "./output/models/model1.s1")
            model1.s1_int <-  readRDS(file = "./output/models/model1.s1_int")
      model1.s1_bayes <- readRDS(file= "./output/models/model1.s1_bayes")
}

post_acute <- posterior_samples(model1.s1_bayes, pars = "^b")
  hot_acute <- post_acute[,"b_Intercept"] + post_acute[,"b_namelnRR_Q10_acute_t2"]
  cold_acute <- post_acute[,"b_Intercept"]
  change_acute <- post_acute[,"b_namelnRR_Q10_acute_t2"]

n_acutes <- lnRRQ10_data_acute  %>% group_by(name, habitat) %>% summarise(n = n(), stdy = n_distinct(record_num), spp = n_distinct(species_full))  %>% arrange(habitat)

```

## **Results**

### *Data Summary*

The final dataset included a total of `r f <- taxa_sum |> dplyr::filter(habitat == "f") |> dplyr::summarise(spp = sum(spp), k = sum(n)); f[1,1]` freshwater (fishes = `r taxa_sum |> dplyr::filter(habitat == "f" & class == "Actinopterygii") |> dplyr::summarise(sp = sum(spp))`, molluscs = `r taxa_sum |> dplyr::filter(habitat == "f" & phylum == "Mollusca") |> dplyr::summarise(sp = sum(spp))`, amphibians = `r taxa_sum |> dplyr::filter(habitat == "f" & class == "Amphibia") |> dplyr::summarise(sp = sum(spp))`, reptiles = `r taxa_sum |> dplyr::filter(habitat == "f" & class == "Reptilia") |> dplyr::summarise(sp = sum(spp))`, arthropods = `r taxa_sum |> dplyr::filter(habitat == "f" & phylum == "Arthropoda") |> dplyr::summarise(sp = sum(spp))`, and a single crustacean and nematode species), `r m <- taxa_sum |> dplyr::filter(habitat == "m") |> dplyr::summarise(spp = sum(spp), k = sum(n)); m[1,1]` marine (fishes = `r taxa_sum |> dplyr::filter(habitat == "m" & class %in% c("Actinopterygii", "Agnatha","Chondrichthyes")) |> dplyr::summarise(sp = sum(spp))`, annelids = `r taxa_sum |> dplyr::filter(habitat == "m" & phylum == "Annelida") |> dplyr::summarise(sp = sum(spp))`, molluscs = `r taxa_sum |> dplyr::filter(habitat == "m" & phylum == "Mollusca") |> dplyr::summarise(sp = sum(spp))`, echinoderms = `r taxa_sum |> dplyr::filter(habitat == "m" & phylum == "Echinodermata") |> dplyr::summarise(sp = sum(spp))`, reptiles = `r taxa_sum |> dplyr::filter(habitat == "m" & class == "Reptilia") |> dplyr::summarise(sp = sum(spp))`, arthropods = `r taxa_sum |> dplyr::filter(habitat == "m" & phylum == "Arthropoda") |> dplyr::summarise(sp = sum(spp))`, and a single crustacean and cnidarian species), and `r t <- taxa_sum |> dplyr::filter(habitat == "t") |> dplyr::summarise(spp = sum(spp), k = sum(n)); t[1,1]` terrestrial species (annelids = `r taxa_sum |> dplyr::filter(habitat == "t" & phylum == "Annelida") |> dplyr::summarise(sp = sum(spp))`, molluscs = `r taxa_sum |> dplyr::filter(habitat == "t" & phylum == "Mollusca") |> dplyr::summarise(sp = sum(spp))`, arthropods = `r taxa_sum |> dplyr::filter(habitat == "t" & phylum == "Arthropoda") |> dplyr::summarise(sp = sum(spp))`, reptiles = `r taxa_sum |> dplyr::filter(habitat == "t" & class == "Reptilia") |> dplyr::summarise(sp = sum(spp))` and amphibians = `r taxa_sum |> dplyr::filter(habitat == "t" & class == "Amphibia") |> dplyr::summarise(sp = sum(spp))` along with a single tardigrade species) (@fig-phylo). We had more data on acute thermal responses (n = `r trimmed <- data_long2 |> dplyr::filter(grepl("lnRR", name) & !is.na(effect_size) & !is.na(V) & !V == 0); sum1 = trimmed |> dplyr::group_by(name, type) |> dplyr::summarise(n = dplyr::n()) |> dplyr::filter(type =="acute"); sum(sum1$n)`) compared to acclimation responses (n = `r sum2 <- trimmed |> dplyr::group_by(name, type) |> dplyr::summarise(n = dplyr::n()) |> dplyr::filter(type =="acclim"); sum2$n`) because acute responses were reported for each of the two acclimation temperatures (@fig-phylo). The two acute $lnRR_{Q_{10}}$ effect sizes ([@fig-concept]A) differed significantly from each other ($\beta$ = `r mean(change_acute)`, 95% CI: `r quantile(change_acute, 0.025)` to `r quantile(change_acute, 0.975)`, $p_{MCMC}$ = `r p_value(pmcmc(change_acute))`) with animals acclimated to high temperatures having slightly higher average $lnRR_{Q_{10}}$ ($\mu$ = `r mean(hot_acute)`, 95% CI: 95% CI: `r quantile(hot_acute, 0.025)` to `r quantile(hot_acute, 0.975)`, $p_{MCMC}$ = `r p_value(pmcmc(hot_acute))`, $Q_{10}$ = `r mean(exp(hot_acute))`) compared to animals at lower temperatures ($\mu$ = `r mean(cold_acute)`, 95% CI: 95% CI: `r quantile(cold_acute, 0.025)` to `r quantile(cold_acute, 0.975)`, $p_{MCMC}$ = `r p_value(pmcmc(cold_acute))`, $Q_{10}$ = `r mean(exp(cold_acute))`) (@fig-Sacute). However, on average they were in the same direction and only differed by ~10%. Hence, we averaged the two acute $lnRR_{Q_{10}}$ effect sizes in subsequent analyses.

Most of the effect size estimates came from measurements of metabolic rates (both resting and maximal -- $N_{species}$ = `r mr <- traits_all |> dplyr::filter(trait_category %in% c("rest_MR", "max_MR")); sum(mr[,"spp_n"])`, $N_{effects}$ = `r sum(mr[,"k"])`), metabolic enzyme rates ($N_{species}$ = `r me <- traits_all |> dplyr::filter(trait_category %in% c("metabolic_enzyme", "ATPase")); sum(me[,"spp_n"])`, $N_{effects}$ = `r me <- traits_all |> dplyr::filter(trait_category %in% c("metabolic_enzyme", "ATPase")); sum(me[,"k"])`) and whole-organism performance traits (i.e., measures of locomotor speed and endurance -- $N_{species}$ = `r per <- traits_all |> dplyr::filter(trait_category %in% c("sprint", "endurance")); sum(per[,"spp_n"])`, $N_{effects}$ = `r per <- traits_all |> dplyr::filter(trait_category %in% c("sprint", "endurance")); sum(per[,"k"])`).

```{r, fig-phylo}
#| label: fig-phylo
#| echo: false
#| fig-cap: "Phylogenetic distribution of acute and acclimation $lnRR_{Q_{10}}$ and $lnVR_{Q_{10}}$ estimates across major habitats.  The total number of acute and acclimation $lnRR_{Q_{10}}$ and $lnVR_{Q_{10}}$ effect sizes are indicated by the coloured bars, and the colouring at the tips of the phylogeny indicates marine, freshwater, and terrestrial habitats. Silhouettes are only representative taxa of major clades within the tree."

##################
  # Figure 2 plot
  # Phylogeny
##################
   # Map data to tree. Just one variable for now
      d <- ggtree(tree, layout="circular") %<+% tree_data 

      # Plot the tree

       col <- c("#0871B9", "#F3B40D", "#1BB908")
      p1 <- d + 
            #geom_tiplab(size=2, offset = 10) + 
            geom_tippoint(aes(color=habitat), size = 2.5) +
            labs(color = "Habitat") + 
            scale_colour_manual(values = col)
      
      # Create the data matrix that can be used to plot data as a heatmap around the phylogeny
      matrix_data <- as.data.frame(data_wide %>%
                  mutate(trait_category = ifelse(trait_category %in% 
                                                   c("ATPase", "mito_leak", "mito_oxidation"), "Mito. Function", trait_category)) %>%
                  mutate(trait_category = ifelse(trait_category %in% c("endurance", "sprint"), "Performance", trait_category))    %>%
                  mutate(trait_category = ifelse(trait_category %in% c("muscle", "cardiac"), "Muscle Function", trait_category))  %>%
                  mutate(trait_category = ifelse(trait_category %in% c("rest_MR", "max_MR"), "Metabolic Rate", trait_category))   %>%
                  group_by(species_full, trait_category)   %>% 
                  summarise(n = n())                       %>% 
                  spread(trait_category, n, fill = 0))
      
      row.names(matrix_data) <- matrix_data$species_full
      matrix_data <- matrix_data[,c(2:8)]
      
      colnames(matrix_data)[c(1,3,6)] <- c("Antioxidants", "Metabolic Enzymes", "Other")
      
      # Alternatively, summarise total effect sizes per species for acute and acclimation
      matrix_data2 <- data_long %>% filter(grepl("lnRR_Q10", name)) %>% 
                      group_by(species_full, type) %>% 
                      summarise(n = n()) %>% 
                      spread(type, n, fill = 0) %>% data.frame()
                     # mutate(acclim = as.character(cut(acclim, breaks = c(0,15, 20, 25, 30, 40, 50))),
                      #        acute = as.character(cut(acute, breaks = c(0,15, 20, 25, 30, 40, 50)))) 
                      
      row.names(matrix_data2) <- matrix_data2$species_full
      matrix_data2 <- matrix_data2[,2:3]
      
      
      # Plot a heatmap of N for each trait around the phylogeny.
   phylo <-   gheatmap(p1, data.matrix(matrix_data2), offset = 0,  colnames = FALSE, 
               colnames_position="bottom", legend_title = "N", 
               colnames_angle=360, colnames_offset_y = 0, colnames_offset_x = -1.5, 
               hjust=0, font.size=3, width = 0.35) + 
                scale_fill_viridis(alpha = 0.6) + labs(fill="# of Effects") + theme(legend.text =element_text(size = 24),
                                                                                    legend.title = element_text(size = 30, face = "bold"))
   
  #ggsave(filename = "fig2_unedited_18June.pdf", path = "./output/figures/", phylo, device = "pdf", width = 10, height = 9, units = "in")

# Load and plot Figure 1. Note that this figure was derived using 3 separate code chunks described below. Figures were exported, imported into Adobe Illustrator for minor formatting changes and grid organisation. 
  fig2 <- image_read("./output/figures/Fig2.png")
  plot(fig2)

```

### *Terrestrial and aquatic ectotherms differ in their capacity to acclimate but acclimation does not depend on life-history stage*

Results from "Model 1" (see “Meta-Analysis” above) show that effect heterogeneity was high (only `r mean(tot_i2)`\% of the variance was the result of sampling variability, 95\% CI: `r quantile(tot_i2, 0.025)[1]` to `r quantile(tot_i2, 0.975)[1]`\%), and most variance was explained by the specific study and type of trait (Study: `r mean(stdy_i2)`\% , 95\% CI: `r quantile(stdy_i2, 0.025)[1]` to `r quantile(stdy_i2, 0.975)[1]`\%; Trait Type: `r mean(trait_i2)`\% , 95\% CI: `r quantile(trait_i2, 0.025)[1]` to `r quantile(trait_i2, 0.975)[1]`\%). Evolutionary relationships among taxa and species ecology (i.e., species random effect) explained little variation in acute and acclimation responses (Species: `r mean(spp_i2)`\%, 95\% CI: `r quantile(spp_i2, 0.025)[1]` to `r quantile(spp_i2, 0.975)[1]`\%; Phylogeny: `r mean(phylo_i2)`\% , 95\% CI: `r quantile(phylo_i2, 0.025)[1]` to `r quantile(phylo_i2, 0.975)[1]`\%). These patterns were similar for $lnVR_{Q_{10}}$ (see *Supplementary Materials*, @fig-s3).

Physiological rates increased more in terrestrial ectotherms ($\mu$ = `r mean(t_RR_mean)`, 95\% CI: `r quantile(t_RR_mean, 0.025)` to `r quantile(t_RR_mean, 0.975)`) compared to marine ($\mu$ = `r mean(m_RR_mean)`, 95\% CI: `r quantile(m_RR_mean, 0.025)` to `r quantile(m_RR_mean, 0.975)`) and freshwater ectotherms ($\mu$ = `r mean(f_RR_mean)`, 95\% CI: `r quantile(f_RR_mean, 0.025)` to `r quantile(f_RR_mean, 0.975)`), but did not differ significantly between aquatic and terrestrial habitats (Terrestrial - Marine: $\beta$ = `r mean(t_m_rates)`, 95\% CI: `r quantile(t_m_rates, 0.025)` to `r quantile(t_m_rates, 0.975)`, $p_{MCMC}$ = `r p_value(pmcmc(t_m_rates))`; Terrestrial - Freshwater: $\beta$ = `r mean(t_f_rates)`, 95\% CI: `r quantile(t_f_rates, 0.025)` to `r quantile(t_f_rates, 0.975)`, $p_{MCMC}$ = `r p_value(pmcmc(t_f_rates))`) ("Model 2"). However, capacity for acclimation depended on the habitat. Ectotherms in marine and freshwater environments showed partial compensation of physiological rates ([@fig-2]A) amounting to reduced $lnRR_{Q_{10_{acclimation}}}$ of `r abs(mean(change_f))`\% (95\% CI: `r quantile(change_f, c(0.025, 0.975))[1]` to `r quantile(change_f, c(0.025, 0.975))[2]`) in freshwater and `r abs(mean(change_m))`\% (95\% CI: `r quantile(change_m, c(0.025, 0.975))[1]` to `r quantile(change_m, c(0.025, 0.975))[2]`) in marine environments. In contrast, terrestrial ectotherms showed no acclimation with a `r abs(mean(change_t))`\% increase in $lnRR_{Q_{10_{acclimation}}}$ (95\% CI: `r quantile(change_t, c(0.025, 0.975))[1]` to `r quantile(change_t, c(0.025, 0.975))[2]`, [@fig-2]A). 

Acclimation capacity did not vary consistently by life-history stage with no differences in $lnRR_{Q_{10_{acclimation}}}$ and $lnRR_{Q_{10_{acute}}}$ between adult and juveniles, except for marine habitats where adults acclimated to a greater extent ("Model 4"; [@fig-cvrlh]A-C). Averaging over acute and acclimation effects there were also no differences between adults and juveniles within habitats (Adult-Juvenile: Terrestrial: `r contrast_lnrr_lh_cat_stats[1,3]`, 95\% CI: `r contrast_lnrr_lh_cat_stats[1,4]` to `r contrast_lnrr_lh_cat_stats[1,5]`, $p_{MCMC}$ = `r contrast_lnrr_lh_cat_stats[1,6]`; Marine: `r contrast_lnrr_lh_cat_stats[2,3]`, 95\% CI: `r contrast_lnrr_lh_cat_stats[2,4]` to `r contrast_lnrr_lh_cat_stats[2,5]`, $p_{MCMC}$ = `r contrast_lnrr_lh_cat_stats[2,6]`; Freshwater: `r contrast_lnrr_lh_cat_stats[3,3]`, 95\% CI: `r contrast_lnrr_lh_cat_stats[3,4]` to `r contrast_lnrr_lh_cat_stats[3,5]`, $p_{MCMC}$ = `r contrast_lnrr_lh_cat_stats[3,6]`).

```{r, lnvrq10}
#| label: lnvrq10
#| echo: false
#| warning: false
#| error: false
#| include: false
#| cache: true

#############
  ## lnVRQ10
#############
##################################################
  # Organise the data and prune tree
#################################################
  lnVRQ10_data <- data_long2 %>% filter(grepl("lnVR", name) & !is.na(effect_size) & !is.na(V) & !V == 0 & !is.na(acclim_period)) %>% 
                              mutate(spp = species_full, c_accl_time = acclim_period - mean(acclim_period, na.rm = TRUE),
                                    max_temp_c = scale(temp_2, scale = FALSE))

# Check and prune tree
  tree_lnVR <- tree_checks(data = lnVRQ10_data, tree = tree_p0.7, dataCol = "species_full", type = "prune")
  tree_checks(data = lnVRQ10_data, tree = tree_lnVR, dataCol = "species_full", type = "check") # Good

# Create the phylo correlation matrix
  phylo_cor_VR <- vcv(tree_lnVR, cor = TRUE)
          A_VR <- vcv(tree_lnVR, cor = FALSE) # For bayes, need cov matrix

# First get sample sizes
    N <- lnVRQ10_data %>% group_by(habitat, type) %>% summarise(n=n())
  
###################################################
  # Model 3.1: Intercept only model.
  # Used for heterogeneity analysis
###################################################
rerun = FALSE
if(rerun){
  model3.1 <- metafor::rma.mv(effect_size ~ 1, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_VR), dfs = "contain", 
                              test = "t", data = lnVRQ10_data) 
  
  model3.1_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  1 + (~1 | record_num) + (1 | gr(species_full, cov = A_VR)) + (1 | spp) + (1|trait), data2 = list(A_VR=A_VR), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnVRQ10_data)
  
  # Save model1.1
  saveRDS(model3.1, file = "./output/models/lnVRQ10_3.1")
  saveRDS(model3.1_bayes, file = "./output/models/lnVRQ10_3.1_bayes")
} else{ 
        model3.1 <- readRDS("./output/models/lnVRQ10_3.1")
  model3.1_bayes <- readRDS("./output/models/lnVRQ10_3.1_bayes")
}

# Heterogeneity analysis
   w_VR <- with(lnVRQ10_data, 1/V) # weights
  sv_VR <- sum(w_VR*(dim(lnVRQ10_data)[1]-1)) / (sum(w_VR)^2 + sum(w_VR^2))

# extract posterior sds, but square them to turn to variance
  posteriors_3.1 <- posterior_samples(model3.1_bayes, pars = c("^sd", "sigma"))^2
  colnames(posteriors_3.1) <- gsub("__Intercept", "", colnames(posteriors_3.1))
  colnames(posteriors_3.1) <- gsub("sd_", "", colnames(posteriors_3.1))
  
    res_VR <- posteriors_3.1[,"sigma"]
   stdy_VR <- posteriors_3.1[,"record_num"]
  phylo_VR <- posteriors_3.1[,"species_full"]
    spp_VR <- posteriors_3.1[,"spp"]
  trait_VR <- posteriors_3.1[,"trait"]
  total_VR <- phylo_VR + spp_VR + res_VR + sv_VR + stdy_VR + trait_VR
 
  # Calculate I2
     tot_i2_VR <- (sv_VR / total_VR)*100    ; mean(tot_i2_VR)  ; quantile(tot_i2_VR, c(0.025, 0.975))
   phylo_i2_VR <- (phylo_VR / total_VR)*100 ; mean(phylo_i2_VR); quantile(phylo_i2_VR, c(0.025, 0.975))
     spp_i2_VR <- (spp_VR / total_VR)*100   ; mean(spp_i2_VR)  ; quantile(spp_i2_VR, c(0.025, 0.975))
    stdy_i2_VR <- (stdy_VR / total_VR)*100  ; mean(stdy_i2_VR) ; quantile(stdy_i2_VR, c(0.025, 0.975))
   trait_i2_VR <- (trait_VR / total_VR)*100 ; mean(trait_i2_VR); quantile(trait_i2_VR, c(0.025, 0.975))
     res_i2_VR <- (res_VR / total_VR)*100   ; mean(res_i2_VR)  ; quantile(res_i2_VR, c(0.025, 0.975))
  
  # Table
     i2_lnVR <- data.frame(name = c("Phylogeny", "Species", "Study", "Trait"),
                           est = c(mean(phylo_i2_VR),mean(spp_i2_VR), mean(stdy_i2_VR), mean(trait_i2_VR)),
                           lci = c(quantile(phylo_i2_VR, c(0.025, 0.975))[1], quantile(spp_i2_VR, c(0.025, 0.975))[1],
                                   quantile(stdy_i2_VR, c(0.025, 0.975))[1], quantile(trait_i2_VR, c(0.025, 0.975))[1]),
                           uci = c(quantile(phylo_i2_VR, c(0.025, 0.975))[2], quantile(spp_i2_VR, c(0.025, 0.975))[2],
                                   quantile(stdy_i2_VR, c(0.025, 0.975))[2], quantile(trait_i2_VR, c(0.025, 0.975))[2]))  
  
###################################################
  # Model 3.2: Model controlling for acclimation time, 
  # type and habitat assuming type can vary by habitat
###################################################

if(rerun){
  # More realistic model 
  model3.2 <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + habitat + type:habitat, V = V, 
                              random = list(~1 + type | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_VR), dfs = "contain", 
                              test = "t", data = lnVRQ10_data)
  
   model3.2_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  max_temp_c + c_accl_time + type + habitat + type:habitat + 
        (1 + type| record_num) + 
        (1 | gr(species_full, cov = A_VR)) + 
        (1 + max_temp_c| spp) + 
        (1|trait), 
        data2 = list(A_VR=A_VR), family = gaussian(), 
        prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), 
        control = list(adapt_delta = 0.98, max_treedepth = 12), 
        chains = 4, thin = 5, iter = 8000, warmup = 1000, cores = 4, data = lnVRQ10_data)
                              
  # Save model1.2
  saveRDS(model3.2, file = "./output/models/lnVRQ10_3.2")
  saveRDS(model3.2_bayes, file = "./output/models/lnVRQ10_3.2_bayes")

  } else{
        model3.2 <- readRDS("./output/models/lnVRQ10_3.2")
  model3.2_bayes <- readRDS("./output/models/lnVRQ10_3.2_bayes")
}

######################################################
  # Bayesian Contrasts
######################################################

  posteriors_3.2 <- posterior_samples(model3.2_bayes, pars = "^b")
  f_acute_VR  <- posteriors_3.2[,"b_Intercept"]; pmcmc(f_acute_VR)
  f_acclim_VR <- posteriors_3.2[,"b_Intercept"] + posteriors_3.2[,"b_typeacclim"]
  m_acute_VR  <- posteriors_3.2[,"b_Intercept"] + posteriors_3.2[,"b_habitatm"]
  m_acclim_VR <- posteriors_3.2[,"b_Intercept"] + posteriors_3.2[,"b_habitatm"] + posteriors_3.2[,"b_typeacclim"] + posteriors_3.2[,"b_typeacclim:habitatm"]
  t_acute_VR  <- posteriors_3.2[,"b_Intercept"] + posteriors_3.2[,"b_habitatt"]
  t_acclim_VR <- posteriors_3.2[,"b_Intercept"] + posteriors_3.2[,"b_habitatt"] + posteriors_3.2[,"b_typeacclim"] + posteriors_3.2[,"b_typeacclim:habitatt"]

# We'll take the marginalised mean for each type as there is no difference between acclimation and acute really except for in freshwater, but this effect size is so tiny. It's a 10% reduction at high temps and acclim is only a 2% reduction in variance at high temps.
  # First get sample sizes
    N <- lnVRQ10_data %>% group_by(habitat, type) %>% summarise(n=n())
  
  # Calculated weighted mean by sample size. 
    f_VR_mean <- (f_acute_VR * N[1,"n"][[1]] + f_acclim_VR * N[2,"n"][[1]]) / sum(N[1:2, "n"]); pmcmc(f_VR_mean)
    m_VR_mean <- (m_acute_VR * N[3,"n"][[1]] + m_acclim_VR * N[3,"n"][[1]]) / sum(N[3:4, "n"]); pmcmc(m_VR_mean)
    t_VR_mean <- (t_acute_VR * N[5,"n"][[1]] + t_acclim_VR * N[6,"n"][[1]]) / sum(N[5:6, "n"]); pmcmc(t_VR_mean)

  # Lets now convert these to a %
    f_VR_mean_ef  <- abs((exp(f_VR_mean) - 1)*100) 
    m_VR_mean_ef  <- abs((exp(m_VR_mean) - 1)*100) 
    t_VR_mean_ef  <- abs((exp(t_VR_mean) - 1)*100) 

  # Now, lets get contrasts between habitats for acute and acclimation. Keep seperate because the challenge is the rates acclimate so adds quite a bif of variability
      f_m_c_a <- f_acute_VR - m_acute_VR; pmcmc(f_m_c_a); mean(f_m_c_a)
      f_t_c_a <- f_acute_VR - t_acute_VR; pmcmc(f_t_c_a); mean(f_t_c_a)
      m_t_c_a <- m_acute_VR - t_acute_VR; pmcmc(m_t_c_a); mean(m_t_c_a)
      
      f_m_c_aclim <- f_acclim_VR - m_acclim_VR; pmcmc(f_m_c_aclim); mean(f_m_c_aclim)
      f_t_c_aclim <- f_acclim_VR - t_acclim_VR; pmcmc(f_t_c_aclim); mean(f_t_c_aclim)
      m_t_c_aclim <- m_acclim_VR - t_acclim_VR; pmcmc(m_t_c_aclim); mean(m_t_c_aclim)
      
###################################################
  # Model 3.3: Model controlling for acclimation time, 
  # type and trait category assuming type can vary by habitat
###################################################
  # Add two general trait categories to test for trait differences (whole-organism vs biochemical)
    lnVRQ10_data <- lnVRQ10_data %>% 
                    mutate(trait_broad = ifelse(trait_category %in% c("cardiac", "rest_MR", "sprint", "muscle", "endurance", "max_MR"), 
                                                "tissue/organism",
                                         ifelse(trait_category %in% c("ATPase", "metabolic_enzyme", "antiox", "mito_oxidation", "mito_leak"), 
                                                "biochemical", trait_category)))
 # We can also run subsets for each habitat
   tree_m_vr <- tree_checks(lnVRQ10_data %>% filter(habitat == "m" & trait_broad != "other"), tree = tree_lnVR, dataCol = "species_full", type = "prune")
   tree_f_vr <- tree_checks(lnVRQ10_data %>% filter(habitat == "f" & trait_broad != "other"), tree = tree_lnVR, dataCol = "species_full", type = "prune")
   tree_t_vr <- tree_checks(lnVRQ10_data %>% filter(habitat == "t" & trait_broad != "other"), tree = tree_lnVR, dataCol = "species_full", type = "prune")
   
 # cor matrices
   m_phylo_vr <- vcv(tree_m_vr, corr = TRUE)
   f_phylo_vr <- vcv(tree_f_vr, corr = TRUE)
   t_phylo_vr <- vcv(tree_t_vr, corr = TRUE)
    
if(rerun){
  
  # Full Bayesian model   
   model3.3_btrait_bayes <- brms::brm(effect_size | se(sqrt(V)) ~  max_temp_c + c_accl_time + type*trait_broad*habitat + 
                                           (1 + type | record_num) + 
                                           (1 | gr(species_full, cov = A_VR)) + 
                                           (1 + max_temp_c | spp) +(1|trait) + 
                                           (1 + trait_broad |gr(obs, cor = FALSE)),  
                                         data2 = list(A_VR=A_VR), family = gaussian(), 
                                         prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), 
                                         control = list(adapt_delta = 0.98, max_treedepth = 12), 
                                         chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = filter(lnVRQ10_data, trait_broad != "other"))
    saveRDS(model3.3_btrait_bayes, "./output/models/model3.3_btrait_bayes")
    
  # Metafor models for creating plots. Subset by habitat to make this easier. Again, only able to fit two 'random slopes' so need to keep them simplier but still only for plotting.
      # Marine
         model3.3_m_broad <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_broad + type:trait_broad, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 + trait_broad| obs),
                              R = list(species_full = m_phylo_vr), dfs = "contain", 
                              test = "t", struct = c("GEN","HCS"), phi = 0,
                              data = filter(lnVRQ10_data, habitat == "m" & trait_broad != "other"))
         saveRDS(model3.3_m_broad, "output/models/model3.3_m_broad")
    
      # Freshwater
         model3.3_f_broad <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_broad + type:trait_broad, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 + trait_broad| obs),
                              R = list(species_full = f_phylo_vr), dfs = "contain", 
                              test = "t", struct = c("GEN","HCS"),  phi = 0,
                              data = filter(lnVRQ10_data, habitat == "f" & trait_broad != "other"))
          saveRDS(model3.3_f_broad, "output/models/model3.3_f_broad")
      
      # Terrestrial
         model3.3_t_broad <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_broad + type:trait_broad, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 + trait_broad| obs),
                              R = list(species_full = t_phylo_vr), dfs = "contain", 
                              test = "t", struct = c("GEN","HCS"), phi = 0,
                              data = filter(lnVRQ10_data, habitat == "t" & trait_broad != "other"))
         saveRDS(model3.3_t_broad, "output/models/model3.3_t_broad")
  
  } else{
    model3.3_btrait_bayes <- readRDS("./output/models/model3.3_btrait_bayes")
    model3.3_m_broad <- readRDS("output/models/model3.3_m_broad")
    model3.3_f_broad <- readRDS("output/models/model3.3_f_broad")
    model3.3_t_broad <- readRDS("output/models/model3.3_t_broad")
}
    
    
###########################################################
  # Processing Bayesian Posteriors
###########################################################
      # Create new data for predictions
       trait_b_data <- data.frame(  type = c("acclim", "acute"),
                              max_temp_c = 0,
                             c_accl_time = 0,
                                       V = 0,
                                 habitat = rep(c("t", "m", "f"), each = 4),
                             trait_broad = rep(c("tissue/organism", "biochemical"), each = 2))     
      
       # Predict from model. Note this is the summary.
         pred_lnvr_traitb <- fitted(model3.3_btrait_bayes, 
                                     newdata = trait_b_data, re_formula = NA,
                                     summary = TRUE, 
                                     robust = FALSE)
         pred_lnvr_traitb <- cbind(trait_b_data, pred_lnvr_traitb)
         
       # Predict to get the posterior. Note that we have the full posterior distribution here for each of the 12 categories in the new data. Here, we want to look at the difference between acute and acclimation within each of the categories. 
            pred_lnvr_traitb_post <- fitted(model3.3_btrait_bayes, 
                                     newdata = trait_b_data, re_formula = NA,
                                     summary = FALSE, 
                                     robust = FALSE)
        contrast_lnvr_trait_post <-  pred_lnvr_traitb_post[,c(1,3,5,7,9,11)] - pred_lnvr_traitb_post[,c(2,4,6,8,10,12)] # Acclimation - acute.
          
    
        # Contrast statistics
            contrast_lnvr_trait_stats <- data.frame( habitat = rep(c("t", "m", "f"), each = 2),
                                                     trait = rep(c("tissue/organism", "biochemical"), each = 1),
                                                    diff = sapply(data.frame(contrast_lnvr_trait_post), mean),
                                                     l95 = sapply(data.frame(contrast_lnvr_trait_post), function(x) quantile(x, 0.025)),
                                                     u95 = sapply(data.frame(contrast_lnvr_trait_post), function(x) quantile(x, 0.975)),
                                                       p = sapply(data.frame(contrast_lnvr_trait_post), function(x) p_value(pmcmc(x))))
        # Contrasts for pooled acute and acclimation across trait categories
            
            contrast_lnvr_trait_cat_stats <- rbind(get_whole_bio(pred_lnvr_traitb_post, habitat = "t", trait_b_data),
                                                        get_whole_bio(pred_lnvr_traitb_post, habitat = "m", trait_b_data),
                                                        get_whole_bio(pred_lnvr_traitb_post, habitat = "f", trait_b_data))
      
        
###################################################
  # Model 3.4: Model controlling for acclimation time, 
  # type and life history stage assuming type can vary by habitat
###################################################

if(rerun){
  # More realistic model 
  model3.4 <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type*habitat*life.hist, V = V, 
                              random = list(~1 + type| record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_VR), dfs = "contain", 
                              test = "t", data = lnVRQ10_data)
  # Save model
  saveRDS(model3.4, file = "./output/models/lnVRQ10_3.4")

   model3.4_bayes <- brms::brm(effect_size | se(sqrt(V)) ~  max_temp_c + c_accl_time + type*habitat*life.hist + 
                                 (1 + type | record_num) + 
                                 (1 | gr(species_full, cov = A_VR)) + 
                                 (1 + max_temp_c| spp) + 
                                 (1|trait) +
                                 (1|obs), 
                               data2 = list(A_VR=A_VR), family = gaussian(), 
                               prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), 
                               control = list(adapt_delta = 0.98, max_treedepth = 12), 
                               chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnVRQ10_data)
                                  
  # Save model
  saveRDS(model3.4_bayes, file = "./output/models/lnVRQ10_3.4_bayes")

  } else{
        model3.4 <- readRDS("./output/models/lnVRQ10_3.4")
  model3.4_bayes <- readRDS("./output/models/lnVRQ10_3.4_bayes")
}

###########################################################
  # Processing Bayesian Posteriors
###########################################################
      # Create new data for predictions
       lh_b_data <- data.frame( c_accl_time = 0, 
                          max_temp_c = 0, 
                                type = relevel(factor(c("acclim", "acute")), ref = "acute"), 
                             habitat = rep(c("m", "f", "t"), each = 4), 
                           life.hist = rep(c("j", "a"), each = 2))    
       
            # I have no idea why the fitted function is not working on this model. We're doing this the old fashioned way
            X <- model.matrix(~max_temp_c + c_accl_time + type*habitat*life.hist, data = lh_b_data) 
   
            # Extract posteriors
              post_lh_vr <- posterior_samples(model3.4_bayes, pars = "^b")
        
        # Now we can do all the calculations in one shot.# Predict to get the posterior. Note that we have the full posterior distribution here for each of the 12 categories in the new data. Here, we want to look at the difference between acute and acclimation within each of the categories. 
            pred_lh_vr <- apply(t(post_lh_vr),2 , function(x) as.matrix(X)%*%x)

        contrast_lnvr_lh_post <-  pred_lh_vr[c(1,3,5,7,9,11),] - pred_lh_vr[c(2,4,6,8,10,12),] # Acclimation - acute.
            
        # Contrast statistics
            contrast_lnvr_lh_stats <- data.frame( habitat = rep(c("t", "m", "f"), each = 2),
                                                     stage = rep(c("j", "a"), each = 1),
                                                    diff = apply(data.frame(contrast_lnvr_lh_post), 1, mean),
                                                     l95 = apply(data.frame(contrast_lnvr_lh_post), 1, function(x) quantile(x, 0.025)),
                                                     u95 = apply(data.frame(contrast_lnvr_lh_post), 1, function(x) quantile(x, 0.975)),
                                                       p = apply(data.frame(contrast_lnvr_lh_post), 1, function(x) p_value(pmcmc(x))))
            
        # Contrasts for pooled acute and acclimation across life stage categories. Checked freshwater and looks correct.
            contrast_lnvr_lh_cat_stats <- rbind(get_lifestage(pred_lh_vr, habitat = "t", lh_b_data),
                                                get_lifestage(pred_lh_vr, habitat = "m", lh_b_data),
                                                get_lifestage(pred_lh_vr, habitat = "f", lh_b_data))

```

```{r, fig-2}
#| label: fig-2
#| fig-cap: "Meta-analysis results for different habitats. In both panels, thick bars are 95% confidence intervals (CI) and thin bars 95% prediction intervals (PI). $\\beta$ values are the contrasts between acute and acclimation means within each habitat. $\\mu$ values are the overall meta-analytic means averaged across acute and acclimation types within each habitat type. In both cases, their 95% CI's are indicated within square brackets and raw effects are weighted by their precision (inverse sampling variance). $p_{MCMC}$ values are the posterior probability of the contrast or overall meta-analytic mean being different from zero. (A) Mean acute and acclimation $lnRR_{Q_{10}}$ across ectotherms in marine, freshwater, and terrestrial habitats. Overall mean physiological rates ($\\mu$) across the habitats are provided in the results for simplicity and only contrasts between acute and acclimation $lnRR_{Q_{10}}$ are shown (B) Mean acute and acclimation $lnVR_{Q_{10}}$ across ectotherms in marine, freshwater and terrestrial habitats. For both plots, k = total number of effect size estimates while the numbers in brackets indicate the number of species. Sample sizes are the same for panel A and B.  For ease of visualisation, all the raw data plotted for both acute and acclimation type effect sizes are presented as circles."
#| warning: false
#| echo: false

##################
  # Figure 3a plot
##################

  col <- c("#0871B9", "#F3B40D", "#1BB908")
  k_lnrr <- manual_extract(model1.2, mod = "habitat", group = "record_num", exclude = NULL)

  p3a <- orchaRd::orchard_plot(model1.2, mod = "habitat", group  = "record_num", at = list(type = c("acute", "acclim")), by = "type", weights = "prop", xlab = TeX("$lnRR_{Q_{10}}$"), angle = 20, legend.pos = "top.left", trunk.size = 1.8, branch.size = 2.8) + scale_x_discrete(labels = c("T" = "Terrestrial","M" = "Marine" ,"F" = "Freshwater")) +
  theme(legend.direction = "vertical") +
  
  annotate("text", x = 1.5, y = -0.30, label =TeX(paste0("$\\beta = $", round(mean(f_acclim - f_acute), 2), "[", round(quantile(f_acclim - f_acute, 0.025), 2)," to ", round(quantile(f_acclim - f_acute, 0.975), 2), "] ", " $\\,p_{MCMC}$ < 0.001")), hjust = 0, size = 8) + 
  annotate("text", x = 1.20, y = -0.5, label =paste0(round(mean(change_f), 3), "%"), hjust = 0, size = 8) + labs(shape = "Type") +
  
  annotate("text", x = 2.5, y = -0.30, label =TeX(paste0("$\\beta = $", round(mean(m_acclim - m_acute), 2), "[", round(quantile(m_acclim - m_acute, 0.025), 2)," to ", round(quantile(m_acclim - m_acute, 0.975),2), "] ", " $\\,p_{MCMC}$ = 0.01")), hjust = 0, size = 8) + 
  annotate("text", x = 2.20, y = -0.5, label =paste0(round(mean(change_m), 3), "%"), hjust = 0, size = 8) +
  
  annotate("text", x = 3.5, y = -0.30, label =TeX(paste0("$\\beta = $", round(mean(t_acclim - t_acute), 2), "[", round(quantile(t_acclim - t_acute, 0.025), 2)," to ", round(quantile(t_acclim - t_acute, 0.975),2), "] ", "$\\,p_{MCMC}$ = 0.36")), hjust = 0, size = 8) + 
  annotate("text", x = 3.20, y = -0.5, label =paste0(round(mean(change_t), 3), "%"), hjust = 0, size = 8) +
  
  scale_fill_manual(values = col) + scale_color_manual(values = rep("black",3)) + ylim(-0.5, 1.5) 
    
  p3a <- p3a + theme_classic() + theme(axis.title  = element_text(size = 24),
                                       axis.text = element_text(size = 24),
                                       axis.text.y = element_text(angle = 45, size = 24),
                                       legend.title = element_text(size = 30),
                               legend.text = element_text(size = 24),
                               title = element_text(size = 24), legend.position = "top") 
   
##################
  # Figure 3b plot
################## 
    # Sensitivity analysis that looks at how variance changes but not controlling for the mean.
  k_vr <- manual_extract(model3.2, mod = "habitat", group = "spp", exclude = NULL)
  
  p3b <- orchard_plot(model3.2, xlab = TeX("$lnVR_{Q_{10}}$"), mod = "habitat", by = "type", group  = "record_num", weights = "prop", angle = 45, trunk.size = 1.8, branch.size = 2.8) +
              scale_x_discrete(labels = c("T" = "Terrestrial","M" = "Marine" ,"F" = "Freshwater")) + ylim(-2,3) +
    
     annotate("text", x = 1.5, y = -2, label =TeX(paste0("$\\mu = $", round(mean(f_VR_mean), 2), " [", round(quantile(f_VR_mean, 0.025), 2)," to ", round(quantile(f_VR_mean, 0.975),2), "] ", " $\\,p_{MCMC}$", p_value(round(pmcmc(f_VR_mean), digit = 2)))), hjust = 0, size = 8) + 
    annotate("text", x = 1.2, y = 1.5, label =TeX(paste0("$\\beta = $", "NS")), hjust = 0, size = 8) +
  annotate("text", x = 1.20, y = -2, label =paste0(round(mean(f_VR_mean_ef), 1), "%"), hjust = 0, size = 8) + labs(shape = "Type") +
    
    annotate("text", x = 2.5, y = -2, label =TeX(paste0("$\\mu = $", round(mean(m_VR_mean), 2), " [", round(quantile(m_VR_mean, 0.025), 2)," to ", round(quantile(m_VR_mean, 0.975),2), "] ", " $\\,p_{MCMC}$", p_value(round(pmcmc(m_VR_mean), digit = 2)))), hjust = 0, size = 8) + 
    annotate("text", x = 2.2, y = 1.5, label =TeX(paste0("$\\beta = $", "NS")), hjust = 0, size = 8) +
  annotate("text", x = 2.20, y = -2, label =paste0(round(mean(m_VR_mean_ef), 1), "%"), hjust = 0, size = 8) + labs(shape = "Type") +
    
        annotate("text", x = 3.5, y = -2, label =TeX(paste0("$\\mu = $", round(mean(t_VR_mean), 2), " [", round(quantile(t_VR_mean, 0.025), 2)," to ", round(quantile(t_VR_mean, 0.975),2), "] ", " $\\,p_{MCMC}$ = ", p_value(round(pmcmc(t_VR_mean), digit = 2)))), hjust = 0, size = 8) + 
    annotate("text", x = 3.2, y = 1.5, label =TeX(paste0("$\\beta = $", "NS")), hjust = 0, size = 8) +
  annotate("text", x = 3.20, y = -2, label =paste0(round(mean(t_VR_mean_ef), 1), "%"), hjust = 0, size = 8) + labs(shape = "Type") + scale_fill_manual(values = c(col)) + annotate("text", y = 2.5, x = c(1.3, 2.3, 3.3)+0.1, label = TeX(paste0("\\it{k} = ", k_vr$k, " (", k_vr$sdy, ")")), size = 6) + scale_fill_manual(values = col) + scale_color_manual(values = rep("black",3))
  
  p3b <- p3b + theme_classic() + theme(axis.title  = element_text(size = 24),
                                       axis.text = element_text(size = 24),
                                       axis.text.y = element_text(angle = 45, size = 24),
                                       legend.title = element_text(size = 30),
                               legend.text = element_text(size = 24),
                               title = element_text(size = 24), legend.position = "top") 
  
  fig3 <- (p3a + p3b) + plot_annotation(tag_levels = "A")
  ggsave(fig3, filename = "./output/figures/fig3.png", width = 21.88, height = 9)
  
  fig3 <- magick::image_read("./output/figures/fig3.png")
  fig3
```

```{r, fig-cvrlh}
#| label: fig-cvrlh
#| fig-cap: "Meta-analysis results for different life stages. Estimated mean acclimation and acute $lnRR_{Q_{10}}$ (A-C) and $lnVR_{Q_{10}}$ (D-F) for adult (a) and juvenile (j) life-history stages for terrestrial (A & D), marine (B & E) and freshwater (C & F) ectotherms. Across all plots, thick bars indicate 95% confidence intervals and thin bars indicate 95% prediction intervals. Raw effects are weighted by their precision (inverse sampling variance). k = total number of effect size estimates while the numbers in brackets indicate the number of species. For ease of visualisation, raw data for both adult and juvenile life-history stages are presented but points are not distinguished by different symbols. $\\beta$ values are the contrasts between acute and acclimation means within each life stage. $p_{MCMC}$ values are the posterior probability of the contrast being different from zero."
#| echo: false
#| warning: false

add_theme  <- function(){theme(axis.title  = element_text(size = 30),
                               axis.text.y = element_text(size = 30),
                               axis.text.x = element_text(size = 30),
                              legend.title = element_text(size = 30),
                               legend.text = element_text(size = 24),
                               title = element_text(size = 36))}

branch.size = 2.8
trunk.size = 1.8

n_lnrr_lh  <- lnRRQ10_data  %>% group_by(habitat, life.hist, type) %>% summarise(k = n(), spp = length(unique(spp))) %>% arrange(type, life.hist, habitat)
n_lnvr_lh <- lnVRQ10_data %>% group_by(habitat, life.hist, type) %>% summarise(k = n(), spp = length(unique(spp))) %>% arrange(type, life.hist, habitat)

x.pos = c(0.7, 1.30, 1.70, 2.30)
size_annot <- 5.5

###############
## lnRR Q10
###############

t_trait_b <- contrast_stage_lnrr_lh_stats %>% filter(habitat == "t") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(stage)
m_trait_b <- contrast_stage_lnrr_lh_stats %>% filter(habitat == "m") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(stage)
f_trait_b <- contrast_stage_lnrr_lh_stats %>% filter(habitat == "f") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(stage)

yloc = c(1.5, 2.5)

m_r <- n_lnrr_lh %>% filter(habitat == "m")
f_r <- n_lnrr_lh %>% filter(habitat == "f")
t_r <- n_lnrr_lh %>% filter(habitat == "t")

p1 <- orchard_plot(model1.4, mod = "life.hist", at = list(c_accl_time = 0, habitat = "m"), group = "spp", xlab = TeX("$lnRR_{Q_{10}}$"), condition.lab = "Type", by = "type",  g = FALSE, k = FALSE, angle = 45, branch.size = branch.size, trunk.size = trunk.size) + labs(title = "Marine") + add_theme() + ylim(-0.5, 1.6) + theme(legend.position = "none", axis.text.y = element_blank()) + annotate("text", x = x.pos, y = 1.3, label = TeX(paste0("\\it{k} = ", m_r$k, " (", m_r$spp, ")")), size = size_annot) + annotate("text", x = yloc, y = -0.4, label = TeX(paste0("$\\beta$ = ", m_trait_b$diff, " [", m_trait_b$l95, " to ", m_trait_b$u95, "] ", "$\\,p_{MCMC}$ = ", m_trait_b$p)), hjust = 0, size = 8)

p2 <- orchard_plot(model1.4, mod = "life.hist", at = list(c_accl_time = 0, habitat = "f"), group = "record_num", xlab = TeX("$lnRR_{Q_{10}}$"), condition.lab = "Type", by = "type",  g = FALSE, k = FALSE, branch.size = branch.size, trunk.size = trunk.size, angle = 45)+ labs(title = "Freshwater")  + add_theme() + theme(legend.position = "none", axis.text.y = element_blank()) + ylim(-0.4, 1.5) + annotate("text", x = x.pos, y = 1.3, label = TeX(paste0("\\it{k} = ", f_r$k, " (", f_r$spp, ")")), size = size_annot) + theme(legend.position = "right", legend.justification = c(1, 1)) + guides(shape = guide_legend(direction = "vertical"), size = guide_legend(direction = "vertical")) + annotate("text", x = yloc, y = -0.4, label = TeX(paste0("$\\beta$ = ", f_trait_b$diff, " [", f_trait_b$l95, " to ", f_trait_b$u95, "] ", "$\\,p_{MCMC}$ = ", f_trait_b$p)), hjust = 0, size = 8)

p3 <- orchard_plot(model1.4, mod = "life.hist", at = list(c_accl_time = 0, habitat = "t", legend.pos = "none"), group = "record_num", xlab = TeX("$lnRR_{Q_{10}}$"), condition.lab = "Type", by = "type",  g = FALSE, k = FALSE, branch.size = branch.size, trunk.size = trunk.size, angle = 45)+ labs(title = "Terrestrial") + add_theme()  +  ylim(-0.3, 1.8) + theme(legend.position = "none") + annotate("text", x = x.pos, y = 1.3, label = TeX(paste0("\\it{k} = ", t_r$k, " (", t_r$spp, ")")), size = size_annot) + annotate("text", x = yloc, y = -0.3, label = TeX(paste0("$\\beta$ = ", t_trait_b$diff, " [", t_trait_b$l95, " to ", t_trait_b$u95, "] ", "$\\,p_{MCMC}$ = ", t_trait_b$p)), hjust = 0, size = 8) +scale_x_discrete(labels = c("A" = "Adult","J" = "Juvenile")) 

###############
## lnVR Q10
###############

t_trait_b <- contrast_lnvr_lh_stats %>% filter(habitat == "t") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(stage)
m_trait_b <- contrast_lnvr_lh_stats %>% filter(habitat == "m") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(stage)
f_trait_b <- contrast_lnvr_lh_stats %>% filter(habitat == "f") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(stage)

yloc = c(1.5, 2.5)

m_r <- n_lnvr_lh %>% filter(habitat == "m")
f_r <- n_lnvr_lh %>% filter(habitat == "f")
t_r <- n_lnvr_lh %>% filter(habitat == "t")

p1_vr <- orchard_plot(model3.4, mod = "life.hist", at = list(c_accl_time = 0, habitat = "m"), group = "spp", xlab = TeX("$lnVR_{Q_{10}}$"), condition.lab = "Type", by = "type",  g = FALSE, k = FALSE, angle = 45, branch.size = branch.size, trunk.size = trunk.size) + labs(title = "Marine") + add_theme() + ylim(-1.5, 3) + theme(legend.position = "none", axis.text.y = element_blank()) + annotate("text", x = x.pos, y = 2.5, label = TeX(paste0("\\it{k} = ", m_r$k, " (", m_r$spp, ")")), size = size_annot) + annotate("text", x = yloc, y = -1.5, label = TeX(paste0("$\\beta$ = ", m_trait_b$diff, " [", m_trait_b$l95, " to ", m_trait_b$u95, "] ", "$\\,p_{MCMC}$ = ", m_trait_b$p)), hjust = 0, size = 8)

p2_vr <- orchard_plot(model3.4, mod = "life.hist", at = list(c_accl_time = 0, habitat = "f"), group = "record_num", xlab = TeX("$lnVR_{Q_{10}}$"), condition.lab = "Type", by = "type",  g = FALSE, k = FALSE, branch.size = branch.size, trunk.size = trunk.size, angle = 45)+ labs(title = "Freshwater")  + add_theme() + theme(legend.position = "none", axis.text.y = element_blank()) + ylim(-1.5, 3) + annotate("text", x = x.pos, y = 2.5, label = TeX(paste0("\\it{k} = ", f_r$k, " (", f_r$spp, ")")), size = size_annot) + theme(legend.position = "right", legend.justification = c(1, 1)) + guides(shape = guide_legend(direction = "vertical"), size = guide_legend(direction = "vertical")) + annotate("text", x = yloc, y = -1.5, label = TeX(paste0("$\\beta$ = ", f_trait_b$diff, " [", f_trait_b$l95, " to ", f_trait_b$u95, "] ", "$\\,p_{MCMC}$ = ", f_trait_b$p)), hjust = 0, size = 8)

p3_vr <- orchard_plot(model3.4, mod = "life.hist", at = list(c_accl_time = 0, habitat = "t", legend.pos = "none"), group = "record_num", xlab = TeX("$lnVR_{Q_{10}}$"), condition.lab = "Type", by = "type",  g = FALSE, k = FALSE, branch.size = branch.size, trunk.size = trunk.size, angle = 45)+ labs(title = "Terrestrial") + add_theme()  +  ylim(-1.5,3) + theme(legend.position = "none") + annotate("text", x = x.pos, y = 2.5, label = TeX(paste0("\\it{k} = ", t_r$k, " (", t_r$spp, ")")), size = size_annot) + annotate("text", x = yloc, y = -1.5, label = TeX(paste0("$\\beta$ = ", t_trait_b$diff, " [", t_trait_b$l95, " to ", t_trait_b$u95, "] ", "$\\,p_{MCMC}$ = ", t_trait_b$p)), hjust = 0, size = 8) +scale_x_discrete(labels = c("A" = "Adult","J" = "Juvenile")) 



fig4 <-(p3 | p1 | p2) / (p3_vr | p1_vr | p2_vr) + plot_annotation(tag_levels = "A") 
ggsave(fig4, filename = "./output/figures/fig5.pdf", width = 28, height = 14, device = "pdf")

fig4 <- magick::image_read("./output/figures/fig5.pdf")
fig4
```

### *Variation in physiological rates increases but to a greater extent in aquatic compared terrestrial ectotherms*

Variance in physiological rates ($lnVR_{Q_{10}}$) showed an increase with increasing temperature across all habitat types ([@fig-2]B). Overall, there was a `r mean(t_VR_mean_ef)`\% (95\% CI: `r quantile(t_VR_mean_ef, 0.025)[1]` to `r quantile(t_VR_mean_ef, 0.975)[1]`, $p_{MCMC}$ = `r p_value(pmcmc(t_VR_mean))`) increase in physiological rate variance for terrestrial ectotherms,  a `r mean(m_VR_mean_ef)`\% (95\% CI:`r quantile(m_VR_mean_ef, 0.025)[1]` to `r quantile(m_VR_mean_ef, 0.975)[1]`, $p_{MCMC}$ = `r p_value(pmcmc(m_VR_mean))`) increase in variation for marine ectotherms and a `r mean(f_VR_mean_ef)`\% (95\% CI: `r quantile(f_VR_mean_ef, 0.025)[1]` to `r quantile(f_VR_mean_ef, 0.975)[1]`, $p_{MCMC}$ = `r p_value(pmcmc(f_VR_mean))`) increase in variance for freshwater ectotherms across 10°C (@fig-2; results from "Model 2"). 

Physiological rate variance increased significantly more in freshwater compared to terrestrial ectotherms for acute responses ($\beta$ = `r mean(f_t_c_a)`, 95\% CI: `r quantile(f_t_c_a, 0.025)` to `r quantile(f_t_c_a, 0.975)`, $p_{MCMC}$ = `r p_value(pmcmc(f_t_c_a))`), but not for acclimation responses because increases in rates were dampened by acclimation resulting in smaller increases in variance ($\beta$ = `r mean(f_t_c_aclim)`, 95\% CI: `r quantile(f_t_c_aclim, 0.025)` to `r quantile(f_t_c_aclim, 0.975)`, $p_{MCMC}$ = `r p_value(pmcmc(f_t_c_aclim))`). While marine ectotherms had larger increases in variance compared to terrestrial ectotherms these were not significant (Acute: $\beta$ = `r mean(m_t_c_a)`, 95\% CI: `r quantile(m_t_c_a, 0.025)` to `r quantile(m_t_c_a, 0.975)`, $p_{MCMC}$ = `r p_value(pmcmc(m_t_c_a))`; Acclimation: $\beta$ = `r mean(m_t_c_aclim)`, 95\% CI: `r quantile(m_t_c_aclim, 0.025)` to `r quantile(m_t_c_aclim, 0.975)`, $p_{MCMC}$ = `r p_value(pmcmc(m_t_c_aclim))`)([@fig-2]B). Marine and freshwater habitats did not differ in the extent of variance increases at higher temperatures (Acute: $\beta$ = `r mean(f_m_c_a)`, 95\% CI: `r quantile(f_m_c_a, 0.025)` to `r quantile(f_m_c_a, 0.975)`, $p_{MCMC}$ = `r p_value(pmcmc(f_m_c_a))`; Acclimation: $\beta$ = `r mean(f_m_c_aclim)`, 95\% CI: `r quantile(f_m_c_aclim, 0.025)` to `r quantile(f_m_c_aclim, 0.975)`, $p_{MCMC}$ = `r p_value(pmcmc(f_m_c_aclim))`). There were no differences between $lnVR_{Q_{10_{acute}}}$ and $lnVR_{Q_{10_{acclimation}}}$ within any habitat ([@fig-2]B). 

$lnVR_{Q_{10}}$ values from our simulations matched our empirical results in particular areas of parameter space (@fig-sim2). For a given among-individual variance in thermal breadth, terrestrial ectotherms are predicted to have lower among-individual variance in thermal maxima compared to marine and freshwater ectotherms ([@fig-sim2]). In contrast, terrestrial ectotherms are expected to have higher levels of among-individual variance in thermal breadth when controlling for among-individual variance in thermal maxima ([@fig-sim2]).

```{r, fig-sim2}
#| label: fig-sim2
#| fig-align: center
#| fig-cap: "Results from sensitivity analysis. Expected $lnVR_{Q_{10}}$ from simulated performance curves when varying among-individual variance in thermal breadth ($\\sigma_{\\delta}$ = {0.01, 2}) and  thermal maxima ($\\sigma_{\\sigma}$ = {0.01, 2}) while fixing the rate variance constant ($\\sigma_{\\alpha}$ = 0.01). In all simulations, population parameters were $\\delta$ = 35, $\\sigma$ = 9, $\\alpha$ = -15, and *n* = 1000 individuals were simulated for each combination of $\\sigma_{\\delta}$ and $\\sigma_{\\sigma}$. The parameter space that matches the observed mean $lnVR_{Q_{10}}$ for terrestrial (green), marine (orange) and freshwater (blue) ectotherms is highlighted. Dashed lines indicate the relative differences between the three habitat types when holding one variance parameter constant."

sim_results <- readRDS("./output/sim_results")
bins_vr = 20

lnvr_sim_delta_sigma1 <- ggplot(sim_results, aes(x = delta, y = sigma, z = lnVR)) +
  geom_contour_filled(bins = bins_vr) +
  scale_color_viridis() +
  labs(x = TeX("Variation in Thermal Optima ($\\sigma_{\\delta}$)"),
       y = TeX("Variation in Thermal Breadth ($\\sigma_{\\sigma}$)"),
       fill = TeX("$lnVR_{Q_{10}}$")) + theme_classic() + my_theme() + theme(legend.title = element_text(size = 20), legend.text = element_text(size = 12))

#ggsave(lnvr_sim_delta_sigma1, width = 9.5, height = 8, filename = "./output/figures/fig6.pdf")

p_sim2 <- image_read("./output/figures/fig6_new.pdf")
p_sim2
```


Each life-history stage exhibited the same pattern of variance change in each of the habitats (Adult-Juvenile contrasts: Marine: $\beta$ = `r contrast_lnvr_lh_cat_stats[2,3]`, 95\% CI: `r contrast_lnvr_lh_cat_stats[2,4]` to `r contrast_lnvr_lh_cat_stats[2,5]`, $p_{MCMC}$ = `r contrast_lnvr_lh_cat_stats[2,6]`; Freshwater: $\beta$ = `r contrast_lnvr_lh_cat_stats[3,3]`, 95\% CI: `r contrast_lnvr_lh_cat_stats[3,4]` to `r contrast_lnvr_lh_cat_stats[3,5]`, $p_{MCMC}$ = `r contrast_lnvr_lh_cat_stats[3,6]`; Terrestrial: $\beta$ = `r contrast_lnvr_lh_cat_stats[1,3]`, 95\% CI: `r contrast_lnvr_lh_cat_stats[1,4]` to `r contrast_lnvr_lh_cat_stats[1,5]`, $p_{MCMC}$ = `r contrast_lnvr_lh_cat_stats[1,6]`), with no differences between acute and acclimation effect types ("Model 4"; @fig-cvrlh).

```{r, wildlnRR10}
#| label: wildlnRR10
#| cache: true
#| include: false
#| echo: false
#| warning: false
 
#######################################
  ## lnRRQ10 from Wild Populations ##
#######################################
##################################################
  # Organise the data and prune tree
##################################################

# Bring in Climate data
climate <- read.csv("./output/climate_data/ERA5_air_and_SST_timeseries.csv")

# Create a match column.
climate2 <- climate %>% 
            mutate(match = interaction(Species, Latitude, Longitude)) %>% 
            dplyr::select(Species, Latitude, Longitude, match, cv, sd, mean, acf_lag1, acf_all)

# Subset the data
lnRRQ10_data_wild <- data_long2 %>% 
                    filter(grepl("lnRR", name) & !is.na(effect_size) & !is.na(V) & !V == 0 & !is.na(acclim_period) & source == "w") %>% 
                      mutate(spp = species_full, c_accl_time = acclim_period - mean(acclim_period, na.rm = TRUE), match = interaction(spp, lat, long), 
                              max_temp_c = scale(temp_2, scale = FALSE))

# Now, join climate data to full data. This will give us all the climate variability data for each site across time
lnRRQ10_data_wild <- left_join(lnRRQ10_data_wild, climate2, by = "match")

# Check and prune tree
tree_lnrr_wild <- tree_checks(data = lnRRQ10_data_wild, tree = tree_p0.7, dataCol = "species_full", type = "prune")
tree_checks(data = lnRRQ10_data_wild, tree = tree_lnrr, dataCol = "species_full", type = "check") # Good

# Create the phylo correlation matrix
phylo_cor_wild <- vcv(tree_lnrr_wild, cor = TRUE)
        A_wild <- vcv(tree_lnrr_wild, cor = FALSE) # For bayes, need cov matrix

# Scale data
        lnRRQ10_data_wild <- lnRRQ10_data_wild %>% mutate(cv_c = scale(cv),
                                                          acf_all_c = scale(acf_all))

# Check the environmental variability across habitats. What is the average SD in temps

envi_var <- lnRRQ10_data_wild %>% group_by(habitat) %>% summarise(mean_SD = mean(sd), 
                                                                  mean_pred = mean(acf_all),
                                                                  stdy = length(unique(record_num)), 
                                                                        n = n())

###################################################
  # model_envi: Check how tempeartures vary by habitat
  # Expect terrestrial and freshwater systems tp be more variable 
  # Than marine. Predcition for autocorrelation is less clear
###################################################
# Lets have a look at modelling whether the environmental variability and predcitability vary by habitats
if(rerun){
     sd_mod <- bf(log(sd) ~ habitat  + (1|record_num) + (1|spp)) 

  model_envi <- brms::brm(sd_mod, family = gaussian(),  control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 1, iter = 5000, warmup = 1000, cores = 4, data = lnRRQ10_data_wild)
  saveRDS(model_envi, file = "./output/models/model_envi")
} else {
  model_envi <- readRDS("./output/models/model_envi")
}


####################################################
  # Model 3.3: Model environmental variability by acute 
  #  acclim 
####################################################
  rerun = FALSE
if(rerun){
  # More realistic model with 
  model3.3          <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + cv_c + type + type:cv_c, V = V,
                                       random = list(~1 + type | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild)
  
   model3.3_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~ max_temp_c + c_accl_time + cv_c + type + type:cv_c + (1 + type | record_num) + (1 | gr(species_full, cov = A_wild)) + (1 + max_temp_c| spp) + (1|trait), data2 = list(A_wild=A_wild), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data_wild)
                                  
  # Save model3.3
  saveRDS(model3.3, file = "./output/models/lnRRQ10_3.3")
  saveRDS(model3.3_bayes, file = "./output/models/lnRRQ10_3.3_bayes")

  } else{
        model3.3 <- readRDS("./output/models/lnRRQ10_3.3")
  model3.3_bayes <- readRDS("./output/models/lnRRQ10_3.3_bayes")
}
  

############################################################################################
# Model 3.9: Acclimatization lnRRQ10 only. Test if environmental variance explains 
# differently in each habitat
############################################################################################          
lnRRQ10_data_wild_acclim <- lnRRQ10_data_wild %>%  filter(type == "acclim")

  # Create the phylo correlation matrix
  
  # Check and prune tree
tree_lnrr_wild_acclim <- tree_checks(data = lnRRQ10_data_wild_acclim, tree = tree_p0.7, dataCol = "species_full", type = "prune")
tree_checks(data = lnRRQ10_data_wild_acclim, tree = tree_lnrr_wild_acclim, dataCol = "species_full", type = "check")

phylo_cor_wild_acclim <- vcv(tree_lnrr_wild_acclim, cor = TRUE)
        A_wild_acclim <- vcv(tree_lnrr_wild_acclim, cor = FALSE) # For bayes, need cov matrix

if(rerun){
  # More realistic model with 
  model3.9  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + cv_c + habitat + habitat:cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim)
  
   model3.9_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  max_temp_c + c_accl_time + cv_c + habitat + habitat:cv_c + (~1 | record_num) + (1 | gr(species_full, cov = A_wild_acclim)) + (1 + max_temp_c| spp) + (1|trait), data2 = list(A_wild_acclim=A_wild_acclim), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnRRQ10_data_wild_acclim)
                                  
  # Save model3.8
  saveRDS(model3.9, file = "./output/models/lnRRQ10_3.9")
  saveRDS(model3.9_bayes, file = "./output/models/lnRRQ10_3.9_bayes")

  } else{
        model3.9 <- readRDS("./output/models/lnRRQ10_3.9")
  model3.9_bayes <- readRDS("./output/models/lnRRQ10_3.9_bayes")
}

#################################################
### Bayesian Slopes from Model 3.9
#################################################
 posteriors <- posterior_samples(model3.9_bayes, "^b") 
        
    slope_f <-     posteriors[,"b_cv_c"]; pmcmc(slope_f); mean(slope_f); quantile(slope_f, c(0.025, 0.975))
    slope_m <-     posteriors[,"b_cv_c"] + posteriors[,"b_cv_c:habitatm"]; pmcmc(slope_m); quantile(slope_m, c(0.025, 0.975))
    slope_t <-     posteriors[,"b_cv_c"] + posteriors[,"b_cv_c:habitatt"]; pmcmc(slope_t); quantile(slope_t, c(0.025, 0.975))
   
##################################################
    # Model 3.8, 3.9 and 3.10 - Habitat subset
##################################################
    # Subset data to habitat
    lnRRQ10_data_wild_acclim_t <- lnRRQ10_data_wild_acclim %>% filter(habitat == "t")
    lnRRQ10_data_wild_acclim_f <- lnRRQ10_data_wild_acclim %>% filter(habitat == "f")
    lnRRQ10_data_wild_acclim_m <- lnRRQ10_data_wild_acclim %>% filter(habitat == "m")

if(rerun){
    # Terrestrial Models
    model3.9_t  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_t)
    saveRDS(model3.9_t, "./output/models/model3.9_t")
                   
    # Freshwater Models
    
    model3.9_f  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_f)

    saveRDS(model3.9_f, "./output/models/model3.9_f")

    # Marine Models

    model3.9_m  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_m)
    saveRDS(model3.9_m, "./output/models/model3.9_m")
    
  } else {
     model3.9_t <- readRDS("./output/models/model3.9_t")
     model3.9_f <- readRDS("./output/models/model3.9_f")
     model3.9_m <- readRDS("./output/models/model3.9_m")
}

```

```{r wildlnvr}
#| label: wildlnvr
#| cache: true
#| include: false
#| echo: false
#| warning: false
#| 
#######################################
  ## lnVRQ10 from Wild Populations ##
#######################################
##################################################
  # Organise the data and prune tree
##################################################

# Bring in  historical climate data
  climate <- read.csv("./output/climate_data/ERA5_air_and_SST_timeseries.csv")

# Create a match column.
  climate2 <- climate %>% mutate(match = interaction(Species, Latitude, Longitude)) %>% 
                          dplyr::select(Species, Latitude, Longitude, match, cv, sd, mean, acf_lag1, acf_all)

# Populations and species?
  pop_spp_w <- climate2[complete.cases(climate2),]

# Subset the data
  lnVRQ10_data_wild <- data_long2 %>% 
    filter(grepl("lnVR", name) & !is.na(effect_size) & !is.na(V) & !V == 0 & !is.na(acclim_period) & source == "w") %>% 
                        mutate(spp = species_full, 
                                     c_accl_time = acclim_period - mean(acclim_period, na.rm = TRUE), 
                                     match = interaction(spp, lat, long),
                                     max_temp_c = scale(temp_2, scale = FALSE))

# Now, join climate data to full data. This will give us all the climate variability data for each site across time
  lnVRQ10_data_wild <- left_join(lnVRQ10_data_wild, climate2, by = "match")

# Check and prune tree
  tree_lnvr_wild <- tree_checks(data = lnVRQ10_data_wild, tree = tree_p0.7, dataCol = "species_full", type = "prune")
  tree_checks(data = lnVRQ10_data_wild, tree = tree_lnvr_wild, dataCol = "species_full", type = "check") # Good

# Create the phylo correlation matrix
  phylo_cor_wild_vr <- vcv(tree_lnvr_wild, cor = TRUE)
          A_wild_vr <- vcv(tree_lnvr_wild, cor = FALSE) # For bayes, need cov matrix

# Scale environment variables
    lnVRQ10_data_wild <- lnVRQ10_data_wild %>% mutate(     cv_c = scale(cv),
                                                        acf_all_c = scale(acf_all),
                                                        acf_lag1_c = scale(acf_lag1))

####################################################
  # Model 5.3: Model environmental variability by acute/acclim
####################################################
rerun = FALSE
if(rerun){
  # More realistic model with 
  model5.3          <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + cv_c + type + type:cv_c, V = V,
                                       random = list(~1 + type | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_vr), dfs = "contain", 
                              test = "t", data = lnVRQ10_data_wild)
  
   model5.3_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  max_temp_c + c_accl_time + cv_c + type + type:cv_c + (1 + type| record_num) + (1 | gr(species_full, cov = A_wild_vr)) + (1 + max_temp_c| spp) + (1|trait), data2 = list(A_wild_vr=A_wild_vr), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnVRQ10_data_wild)
                                  
  # Save model5.3
  saveRDS(model5.3, file = "./output/models/lnVRQ10_5.3")
  saveRDS(model5.3_bayes, file = "./output/models/lnVRQ10_5.3_bayes")

  } else{
        model5.3 <- readRDS("./output/models/lnVRQ10_5.3")
  model5.3_bayes <- readRDS("./output/models/lnVRQ10_5.3_bayes")
}
  

############################################################################################
# Model 5.9: Acclimatization lnVRQ10 only. Test if environmental variance explains 
# differently in each habitat
############################################################################################          
  lnVRQ10_data_wild_acclim <- lnVRQ10_data_wild %>%  filter(type == "acclim")
  
  # Create the phylo correlation matrix
  
  # Check and prune tree
tree_lnvr_wild_acclim <- tree_checks(data = lnVRQ10_data_wild_acclim, tree = tree_p0.7, dataCol = "species_full", type = "prune")
tree_checks(data = lnVRQ10_data_wild_acclim, tree = tree_lnvr_wild_acclim, dataCol = "species_full", type = "check")

phylo_cor_wild_acclim <- vcv(tree_lnvr_wild_acclim, cor = TRUE)
        A_wild_acclim <- vcv(tree_lnvr_wild_acclim, cor = FALSE) # For bayes, need cov matrix
  
  
if(rerun){
  # More realistic model with 
  model5.9  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + cv_c + habitat + habitat:cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnVRQ10_data_wild_acclim)
  
   model5.9_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  max_temp_c + c_accl_time + cv_c + habitat + habitat:cv_c + (1 | record_num) + (1 | gr(species_full, cov = A_wild_acclim)) + (1 + max_temp_c| spp) + (1|trait), data2 = list(A_wild_acclim=A_wild_acclim), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.99, max_treedepth = 12), chains = 4, thin = 1, iter = 5000, warmup = 1000, cores = 8, data = lnVRQ10_data_wild_acclim)
                                  
  # Save models
  saveRDS(model5.9, file = "./output/models/lnVRQ10_5.9")
  saveRDS(model5.9_bayes, file = "./output/models/lnVRQ10_5.9_bayes")

  } else{
        model5.9 <- readRDS("./output/models/lnVRQ10_5.9")
  model5.9_bayes <- readRDS("./output/models/lnVRQ10_5.9_bayes")
}
                  
#################################################
### Bayesian Slopes from Model 5.9
#################################################
 posteriors5.9 <- posterior_samples(model5.9_bayes, "^b") 
        
    slope_f_5.9 <- posteriors5.9[,"b_cv_c"]
    slope_m_5.9 <- posteriors5.9[,"b_cv_c"] + posteriors5.9[,"b_cv_c:habitatm"]
    slope_t_5.9 <- posteriors5.9[,"b_cv_c"] + posteriors5.9[,"b_cv_c:habitatt"]

##################################################
    # Model 5.8, 5.9 and 5.10 - Habitat subset
    # Used for making plots
##################################################
    # Subset data to habitat
    lnVRQ10_data_wild_acclim_t <- lnVRQ10_data_wild_acclim %>% filter(habitat == "t")
    lnVRQ10_data_wild_acclim_f <- lnVRQ10_data_wild_acclim %>% filter(habitat == "f")
    lnVRQ10_data_wild_acclim_m <- lnVRQ10_data_wild_acclim %>% filter(habitat == "m")

if(rerun){
    # Terrestrial Models
    model5.9_t  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnVRQ10_data_wild_acclim_t, control=list(iter.max=1000, rel.tol=1e-8))
    saveRDS(model5.9_t, "./output/models/model5.9_t")
                   
    # Freshwater Models
    
    model5.9_f  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnVRQ10_data_wild_acclim_f)

    saveRDS(model5.9_f, "./output/models/model5.9_f")

    # Marine Models

    model5.9_m  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnVRQ10_data_wild_acclim_m)
    saveRDS(model5.9_m, "./output/models/model5.9_m")
    
  } else {
     model5.9_t <- readRDS("./output/models/model5.9_t")
     model5.9_f <- readRDS("./output/models/model5.9_f")
     model5.9_m <- readRDS("./output/models/model5.9_m")
}

```

### *Past climate does not influence acclimation capacity or expected change in variance*

Thermal variability (i.e., $CV$) experienced by a population in the past did not explain acclimation capacity ([@fig-5]A--C) or changes in physiological rate variance ([@fig-5]D--F) among terrestrial, marine or freshwater populations ("Model 5").

```{r, fig-5}
#| label: fig-5
#| fig-align: center
#| fig-cap: "Past climate variability did not predict acclimation responses. Predicted mean acclimation (thick black line) $lnRR_{Q_{10_{acclim}}}$ (A-C) and $lnVR_{Q_{10_{acclim}}}$ (E-G) as a function of the Thermal Coefficient of Variation (CV) for wild populations across marine, freshwater and terrestrial habitats. Dashed lines indicate 95% confidence intervals and dotted lines indicate 95% prediction intervals. Raw effects are weighted by their precision (inverse sampling variance). Model slope ($\\beta$) along with the 95% CI and $p_{MCMC}$ values for the slopes are shown for each habitat."

size_axis = 20
col <- c("#0871B9", "#F3B40D", "#1BB908")


####################
# lnRR CV
####################
 dat_text <- data.frame(label = c(text(slope_f), text(slope_m), text(slope_t)),
                      label2 = c(text(slope_f, b = FALSE), text(slope_m,b = FALSE), text(slope_t,b = FALSE)),
                      p = c(p_text(slope_f), p_text(slope_m), p_text(slope_t)),
                      title = c("Freshwater", "Marine", "Terrestrial"), 
                      condition = c("f", "m", "t"),
                      x = rep(0, 3),
                      y = rep(-1.1, 3))
y_adj = -3
# Terrestrial
  p_t_rr <-  bubble_plot(model3.9_t, mod = "cv_c", group = "spp", ylab = TeX("$lnRR_{Q_{10_{acclim}}}$"), xlab = "Thermal Coefficient of Variation (CV)", g = TRUE) + 
    geom_point(data = lnRRQ10_data_wild_acclim_t, aes(x = cv_c, y = effect_size, size = 1/sqrt(V)), fill = col[3], colour = "black", stroke = 0.2, shape = 21) + labs(title = dat_text$title[3]) +
  annotate("text", x = dat_text$x[3], y = y_adj, label = TeX(dat_text$p[3]), size = 8) +
  annotate("text", x = dat_text$x[3], y = y_adj + 0.5, label = TeX(dat_text$label2[3]), size = 8) +
  annotate("text", x = dat_text$x[3], y = y_adj + 1, label = TeX(dat_text$label[3]), size = 8) +
theme(axis.text = element_text(size = size_axis), 
      axis.text.y = element_text(size = size_axis), 
      axis.title = element_text(size = size_axis),
      axis.title.x = element_blank(),
      plot.title = element_text( size = 36, hjust = 0)) + ylim(-3,3)

# Marine
p_m_rr <-  bubble_plot(model3.9_m, mod = "cv_c", group = "spp", ylab = TeX("$lnRR_{Q_{10_{acclim}}}"), xlab = "Thermal Coefficient of Variation (CV)", g = TRUE) + 
    geom_point(data = lnRRQ10_data_wild_acclim_m, aes(x = cv_c, y = effect_size, size = 1/sqrt(V)), fill = col[2], colour = "black", stroke = 0.2, shape = 21) +  labs(title = dat_text$title[2]) +
  annotate("text", x = dat_text$x[2]-0.5, y = y_adj, label = TeX(dat_text$p[2]), size = 8) +
  annotate("text", x = dat_text$x[2]-0.5, y = y_adj+0.5, label = TeX(dat_text$label2[2]), size = 8) +
  annotate("text", x = dat_text$x[2]-0.5, y = y_adj+1, label = TeX(dat_text$label[2]), size = 8) +
theme(axis.text = element_text(size = size_axis), 
      axis.text.y = element_text(size = size_axis), 
      axis.title = element_text(size = size_axis), 
      axis.title.x = element_blank(),
      plot.title = element_text( size = 36, hjust = 0)) + ylim(-3, 3)


# Freshwater
p_f_rr <-  bubble_plot(model3.9_f, mod = "cv_c", group = "spp", ylab = TeX("$lnRR_{Q_{10_{acclim}}}"), xlab = "Thermal Coefficient of Variation (CV)", g = TRUE) + 
    geom_point(data = lnRRQ10_data_wild_acclim_f, aes(x = cv_c, y = effect_size, size = 1/sqrt(V)), fill = col[1], colour = "black", stroke = 0.2, shape = 21) +  labs(title = dat_text$title[1]) +
  annotate("text", x = dat_text$x[1]+0.6, y = y_adj, label = TeX(dat_text$p[1]), size = 8) +
  annotate("text", x = dat_text$x[1]+0.6, y = y_adj+0.5, label = TeX(dat_text$label2[1]), size = 8) +
  annotate("text", x = dat_text$x[1]+0.6, y = y_adj+ 1, label = TeX(dat_text$label[1]), size = 8) +
theme(axis.text = element_text(size = size_axis), 
      axis.text.y = element_text(size = size_axis), 
      axis.title = element_text(size = size_axis), 
      axis.title.x = element_blank(),
      plot.title = element_text( size = 36, hjust = 0)) + ylim(-3, 3)

####################
# lnVR CV
####################
dat_textvr <- data.frame(label = c(text(slope_f_5.9), 
                                 text(slope_m_5.9), 
                                 text(slope_t_5.9)),
                      label2 = c(text(slope_f_5.9, b = FALSE), 
                                 text(slope_m_5.9,b = FALSE), 
                                 text(slope_t_5.9,b = FALSE)),
                           p = c(p_text(slope_f_5.9), 
                                 p_text(slope_m_5.9), 
                                 p_text(slope_t_5.9)),
                       title = c("Freshwater", "Marine", "Terrestrial"), 
                      condition = c("f", "m"
                                    , "t"),
                      x = rep(0, 3),
                      y = rep(-4, 3))
 
# Freshwater
  yadj2 = -6
  x_f = 0.6
  p_f_vr <-  bubble_plot(model5.9_f, mod = "cv_c", group = "spp", ylab = TeX("$lnVR_{Q_{10_{acclim}}}$"), xlab = "Thermal Coefficient of Variation (CV)", g =FALSE, k = FALSE) + 
      geom_point(data = lnVRQ10_data_wild_acclim_f, aes(x = cv_c, y = effect_size, size = 1/sqrt(V)), fill = col[1], colour = "black", stroke = 0.2, shape = 21) + 
    annotate("text", x = dat_textvr$x[1]+x_f, y = yadj2, label = TeX(dat_textvr$p[1]), size = 8) +
    annotate("text", x = dat_textvr$x[1]+x_f, y = yadj2+0.8, label = TeX(dat_textvr$label2[1]), size = 8) +
    annotate("text", x = dat_textvr$x[1]+x_f, y = yadj2+1.6, label = TeX(dat_textvr$label[1]), size = 8) +
  theme(axis.text = element_text(size = size_axis), 
        axis.text.y = element_text(size = size_axis), 
        axis.title = element_text(size = size_axis), 
        plot.title = element_text(face = "bold", size = 36, hjust = 0.5)) + 
    ylim(-6, 3.5)
 
# Marine
  x_m = -0.4
  p_m_vr <-  bubble_plot(model5.9_m, mod = "cv_c", group = "spp", ylab = TeX("$lnVR_{Q_{10_{acclim}}}$"), xlab = "Thermal Coefficient of Variation (CV)", g =FALSE, k = FALSE) + 
    geom_point(data = lnVRQ10_data_wild_acclim_m, 
                 aes(x = cv_c, y = effect_size, size = 1/sqrt(V)), 
                 fill = col[2], colour = "black", stroke = 0.2, shape = 21) + 
    annotate("text", x = dat_textvr$x[1]+x_m, y = yadj2, label = TeX(dat_textvr$p[2]), size = 8) +
    annotate("text", x = dat_textvr$x[1]+x_m, y = yadj2+0.8, label = TeX(dat_textvr$label2[2]), size = 8) +
    annotate("text", x = dat_textvr$x[1]+x_m, y = yadj2+1.6, label = TeX(dat_textvr$label[2]), size = 8) +
    theme(axis.text = element_text(size = size_axis), 
        axis.text.y = element_text(size = size_axis), 
        axis.title = element_text(size = size_axis), 
        plot.title = element_text(face = "bold", size = 36, hjust = 0.5)) + 
    ylim(-6, 3.5)

# Terrestrial

x_t = 0
p_t_vr <-  bubble_plot(model5.9_t, mod = "cv_c", group = "spp", ylab = TeX("$lnVR_{Q_{10_{acclim}}}$"), xlab = "Thermal Coefficient of Variation (CV)", g = FALSE, k = FALSE) + 
  geom_point(data = lnVRQ10_data_wild_acclim_t, 
               aes(x = cv_c, y = effect_size, size = 1/sqrt(V)), 
               fill = col[3], colour = "black", stroke = 0.2, shape = 21) +
  annotate("text", x = dat_textvr$x[3]+x_t, y = yadj2, label = TeX(dat_textvr$p[3]), size = 8) +
  annotate("text", x = dat_textvr$x[3]+x_t, y = yadj2+0.8, label = TeX(dat_textvr$label2[3]), size = 8) +
  annotate("text", x = dat_textvr$x[3]+x_t, y = yadj2+1.6, label = TeX(dat_textvr$label[3]), size = 8) +
  theme(axis.text = element_text(size = size_axis), 
      axis.text.y = element_text(size = size_axis), 
      axis.title = element_text(size = size_axis), 
      plot.title = element_text(face = "bold", size = 36, hjust = 0.5)) + 
  ylim(-6, 3.5)

####################
# Full plot
####################


  p_cv <- (p_t_rr + p_m_rr + p_f_rr) / (p_t_vr + p_m_vr + p_f_vr) + 
            plot_annotation(tag_levels = "A") & theme(plot.tag = element_text(size = 36))

  ggsave(p_cv, width = 18, height = 10, filename = "./output/figures/fig7.png")

  p_cv <- image_read("./output/figures/fig7.png")
  p_cv 
```

### *Changes in physiological rate variance under climate change*

```{r, globalvr}
#| label: global
#| echo: false
#| include: false

# Here, we want to make global predictions, at the lat/long in the data for how the opportunity of selection is expected to change with climate change. How can we do this? Q10 effects already have temperature controls within the effect size. So, what we want is to be able to understand how Q10 changes with latitude and longitude. Once we know that, we an extract how temperature is expected to change from our current levels to future levels. This will be in degrees C. Then, assuming no plasticity and evolution (big assumption) we can get a baseline change in variance for each site. We first need to adjust the predicted Q10 value so that it's at 1C temperature, not 10, we can do this through this formula Qt = (Q10 / 10)*T, where T is the temperature change in C. This will adjust the predicted Q10 value to the change in 1 degree C. We can then multiply this by the temperature change expected at that location to get the % change in variance or acure/acclim response. We can then plot these globally. 

#############################
rerun = FALSE
if(rerun){
  
  # Model lat and long. Need to exclude missing acclimdation data. That will make it easier to create predcitions and explore the model fit. Include max temp to correct predictions for possible decrease at higher temps.
    
   model6_bayes <- brms::brm(effect_size | se(sqrt(V)) ~  max_temp_c + c_accl_time + type*habitat + t2(Longitude, Latitude) +
                               (1 + type | record_num) + 
                               (1 | gr(species_full, cov = A_wild_vr)) + 
                               (1 + max_temp_c | spp) + 
                               (1 | trait) + 
                               (1 | obs), 
                      data2 = list(A_wild_vr=A_wild_vr), family = gaussian(), 
                      prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), 
                      control = list(adapt_delta = 0.99, max_treedepth = 12), 
                      chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, 
                      data = lnVRQ10_data_wild[complete.cases(lnVRQ10_data_wild$c_accl_time),])
         
  saveRDS(model6_bayes, file = "./output/models/lnVRQ10_6_bayes")

  } else{
  model6_bayes <- readRDS("./output/models/lnVRQ10_6_bayes")
}

# Lets explore the model and how it's predicting the real data
  data_w_vr <- lnVRQ10_data_wild[complete.cases(lnVRQ10_data_wild$c_accl_time),]

# combine with predictions
  data_w_pred_vr <- cbind(data_w_vr, predict(model6_bayes))

# Fitted vs actual data
  ggplot(data = data_w_pred_vr, aes(x = Estimate, y = effect_size))      + 
        geom_point() + geom_smooth(method = "lm")                     + 
        labs(x = "Predicted Effect Size", y = "Observed Effect Size") + 
        theme_classic()                                               + 
        geom_abline(intercept = 0, slope = 1)

# Seems to be OK, but over and under-predicting at times. Lets explore the data for odd ball predictions to see if there are any obvious reasons why. There are very few for the most part but lets see why sign changes occur which are most striking differences. Sign changes indicate the observed data is completely opposite in sign to the predicted data

#  Spot check of a bunch of studies doesn't show any obvious issues with the data. Note that data is repeated because acute and acclimated rates are calculated. We expect the rows of raw data for acute and acclim to be repeated even though these data are NOT all used to make the calculation.
  sign_change_dat_vr <- data_w_pred_vr  %>% filter(sign(Estimate) != sign(effect_size))
  #View(sign_change_dat)

# Fitted by Lat/long Longitude, Latitude
  ggplot(data = data_w_pred_vr, aes(y = Estimate, x = Latitude)) + geom_point() + geom_smooth(method = "loess") + labs(x = "Latitude", y = "Predicted Effect Size") + theme_classic() 

  ggplot(data = data_w_pred_vr, aes(y = Estimate, x = Longitude)) + geom_point() + geom_smooth(method = "loess") + labs(x = "Longitude", y = "Predicted Effect Size") + theme_classic() 

# Observed by Lat/long
  ggplot(data = data_w_pred_vr, aes(y = effect_size, x = Latitude)) + geom_point() + geom_smooth(method = "loess") + labs(x = "Latitude", y = "Observed Effect Size") + theme_classic() 

  ggplot(data = data_w_pred_vr, aes(y = effect_size, x = Longitude)) + geom_point() + geom_smooth(method = "loess") + labs(x = "Longitude", y = "Observed Effect Size") + theme_classic() 

# How much variation does this model explain. Need to do this manually because function doesn't seem to work on the model object. Note that this is just for fixed effects, re_formula = NA ignore the random effects.
  re_post_vr <- posterior_samples(model6_bayes, pars = "^sd_")
    v_fix_vr <- apply(predict(model6_bayes, summary = FALSE, re_formula = NA), 1, function(x) var(x)) 

# sigma2_v = typical sampling error variance
  sub_data_vr <- lnVRQ10_data_wild[complete.cases(lnVRQ10_data_wild$c_accl_time),]
  sigma2_v_vr <- sum(1 / sub_data_vr$V) * (dim(sub_data_vr)[1] - 1) /
                 (sum(1 / sub_data_vr$V)^2 - sum((1 / sub_data_vr$V)^2))

# Extract the random effect variances
  v_trait_vr <- re_post_vr$sd_trait__Intercept^2
    v_spp_vr <- re_post_vr$sd_spp__Intercept^2
    v_phy_vr <- re_post_vr$sd_species_full__Intercept^2
    v_std_vr <- re_post_vr$sd_record_num__Intercept^2
      v_r_vr <- re_post_vr$sd_obs__Intercept^2

# Lets get the total variance for the random effects
  tot_re_vr <- v_trait_vr + v_spp_vr + v_phy_vr + v_std_vr + v_r_vr

# Now, calculate r2. Note that this isn't perfect and should be under estimated because we are ignoring random slope
         r2 <- (v_fix_vr) / (v_fix_vr + tot_re_vr) 

    mean(r2) #  0.43
    quantile(r2, probs = c(0.025, 0.975)); #0.33-0.51

######################################################################
# Model predictions for terrestrial, marine and freshwater ectotherms
######################################################################
# Now we need to make predictions for new data. We first need to create new data. We need to do this for each habitat type because they are all a little different.

#############################
## Terrestrial ectotherms
#############################

  terrest_data_vr <- sub_data_vr  %>% 
                  filter(habitat == "t")  %>% 
                  distinct(spp, species_full, habitat, type, Latitude, Longitude)
  
  new_data_t <- data.frame(
                            max_temp_c = 0, 
                            c_accl_time = 0,
                            V = 0,
                            trait = 0,
                            obs = 0, 
                            record_num = 0
    )

  # Create new data frame with only unique values for prediction.
  new_data_t2_vr  <- cbind(terrest_data_vr, new_data_t)

  # We'll now make the predictions from the model object using the new data frame
  terre_pred_vr <- predict(model6_bayes, newdata = new_data_t2_vr, 
                        summary = TRUE, re_formula = NA, 
                        robust = FALSE, intervals = "confidence")

  # We'll also keep the whole posterior which we'll use later on. We need to transpose so that the data match. Each numbered columns is one sample of the posterior.
  terre_pred_no_sum_vr <- cbind(new_data_t2_vr, 
                                t(predict(model6_bayes, newdata = new_data_t2_vr, re_formula = NA, summary = FALSE)))
  
  # Lets merge predictions with the original data
  terrest_data_vr <- cbind(terrest_data_vr, terre_pred_vr)

  # Test manual calculations. We can also set summary = FALSE and then do the calculations ourselves. Note we want robust = FALSE to make the comparisons more similar as otherwise the calculation are different when using summary TRUE/FALSE . These are identical.
  terre_pred2 <- predict(model6_bayes, newdata = new_data_t2_vr, summary = FALSE, re_formula = NA)
  plyr::ldply(apply(terre_pred2, 2, function(x) post_summary(x)))

#############################
## Marine ectotherms  
#############################
  marine_data_vr <- sub_data_vr  %>% filter(habitat == "m") %>% distinct(spp, species_full, habitat, type, Latitude, Longitude)
  
  new_data_m <- data.frame(
       max_temp_c = 0, 
      c_accl_time = 0,
                V = 0,
            trait = 0,
              obs = 0, 
       record_num = 0
    )

  # Create new data frame with only unique values for prediction.
  new_data_m_vr  <- cbind(marine_data_vr, new_data_m)

  # We'll now make the predictions from the model object using the new data frame
  marine_pred_vr <- predict(model6_bayes, newdata = new_data_m_vr, summary = TRUE, 
                            re_formula = NA, intervals = "confidence")

  # We'll also keep the whole posterior which we'll use later on. We need to transpose so that the data match. Each numbered columns is one sample of the posterior.
  marine_pred_no_sum_vr <- cbind(new_data_m_vr, t(predict(model6_bayes, newdata = new_data_m_vr, 
                                                          summary = FALSE, re_formula = NA)))

  # Lets merge predictions with the original data
  marine_data_vr <- cbind(marine_data_vr, marine_pred_vr)

#############################
## Freshwater ectotherms
#############################
  fresh_data_vr <- sub_data_vr  %>% 
                  filter(habitat == "f") %>% 
                  distinct(spp, species_full, habitat, type, Latitude, Longitude)
  
  new_data_f <- data.frame(
                             max_temp_c = 0, 
                            c_accl_time = 0,
                                      V = 0,
                                  trait = 0,
                                    obs = 0, 
                             record_num = 0)

  # Create new data frame with only unique values for prediction.
  new_data_f_vr  <- cbind(fresh_data_vr, new_data_f)

  # We'll now make the predictions from the model object using the new data frame
  fresh_pred_vr <- predict(model6_bayes, newdata = new_data_f_vr, summary = TRUE, 
                           re_formula = NA, intervals = "confidence")

  # We'll also keep the whole posterior which we'll use later on. We need to transpose so that the data match. Each numbered columns is one sample of the posterior.
  fresh_pred_non_sum_vr <- cbind(new_data_f_vr, t(predict(model6_bayes, newdata = new_data_f_vr,
                                                          summary = FALSE, re_formula = NA)))

  # Lets merge predictions with the original data
  fresh_data_vr <- cbind(fresh_data_vr, fresh_pred_vr)

# Now that we have all the predictions we can merge the data together. Note that species itself is not really that useful because each prediction at each latitude and longitude should incorporate the species effect. So we'll remove it. While I retain spp, it's still not totally specific to the species, but left it there so it's clear how these data match with the wild data. Note there are only 134 species because this is subset of the wild data.
         all_pred_vr <- rbind(terrest_data_vr, marine_data_vr, fresh_data_vr) %>% 
                        dplyr::select(-species_full)  %>% 
                        mutate(uniques = as.character(interaction(spp, Latitude, Longitude)))
  all_pred_no_sum_vr <- rbind(terre_pred_no_sum_vr, marine_pred_no_sum_vr, fresh_pred_non_sum_vr) %>%      
                        dplyr::select(-species_full)
           spp_wild  <- length(unique(sub_data_vr$spp))
```

```{r, future_climvr}
#| label: future_clim
#| echo: false
#| warning: false
#| include: false

# Now we want to take the predictions from `global` and use this for future climate sceneios. We have the future temperatures expected for each location. We can then use the predicted Q10 values to calculate the expected change in variance. We can then plot these globally.

# First, lets get the current and future temperature data for 2081-2085. We'll use the mean. 
  future_temp <- read.csv("./output/climate_data/CanESM2_air_and_SST_timeseries.csv")

# Now, lets summarise the mean for the current temps (i.e., 2018-2022)
current_temps <-   future_temp  %>% dplyr::select(Species, Latitude, Longitude, grep("X2018|X2019|X2020|X2021|X2022", colnames(future_temp)))  %>% mutate(mean = apply(.[, grep("X2018|X2019|X2020|X2021|X2022", colnames(.))], 1, function(x) mean(x, na.rm = TRUE)), Celc_curr = mean - 273.15, match = interaction(Species, Latitude, Longitude))

# Lets clean this data up. We only need the mean temperature here, but this needs to be converted to Celsius as right now it's in Kelvins. We'll now take the last 5 years of the future temperature 2096-2100
  future_temps  <- future_temp  %>% dplyr::select(Species, Latitude, Longitude,  grep("X2096|X2097|X2098|X2099|X2100", colnames(future_temp)))  %>% mutate(mean = apply(.[, grep("X2096|X2097|X2098|X2099|X2100", colnames(.))], 1, function(x) mean(x, na.rm = TRUE)), Celc_future = mean - 273.15,  match = interaction(Species, Latitude, Longitude))

# Now we can merge the climate data sets together so that we have the species, lat and long, current and future climate. Then we can calculate the expected 'increase' in T into the future

  climate_data <- left_join(current_temps, future_temps, by = "match")  %>% 
                  dplyr::select(match, Latitude.x, Longitude.x, Species.x, Celc_curr, Celc_future)  %>% 
                  mutate(T_change = Celc_future - Celc_curr)  %>% 
                  rename(Species = Species.x, Latitude = Latitude.x, Longitude = Longitude.x)

# Lets look at future and current. Most, I would expect, should be above the line indicating higher future temperatures.
  ggplot(data = climate_data, aes(x = Celc_curr, y = Celc_future)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Current Temperature (C)", y = "Future Temperature (C)") + theme_classic() + geom_abline(intercept = 0, slope = 1)

# Lets have a global plot of temperature changes to see it spatially 

world_map = map_data("world") %>% 
  filter(! long > 180)

  map2_temp_proj <- ggplot() +
    geom_map(
      data = world_map, map = world_map,
      aes(long, lat, map_id = region),
      color = "black", fill = "lightgray") +
    expand_limits(x = world_map$long, y = world_map$lat) +
    coord_map("moll") +
    geom_point(
      data = climate_data[complete.cases(climate_data$T_change),],
      aes(Longitude, Latitude, color = T_change),
      alpha = 0.7, size = 5
    ) + labs(x = "Longitude", y = "Latitude", color = TeX("$\\Delta$ Temp. ($^\\circ$C)"), title = "Current (2018-2022) vs Future (2096-2100)") + scale_colour_gradient2(trans = "reverse") + theme_map(base_size = 22) + theme(plot.title = element_text(hjust = 0.5))

# Now lets merge all_pred_vr with the climate projections
  # Simplify columns 
  climate_data_new <- climate_data  %>% dplyr::select(-Latitude, -Longitude)

  # Merge with model predictions. This is the predicted lnVRQ10 for 10C change AT the specific latitude and longitude. We must assume that there is no plasticity or adaptation at each site to make projections.
  all_pred2_vr <- all_pred_vr %>% mutate(match = interaction(spp, Latitude, Longitude)) %>% 
              left_join(., climate_data_new, by = "match")  %>% 
              mutate(lnVR_future = (Estimate / 10) * T_change,
                      lnVR_F_l95 = (Q2.5 / 10) * T_change,
                      lnVR_F_u95 = (Q97.5 / 10) * T_change, 
                      per_change = (exp(lnVR_future) - 1) * 100,
                      per_change_l95 = (exp(lnVR_F_l95) - 1) * 100,
                      per_change_u95 = (exp(lnVR_F_u95) - 1) * 100,
                     match = as.character(match),
                     uniques = as.character(uniques))

  # First, lets merge the climate data with the predictions, but here predictions are not summarized. We have the entire posterior
   
    all_pred2_no_sum_vr <-  all_pred_no_sum_vr %>% 
                        mutate(match = interaction(spp, Latitude, Longitude))  %>% 
                        left_join(., climate_data_new, by = "match") 
   
  # Second, lets convert each estimate to lnvr to 1 degree C instead of 10...
   all_pred2_no_sum2_vr <- all_pred2_no_sum_vr %>%  
                        mutate_if(colnames(.) %in% c(1:3200), lncvr_1c) # Note, names lncvr_1c but will work for any effect

  # Third, lets multiply each estimate by the temperature change at that location. I've checked 4 different cells and they are calculated correctly.
    all_pred2_no_sum2_vr[,colnames(all_pred2_no_sum2_vr) %in% c(1:3200)]  <- all_pred2_no_sum2_vr[,colnames(all_pred2_no_sum2_vr) %in% c(1:3200)] * all_pred2_no_sum2_vr$T_change

  # Fourth, we can calculate the percentage change on the posterior
    all_pred2_no_sum2_vr[,paste0("perc", c(1:3200))]  <- (exp(all_pred2_no_sum2_vr[,colnames(all_pred2_no_sum2_vr) %in% c(1:3200)]) - 1)*100

  # Now we can summarise each. Here, what we are doing is taking the mean for each column. Effectively pooling across all the iterations for each dataset. This gives us an estimation of the mean change in variance across all locations/species, but it gives us 3200 point estimates of this mean. We can then use this to calculate the 95% CI's.
    mean_perc <-  apply(all_pred2_no_sum2_vr[,paste0("perc", c(1:3200))], 1, mean, na.rm = TRUE) 
    mean(mean_perc)
    quantile(mean_perc, 0.025)
    quantile(mean_perc, 0.975)
    hist(mean_perc)

  # Now, lets do this but for each habitat, the good old fashioned way. I think that these are so variable because the expected change in the future is quite dramatic, so the variability is high.
  mean_perc_habitat_vr <-  lapply(split(all_pred2_no_sum2_vr,  all_pred2_no_sum2_vr$habitat), function(x) apply(x[,paste0("perc", c(1:3200))], 1, mean, na.rm = TRUE))
  lapply(mean_perc_habitat_vr, mean)
  lapply(mean_perc_habitat_vr, function(x) quantile(x, c(0.025, 0.975)))

# Create a table to summarise everything
tables_future <- all_pred2_vr %>% group_by(habitat) %>% summarise(mean = mean(per_change, na.rm = TRUE), 
                                                                l95 = mean(per_change_l95, na.rm = TRUE), 
                                                                u95 = mean(per_change_u95, na.rm = TRUE))

# Check on how many to increase
  increases <- all_pred2_vr %>% group_by(match)  %>% summarise(n = if_else(any(per_change > 0), 1, 0))
    
```

Measurements of acute and acclimation responses from wild ectotherms were much less common than from captive populations ($N_{species}$ = `r length(unique(all_pred2_vr$spp))`, from `r length(unique(all_pred2_vr$uniques))` wild populations). Globally, there was a clear bias towards species in the Northern Hemisphere ([@fig-fig6]A-C). Projected changes in physiological rate variance were highly variable across the globe, however, variance was predicted to increase at all locations.

Using the ERA5 climate model, predictions of current global changes in physiological rate variance were generally conservative with our model explaining ~ 46\% of the variation in the observed data ($R^2$ = `r round(mean(r2), 2)`, 95\% CI: `r round(quantile(r2, 0.025)[1], 2)` to `r round(quantile(r2, 0.975)[1], 2)`). Climate change is predicted to result, on average, in a `r abs(lapply(mean_perc_habitat_vr, mean)$f)`\% increase in variance for freshwater systems (95\% CI: `r lapply(mean_perc_habitat_vr, function(x) quantile(x, c(0.025, 0.975)))$f[1]` to `r lapply(mean_perc_habitat_vr, function(x) quantile(x, c(0.025, 0.975)))$f[2]`\%, $p_{MCMC}$ = `r p_value(pmcmc(mean_perc_habitat_vr$f))`), a `r abs(lapply(mean_perc_habitat_vr, mean)$m)`\% increase in marine systems (95\% CI: `r lapply(mean_perc_habitat_vr, function(x) quantile(x, c(0.025, 0.975)))$m[1]` to `r lapply(mean_perc_habitat_vr, function(x) quantile(x, c(0.025, 0.975)))$m[2]`\%, $p_{MCMC}$ = `r p_value(pmcmc(mean_perc_habitat_vr$m))`), and a `r abs(lapply(mean_perc_habitat_vr, mean)$t)`\%  increase in terrestrial systems (95\% CI: `r lapply(mean_perc_habitat_vr, function(x) quantile(x, c(0.025, 0.975)))$t[1]` to `r lapply(mean_perc_habitat_vr, function(x) quantile(x, c(0.025, 0.975)))$t[2]`\%, $p_{MCMC}$ = `r p_value(pmcmc(mean_perc_habitat_vr$t))`) under a RCP8.5 climate scenario ([@fig-fig6]D). All results are taken from "Model 6".

```{r, fig-fig6}
#| label: fig-fig6
#| echo: false
#| warning: false
#| message: false
#| fig-cap: "Potential effects of climate change on trait variance. Model predictions for the expected change in $lnVR_{Q_{10}}$ across the globe for terrestrial, marine and freshwater ecthotherms. Predicted change in physiological rate variance for each population based on current temperatures (average from 2018-2022; A-C) as well as the expected change from current temperatures based on future temperature predictions (average from 2096-2100, D). Future climate predictions are the increase in variance expected under a RCP8.5 climate scenario relative to current climate conditions (% change)."

#devtools::install_github("hughjonesd/ggmagnify") #https://github.com/hughjonesd/ggmagnify

world_map = map_data("world") %>% 
  filter(! long > 180)

map1_current <- ggplot() +
  geom_map(
    data = world_map, map = world_map,
    aes(long, lat, map_id = region),
    color = "black", fill = "lightgray") +
  expand_limits(x = world_map$long, y = world_map$lat) +
  coord_map("moll") +
  geom_point(
    data = all_pred_vr  %>% filter(type == "acclim"),
    aes(Longitude, Latitude, color = Estimate),
    alpha = 0.7, size = 5
  ) + labs(x = "Longitude", y = "Latitude", color = TeX("$lnVR_{Q_{10}}$"), title = "Current (2018-2022)") + scale_color_viridis() + theme_map(base_size = 22) +  theme(plot.title = element_text(hjust = 0.5))


zoom_areas <- data.frame(
     x = c(-130, -15, -60, 145),
  xend = c( -50, 48, -35, 155),
     y = c(  25, 34, 0, -45),
  yend = c(  55,  69.8, -60, -10),
  label = c("North America", "Europe", "South America", "Australia")
)

zoom_plots <- lapply(1:nrow(zoom_areas), function(i) {
  map1_current +
    geom_polygon(fill = "gray80", color = "black") +
    coord_cartesian(xlim = c(zoom_areas[i, "x"], zoom_areas[i, "xend"]), 
                    ylim = c(zoom_areas[i, "y"], zoom_areas[i, "yend"])) +
                    theme(legend.position = "none",
                        plot.title = element_blank())
})

map2_future <- ggplot() +
    geom_map(
      data = world_map, map = world_map,
      aes(long, lat, map_id = region),
      color = "black", fill = "lightgray") +
    expand_limits(x = world_map$long, y = world_map$lat) +
    coord_map("moll") +
    geom_point(
      data = all_pred2_vr[complete.cases(all_pred2_vr$per_change),],
      aes(Longitude, Latitude, color = per_change),
      alpha = 0.7, size = 5
    ) + labs(x = "Longitude", y = "Latitude", color = TeX("% $\\Delta$"), title = "Future (2096-2100)") + scale_colour_viridis() + theme_map(base_size = 22) + theme(plot.title = element_text(hjust = 0.5))

# Make a multipanel plot. Make the world_map plot the biggest, and then add the zoomed in plots arond it using pactchwork

p <- (((zoom_plots[[1]] | zoom_plots[[2]]) / map1_current) + map2_future) + plot_layout(heights  = c(1, 2, 2)) + plot_annotation(tag_levels = "A", tag_suffix = ")") & theme(plot.tag = element_text(size = 20, face = "bold"), plot.margin = unit(c(0, 0, 0, 0), "cm"))

ggsave(p, filename = "./output/figures/fig8.png", width = 7.8, height = 10.1)

image_read("./output/figures/fig8.png")
```

## **Discussion**

Understanding acclimation capacity and how variation in physiological rates change across populations and species is important for predicting the ecological and evolutionary consequences of climate change [@Chevin2017; @Chevin2010; @Bolnick2011; @bush2016incorporating; @seebacher2023can; @Sanderson2023; @urban2023and]. Here we show that both acclimation responses ($lnRR_{Q_{10}}$) and increases in physiological rate variance at warmer temperatures ($lnVR_{Q_{10}}$) of ectotherms varied across habitats. Our results uncover an hitherto unrecognised dynamic where the benefits of partial acclimation are paralleled by increases in trait variance that depend on habitat in ways that may have impacts on how ectotherm populations will be able to adapt to increased temperatures.

### ***Acclimation capacities vary among habitats but are often still limited***

We show that the capacity for acclimation of physiological rates differs across habitats. Our findings confirm previous results that quantify the different capacity of terrestrial, marine and freshwater ectotherms to acclimate [@Seebacher2015-wi; @Gunderson2015-hz; @morley2019physiological]. Our analysis confirms findings by @Seebacher2015-wi, @Gunderson2015-hz and @morley2019physiological that all show a general inability of terrestrial ectotherms to physiologically acclimate. These consistent results are interesting given the different physiological traits measured in these meta-analyses (e.g., thermal limits versus physiological rates). 

The change in acclimation $Q_{10}$ we found in our expanded dataset was similar to @Seebacher2015-wi for freshwater organisms (~17\%), but higher in marine ectotherms [decrease of 16\% versus ~10\% in @Seebacher2015-wi], and opposite in terrestrial ectotherms [increase of ~6\% compared to an ~8\% decrease in @Seebacher2015-wi]. The difference observed in terrestrial ectotherms between studies may be due to additional data from terrestrial species added in our analysis, and to the use of newly derived $Q_{10}$ effect sizes that allowed us to control for sampling variance. Greater capacity for acclimation in aquatic organisms may be the result of fewer opportunities for behavioural thermoregulation in aquatic environments making physiological remodeling important for maintaining homeostasis [@Gunderson2015-hz; @morley2019physiological]. Importantly, even though marine and freshwater ectotherms were capable of partial acclimation, on average, the effect size was small (amounting to $Q_{10}$ dropping from ~1.8 to 1.6), suggesting that acclimation provides limited scope for aquatic ectotherms to adjust their physiology to higher temperatures.

### ***Increased variability in physiological rates across habitats: adaptive potential of physiological processes in the face of climate change?***

Contrary to acclimation capacity variance in physiological rates increased across habitats with effect sizes being 3-5 times larger than those observed for acclimation of mean trait values. Mechanistically, it is unclear what exactly is contributing to the increased variation in physiological rates at higher temperatures, but it is likely the result of increased among-individual variability in how biochemical, cellular and physiological processes function at higher temperatures to maintain homeostasis [@tattersall2012coping; @angilletta2009thermal; @somero1995proteins; @fields2001protein; @schulte2011thermal]. Higher temperatures increase membrane fluidity affecting electrochemical gradients and impacting protein structure and function [@somero1995proteins; @fields2001protein; @tattersall2012coping]. Such challenges (among others) may expose among-individual variation within a population. Indeed, there is considerable variation in acclimation capacity among individuals which would increase variance in thermal performance curves within populations [@loughland2020differences; @schulte2011thermal]. 

Importantly, increased variance in physiological rates was not equal among terrestrial, marine and freshwater ectotherms, with increases in variance being higher in freshwater ectotherms (~60\% increase / 10°C) compared to terrestrial ectotherms (~36\% increase / 10°C). One possible hypothesis for the differences in variability we observed across habitats could be that among-individual variation in key parameters affecting the shape of thermal performance curves differ between habitats [@angilletta2009thermal; @huey1989evolution; @tattersall2012coping; @rezende2019thermal]. Our simulations suggest that theoretical and observed $lnVR_{Q_{10}}$ match when thermal performance curves have different among-individual variance in thermal maxima and breadth across habitats making this hypothesis plausible. Such patterns across habitats are expected given that terrestrial ectotherms should be adapted to more extreme and variable thermal environments. Theoretical models also suggest that populations with greater temporal environmental variability exhibit greater thermal breadth [@lynch1987environmental]. However, we did not find support that thermal variation co-varied with $lnVR_{Q_{10}}$ (see below), as would be expected. The relevance of analyses of thermal variability will depend on temporal variation in temperature that is biologically relevant – a challenging feat across diverse taxa, but worthy of future investigation.

Our results further highlight the potential vulnerability of terrestrial ectotherms to climate change. Assuming that changes in variation in physiological rates are underpinned by genetic variation, and that there is a genetic correlation with fitness, smaller increases in physiological variance could limit adaptation in terrestrial habitats more than aquatic habitats in the future [@urban2023and; @hoffmann2011climate]. For example, under climate change we expect an increase in variance in physiological rates of only ~13\% in terrestrial habitats whereas for freshwater habitats we expect variation in physiological rates to increase by ~30\%. Importantly, responses to selection will also depend on the magnitude and direction of genetic covariances with other traits, which need consideration. There will obviously be limits to variance increases, and we predict that organisms closer to their upper thermal limits ($CT_{max}$) will have lower $lnVR_{Q_{10}}$ values compared to those farther away from $CT_{max}$. Some evidence points to possible differences across habitats in upper thermal limits already [@Gunderson2015-hz; @Pinsky2019-fn], making this a fruitful future question to explore.

### ***Plasticity and variance in physiological rates do not differ between life stages***

Acclimation capacities are expected to differ between life-stages because of distinct patterns of dispersal, habitat use and behaviour that force earlier life stages to cope with more variable environmental conditions which can also lead to developmental constraints on how physiological systems respond later in life [@martin2015age; @stearns1976life; @angilletta2009thermal; @noble2018developmental; @o2019developmental; @Pottier2022; @sinclair2016can]. In addition, plastic responses are also expected to be costly [@angilletta2009thermal; @Dewitt1998], such costs can be magnified in later life reducing the capacity for plasticity [e.g., @rossi2019ageing]. These processes can also result in changes to intrapopulation variation in physiological rates at higher temperatures but the direction of change between early and adult life stages is likely to depend on the costs of adjusting physiological processes, energy reserves at different life stages, and the extent to which early life experiences constrain plasticity.

Despite these expectations, our analysis does not show any significant differences between early and late life acclimation capacities and little change in the variance in physiological rates across habitats. This may not be too surprising given that such responses are likely context or trait-dependent [@carter2020life; @moghadam2019heat]. The lack of differences we observed may be because both juvenile and adult animals occupy similar thermal niches, disperse to a similar extent and exhibit comparable thermoregulatory behaviors making physiological responses to temperature similar.  A focus on collecting more detailed information on behaviour, dispersal and thermal environments experienced by different life stages is likely to provide a more complete picture on when plasticity differs. We would also encourage more empirical focus on this question and its potential ecological and evolutionary implications.

### ***Past climate does not influence capacity for physiological acclimation or changes in variance***

Theoretical models predict that plasticity should evolve in populations experiencing greater environmental variability (spatial or temporal), particularly when fluctuations are predictable over time to make environmental cues reliable [@Chevin2017; @Lande2009; @Chevin2010; @Murren2015;  @Reed2010]. Higher spatial and temporal heterogeneity in terrestrial habitats [@steele2019comparison] therefore suggest that plasticity is more likely to evolve in terrestrial environments. However, if thermal variability is too high and unpredictable, the rates of acclimation decrease and there are increased costs associated with re-modelling physiological processes [@angilletta2009thermal] it would instead be expected that phenotypes are canalised during development [@angilletta2009thermal; @Seebacher2015-wi; @loughland2020differences; @Leung2020; @rescan2022experimental; @leung2023phenotypic]. The lack of acclimation in terrestrial ectotherms we observed is consistent with the latter hypothesis, and is supported by other meta-analyses of heat tolerance [@barley2021limited; @Gunderson2015-hz] suggesting that there are costs to being plastic or that the environmental signals are insufficient to trigger endocrine and epigenetic mechanisms that lead to plasticity when environments are not predictable [ @Leung2020].

Whether population capacity for acclimation is related to the thermal variability (or predictability) it experiences is equivocal. We show no relationship between acclimation capacity and thermal variability in marine, freshwater and terrestrial habitats. Our results are consistent with @Gunderson2015-hz who show no relationship between plasticity in heat tolerance and latitude or thermal seasonality. However, other analyses on heat tolerance limits have found relationships between latitude (a proxy for seasonality) [@morley2019physiological] or even direct measures of thermal variability [@verberk2024heat]. @Seebacher2015-wi also found that acclimation capacity was related to a populations thermal variability, however, relationships depended on the habitat and traits in question, and tropical animals showed greater acclimation capacity. Discrepancies across studies could be related to the taxa included in analyses [e.g., @morley2019physiological], different traits or possibly the fact that different climate projections/models are being used to quantify thermal variability. Latitude covaries with a diversity of different ecological attributes aside from temperature [@louthan2021climate], which means it may be capturing other aspects of the environment that affect acclimation capacity. In addition, modelling realistic microenvironments across such diverse taxa is also challenging because it is unclear what the most appropriate spatial and temporal scale might be that is of evolutionary relevance. Historical temperature time series' may not be representative of the selective environment a population has experienced making relationships between capacity for acclimation and temperature variability (or predictability) difficult to pin down.

### ***Conclusions and future directions***

Enhanced knowledge of how variation in physiological rates vary across populations and species, and the degree to which they can be adjusted in response to the environment leads to more informed predictions about the ecological and evolutionary dynamics of natural populations [@forsman2015rethinking; @seebacher2023can; @cooke2021one; @Sanderson2023]. We show general patterns across taxa and habitats that provide a foundation to understand the relationship between plasticity and trait variance, as well as particular trade-offs that could impact the benefits (or lack thereof) of acclimation. It is important to recognise, however, that these patterns do not necessarily apply to all populations. Substantial variation in acclimation responses and changes in variance exist among populations and traits, as evidenced by wide prediction intervals and substantial study- and trait-level variance estimates, which is consistent with our understanding of factors influencing variation in performance curves across taxa [@rezende2019thermal; @tattersall2012coping]. Conservation efforts are often targeted at particular populations or species, and taxonomic differences are important in this context. Regardless, quantitative measures of the changes in variance in physiological rates could be better incorporated into physiological and ecological models to provide more nuanced, and possibly more realistic, predictions about the impacts of climate change on natural populations. While we do not yet understand the relative contribution of environmental and genetic factors to variance changes, models could better decouple how different levels of heritability and total variance impact evolutionary and ecological predictions. Our meta-analysis now provides the opportunity to parameterise such models, and ensure they are better aligned with empirical findings.

Many fascinating questions remain unanswered that will require greater focus on the consequences of
changes in variance (rather than just the mean). Particularly interesting questions include: How do differences in physiological rate variance change energy flow across trophic levels within communities? What are the biochemical, cellular, and physiological mechanisms that underlie differences in physiological rate variance across habitats? Are changes in variance in one trait associated with changes in other traits, or do some traits increase while others decrease? Are changes in physiological rate variance correlated with changes in genetic variation? Answers to these questions will require integrative approaches that combine empirical and theoretical work across multiple levels of biological organisation but will likely provide useful advances in understanding the full consequences that climate change will have on ectotherms across major ecosystems globally.

## Acknowledgements

We would like to thank Malgorzata Lagisz for helping sort out the phylogeny used in our analysis and Enrico Rezende for discussions around alternative implementations of thermal performance curves. We are also grateful to three anonymous reviewers who all provided extremely constructive feedback that greatly improved the manuscript.

## Funding

DWAN is supported by an Australian Research Council (ARC) Future Fellowship (FT220100276) and ARC Discovery Project DP210101152. SN is supported by ARC Discovery Project Grants DP210100812 and DP230101248. FS is supported by ARC Discovery Project Grant DP220101342.

## Data and code availability

All data and code used to reproduce analyses can be found on GitHub at: https://github.com/daniel1noble/Q10_meta_analysis and is deposited in Zenodo (https://doi.org/10.5281/zenodo.11123600).

## Author contributions

Conceptualization: DWAN, FK, FS, SN; Methodology: DWAN, AB, FK, FS, SN; Investigation: DWAN, FK, FS, SN; Visualization: DWAN; Supervision: DWAN, SN, FS; Writing—original draft: DWAN; Writing—review & editing: DWAN, AB, FK, FS, SN.

## Conflict of interest

Authors declare that they have no competing interests.

## References

<br>

::: {#refs}
:::

<br>

## Supplemental Materials

#### **Literature Search Protocol and PRISMA flow diagram**

We performed a literature search using the Web of Science database for articles or proceedings papers published in English from 2013 to 2017 (the date after [@Seebacher2015-wi] searches were conducted) using the following topic search string: *"(acclimat* AND (therm\* OR temp*) NOT (plant* OR tree\* OR forest\* OR fung\* OR mammal\* OR marsup\* OR bird\* OR human OR exercis\* OR train\* OR hypoxi*))"*. We further limited to the following research areas: Anatomy Morphology; Biodiversity Conservation; Biology; Ecology; Endocrinology Metabolism; Entomology; Evolutionary Biology; Marine Freshwater Biology; Physiology; Respiratory System, Reproductive Biology, Zoology.

Our search resulted in 1,321 papers for screening in Rayyan [@Ouzzani2016-ge]. We also cross-checked papers we found in our searches with a recent paper by @Havird2020-mj, which also updates the dataset of @Seebacher2015-wi's. We included any papers that were missed between our searches and those of @Havird2020-mj. @Havird2020-mj added 7 new studies (mainly because they were focused on metabolic rates), and our searches differed from theirs by only a single paper [i.e., @Bulgarella2015-yl]. Given the physiological traits we included were broader than @Havird2020-mj, we had a substantial increase in additional papers that we added to @Seebacher2015-wi's dataset. More specifically, in addition to the `r length(unique(old_papers$record_num))` papers we included from the @Seebacher2015-wi dataset, we extracted data from an extra `r length(unique(new_papers$record_num))` papers (with a total of `r dim(new_papers)[1]` effects; a `r  (length(unique(new_papers$record_num)) / length(unique(old_papers$record_num)))*100`% increase in the number of published articles). Note that @Seebacher2015-wi included a total of 205 publications, however, not all these contained the necessary statistics we needed to derive effect sizes and associated sampling variances (see below). While we may have missed papers, our goal was to obtain a large representative (and unbiased) sample of acclimation research rather than a comprehensive dataset. As such, our database represents the most up-to-date dataset used since @Seebacher2015-wi to answer questions on physiological rates across ectotherms.

We split the screening of titles and abstracts for the 1,321 papers found in our search among DWAN, FK, FS, and SN evenly. To ensure consistency among authors in title and abstract inclusion, relevant authors went through a randomly selected set of papers together before the formal screening to calibrate selection of papers based on our inclusion criteria (see below). In cases of disagreement regarding inclusion, we conservatively included the paper for full text screening and discussed uncertain papers among authors to come to a decision. After title and abstract screening, there was a total of 149 papers for full text screening. Papers were included only if they: 1) measured a physiological rate acutely at two temperatures on a sample of animals chronically exposed to the same two temperatures for at least 1 week; and 2) where physiological rates measured were burst and sustained locomotion, metabolic rates (standard, resting, routine and maximal), heart rates, and/or enzyme activities. Importantly, as in @Seebacher2015-wi, we only included studies that manipulated temperatures within normal thermal ranges for the species.

```{r, fig-prisma}
#| label: fig-prisma
#| fig-cap: "PRISMA flow diagram of the literature search and screening process."
#| echo: false

prisma <- magick::image_read("./output/figures/figS1.png")
prisma
```

#### **Climate data**

To understand how climate is related to a species’ physiological acclimation abilities and changes in variance we used the coordinates reported by each study to extract temperature data from terrestrial and aquatic environments. It was unclear whether climate at the locations of captive reared organisms would be representative of a population's climate history - particularly for species reared under captive condition for many generations. Given that we were interested in understanding climate driven effects on acclimation capacity we only used studies on wild populations for climate analyses.

Monthly average temperature data were extracted from the ERA5 climate model, available from the Copernicus climate data store [@Hersbach2020-hx]. For each population and species in the dataset we extracted a 72-year period (1950-2022) of either surface air temperature (0.01° resolution) for both terrestrial and freshwater taxa, or sea surface temperature for the marine taxa (at 0.25° resolution) using the *ncdf4* R package [vers. `r utils::packageVersion("ncdf4")`, @Pierce2021-lc]. We chose surface temperature because we believed that it was more likely to reflect the micro-thermal environment experienced by terrestrial and freshwater ectotherms at those locations.

Using the thermal time-series data for each location we calculated metrics of thermal variability across months and years as well as estimates of thermal predictability (i.e., autocorrelation). To estimate thermal variability, we calculated the coefficient of variation ($\frac{SD}{M}$, where SD = standard deviation in temperature and M = the mean temperature for each year). We also estimated thermal predictability, by calculating the auto-regressive time lag across months (i.e., a measure of how correlated temperatures were between months), however, identifying biologically relevant lags for such diverse taxa is challenging. As such, we present a coarse analysis using this metric of thermal predictability in the *Supplemental Materials* below.

Lastly, to illustrate the effects that climate warming could have on physiological rate variance we also extracted climate projections into the future. We used the CanESM2 climate model (2005-2100) [vers. 1.2.0; @koen_hufkens_2019_2647541] under a high emissions scenario (RCP8.5).

#### **Further discussions on the assumptions of $lnRR_{Q_{10}}$, $lnVR_{Q_{10}}$ and $lnCVR_{Q_{10}}$ estimates**

$lnRR_{Q_{10}}$, $lnCVR_{Q_{10}}$ and $lnVR_{Q_{10}}$, as with $Q_{10}$ more generally, all assume that the effect of temperature on physiological rates (or changes in relative variance) is log-linear. While this is likely in our data given that we restricted our analysis of $Q_{10}$ to standard operating temperatures for a given species, it may not always be satisfied given the diversity of species in our dataset. $Q_{10}$ [@van1884etudes] has been used extensively in the physiological literature to successfully address a multitude of questions [e.g., @Havird2020-mj; @Seebacher2015-wi]. However, there is a preference for using a Boltzmann – Arrhenius (BA) relationship (or its extension, the Sharpe-Schoolfield model [@molnar2017thermal; @michaletz2024hotter]) to model thermal effects on physiological rates [@gillooly2001effects; @michaletz2024hotter]. While debate still exists over the utility of $Q_{10}$ when modelling temperature-dependence it is important to recognise that both BA and $Q_{10}$ can exhibit curvilinearity as temperatures increase (as discussed in [@michaletz2024hotter]). @white2012information also showed that the BA model may not always perform better. For example, in eukaryotes, modelling thermal dependence using $Q_{10}$ provided a 5.8-fold better fit to metabolic rate data than the BA relationship [@white2012information]. Given that studies included in our analysis never measured full performance curves at acute and acclimation temperatures it was not possible for us to compare different models of thermal dependence. Nonetheless, $Q_{10}$-based effect sizes remain the most practical effect-size for comparing thermal dependence when using existing empircial data, with the benefit that these effects having convenient properties that make them suitable for meta-analysis. Nonetheless, we control for possible violations of the log-linearity assumption in our analyses.

#### **Exploring the impact of maximum treatment temperature on $lnRR_{Q_{10}}$**

```{r, fig-lnrrq10_temp}
#| label: fig-lnrrq10_temp
#| fig-cap: "Bubble plot of the relationship between $lnRR_{Q_{10}}$ and maximum temperature used in treatments within a study. Raw effects are weighted by their precision (inverse sampling variance)."

mod_table <- mod_results(model1.2, mod = "max_temp_c", group = "record_num", at = list(c_accl_time = 0))$mod_table  %>% mutate(moderator = moderator + mean(lnRRQ10_data$temp_2, na.rm = TRUE))

col <- c("#0871B9", "#F3B40D", "#1BB908")
lnrrq10_temp <- ggplot(data = lnRRQ10_data, aes(x = temp_2, y = effect_size)) + 
geom_point(aes(size = 1/sqrt(V), fill = habitat), alpha = 0.8, shape = 21, colour = "black") +
labs(x = TeX("Maximum Temperature ($^{\\circ}$C)"), y = TeX("$lnRR_{Q_{10}}"), size = "Precision (1/SE)", color = "Habitat") + 
ggplot2::geom_smooth(data = mod_table, 
ggplot2::aes(x = moderator , y = lowerPR), method = "loess", 
            formula = y ~ x, se = FALSE, lty = "dotted", colour = "black") + 
ggplot2::geom_smooth(data = mod_table, ggplot2::aes(x = moderator, y = upperPR), method = "loess", 
            formula = y ~ x, se = FALSE, lty = "dotted", colour = "black") + 
ggplot2::geom_smooth(data = mod_table, ggplot2::aes(x = moderator, y = lowerCL), method = "loess", 
            formula = y ~ x, se = FALSE, lty = "dashed", colour = "black") + 
ggplot2::geom_smooth(data = mod_table, ggplot2::aes(x = moderator, y = upperCL), method = "loess", 
            formula = y ~ x, se = FALSE, lty = "dashed", colour = "black") + 
ggplot2::geom_smooth(data = mod_table, ggplot2::aes(x = moderator, y = estimate), method = "loess", 
            formula = y ~ x, se = FALSE, colour = "black") + 
            scale_fill_manual(labels = c("f" = "Freshwater", "m" = "Marine", "t" = "Terrestrial"), values = col)+ labs(fill = "Habitat") + facet_wrap(~type)+
theme_classic() + theme(axis.title  = element_text(size = 30), 
                        axis.text = element_text(size = 26), 
                        axis.text.y = element_text(size = 26),
                        legend.text = element_text(size = 24), 
                        legend.title = element_text(size = 26))

ggsave(lnrrq10_temp, file = "./output/figures/figS2.png", height = 6, width = 8)

lnrrq10_temp <- magick::image_read("./output/figures/figS2.png")
lnrrq10_temp

```

#### **How acclimation time is related to $lnRR_{Q_{10}}$**

```{r, fig-accl_time}
#| label: fig-accl_time
#| fig-cap: "Bubble plot of the relationship between $lnRR_{Q_{10}}$ and acclimation time for terrestrial (green), marine (orange) and freshwater (blue) habitats. Acclimation time is centered around the mean acclimation time (37.5 days) in the data. Not all studies reported acclimation time hence the total number of effects, *k*, was 1767. Raw effects are weighted by their precision (inverse sampling variance)."
  col <- rep(c("#0871B9", "#F3B40D", "#1BB908"), 2)

  accl_time <- bubble_plot(model1.2, mod = "c_accl_time", group = "spp", ylab = TeX("$lnRR_{Q_{10}}$"), xlab = "Centered Acclimaton Time (days)", at = list(type = c("acclim", "acute")), condition.nrow = 1, by = "type", k = FALSE) + geom_point(data = lnRRQ10_data, aes(x = c_accl_time, y = effect_size, fill = habitat), shape = 21, colour = "black") + scale_fill_manual(labels = c("f" = "Freshwater", "m" = "Marine", "t" = "Terrestrial"), values = col) + theme_classic() + theme(axis.title  = element_text(size = 30), 
                        axis.text = element_text(size = 26), 
                        axis.text.y = element_text(size = 26),
                        legend.text = element_text(size = 24), 
                        legend.title = element_text(size = 26))

  ggsave(accl_time, file = "./output/figures/figS3.png", height = 6, width = 8.5)

accl_time <- magick::image_read("./output/figures/figS3.png")
accl_time
```

#### **Comparing cool and warm acclimated acute responses**

```{r, @fig-Sacute}
#| label: fig-Sacute
#| fig.width: 12.7
#| fig.height: 8.7
#| fig-cap: "Mean acute $lnRR_{Q_{10}}$ for cool (blue) and warm (red) acclimated populations for terrestrial (diamonds), marine (square) and freshwater (circle) habitats. Note that points in each category show the full distribution of data irrespective of habitat for simplicity. *k* = total number of effect size estimates while the numbers in brackets indicate the number of species. Thick bars indicate 95% confidence intervals and thin bars indicate 95% prediction intervals. Raw effects are weighted by their precision (inverse sampling variance). Note that means for all three habitats are displayed but there is weak evidence that the means differ between habitats given models with and without an interaction with habitat are equally supported. Note that x-axis is truncated for ease of visualisation. Sample sizes for each habitat for acute warm and cold are: marine [warm = (131, 38, 29), cold = (136, 41, 32)], freshwater [warm = (294, 76, 61), cold = (293, 77, 63)], terrestrial [warm = (83, 31, 35), cold = (84, 31, 35)]. Numbers within brackets are number of effects, number of studies and number of species."
#| echo: false

col_acute <- c("#3F5FAC", "#EF3D25")
Sacute <- orchard_plot(model1.s1_int, mod = "name", by = "habitat", xlab = TeX("$lnRR_{Q_{10}}$"), group = "spp", angle = 45, trunk.size = 1.8, branch.size = 2.8, alpha = 0.4, condition.lab = "Habitat") + scale_x_discrete(labels = c("LnRR_Q10_acute_t2" = "Warm - Acute", "LnRR_Q10_acute_t1" = "Cool - Acute")) + scale_fill_manual(values = col_acute) + scale_colour_manual(values = col_acute) + ylim (-0.5, 2.5) +  theme_classic() + theme(axis.title  = element_text(size = 24),
                                       axis.text = element_text(size = 24),
                                       axis.text.y = element_text(angle = 45, size = 24),
                                       legend.title = element_text(size = 30),
                               legend.text = element_text(size = 24),
                               title = element_text(size = 24), legend.position = "top") 
                               #annotate("text", label= paste0("k = ", k_lnrr_acute$k, " (", k_lnrr_acute$sdy, ")"), x = c(1.2, 2.2), y = 2)

Sacute
ggsave(Sacute, file = "./output/figures/figS4.png", height = 10, width = 12)
```

#### **Interaction-based effect sizes to compare acute and acclimation $lnRR_{Q_{10}}$ within studies**


```{r, wildlnRR_acutevsacclim}
#| label: wildlnRR_acutevsacclim
#| echo: false
#| include: false

###---------------------------------------###
# Analysis that calculates the plastic adjustment, acclimation - acute within a study and trait to look at whether plasticity is correlated with climate. A good point raised by Reviewer 1 that we should test.
###---------------------------------------###

###---------------------------------------###
# Data
###---------------------------------------###

  # Bring in Climate data
  climate <- read.csv("./output/climate_data/ERA5_air_and_SST_timeseries.csv")

  # Create a match column.
  climate2 <- climate %>% 
              mutate(match = paste(Species, Latitude, Longitude, sep =".")) %>% 
              dplyr::select(Species, Latitude, Longitude, match, cv, sd, mean, acf_lag1, acf_all)

  # Subset the data and do some new calculations
    # Steps:
    # 1. Suse wide data
    # 2. Drop out lnVR and lnCVR
    # 3.  Exclude effects where we don't have BOTH acute and acclimation. We need both to subtract from each other
    # 4. Calculate the weighted average of the effects and its associated sampleing variance so we have only a single acute
    # 5. Clean up by removing old acute columns
    # 6. Calculate the difference between acclimation and acute and it's associated associated sampling variance
    # 7. Clean up by removing old acclimation and acute columns as well as all 'r' columns
    # 8. Add a match column for joining climate data

                          drop <- colnames(data_wide)[grep("ln[CV]", colnames(data_wide))]
  
  lnRRQ10_data_acc_minus_aclim <- data_wide %>%        
                  dplyr::select(!all_of(drop)) %>%  
                  filter(!is.na(lnRR_Q10_acute_t1) | !is.na(lnRR_Q10_acute_t2)) %>% 
                  mutate(lnRR_acute = weighted_avg_effects(lnRR_Q10_acute_t1, lnRR_Q10_acute_t2, V_lnRR_Q10_acute_t1, V_lnRR_Q10_acute_t2),
                      lnRR_acute_SV = weighted_avg_sv(V_lnRR_Q10_acute_t1, V_lnRR_Q10_acute_t2))   %>% 
                  dplyr::select(-lnRR_Q10_acute_t1, -lnRR_Q10_acute_t2, -V_lnRR_Q10_acute_t1, -V_lnRR_Q10_acute_t2)  %>% 
                  mutate(lnRRQ10_ac_acclimate = lnRR_acute - lnRR_Q10_acclim, 
                         lnRRQ10_ac_acclimate_SV = lnRR_acute_SV + V_lnRR_Q10_acclim) %>% 
                  dplyr::select(-lnRR_Q10_acclim, -V_lnRR_Q10_acclim, -lnRR_acute_SV, -lnRR_acute, -grep("r[12]", colnames(.)))  %>% 
                  mutate(match = paste(gsub("_", "", species_full), lat, long, sep = "."), 
                    max_temp_c = scale(temp_2, scale = FALSE),
                           spp = species_full)

# Now that we have the data calcualted as the difference between acute and acclimation for each effect we want to know of this difference, i.e., the direction and magnitude of plasticity is associated with climate. We do not need to pivot longer because the response is simply the difference now so we are ready for anlaysis 

# Now, join climate data to full data. This will give us all the climate variability data for each site across time
lnRRQ10_data_wild_acute_vs_acclim <- left_join(lnRRQ10_data_acc_minus_aclim, climate2, by = "match")

# Check and prune tree
tree_lnrr_wild <- tree_checks(data = lnRRQ10_data_wild_acute_vs_acclim, tree = tree_p0.7, dataCol = "species_full", type = "prune")
tree_checks(data = lnRRQ10_data_wild_acute_vs_acclim, tree = tree_lnrr_wild, dataCol = "species_full", type = "check") # Good

# Create the phylo correlation matrix
phylo_cor_wild_ac_acclim <- vcv(tree_lnrr_wild, cor = TRUE)
        A_wild_ac_acclim <- vcv(tree_lnrr_wild, cor = FALSE) # For bayes, need cov matrix

# Scale data
        lnRRQ10_data_wild_acute_vs_acclim <- lnRRQ10_data_wild_acute_vs_acclim %>% 
                                                        mutate(cv_c = scale(cv),
                                                          acf_all_c = scale(acf_all),
                                                          c_accl_time = acclim_period - mean(acclim_period, na.rm = TRUE))

# How much data? Quite a bit with both acute and acclimation, which is good.
        lnRRQ10_data_wild_acute_vs_acclim %>% group_by(habitat) %>% summarise(n = n(), stdy = length(unique(record_num)))

# How much missing data in acclimation time?
  lnRRQ10_data_wild_acute_vs_acclim %>% filter(is.na(acclim_period)) %>% group_by(habitat) %>% summarise(n = n(), stdy = length(unique(record_num)))

####################################################
  # Model3_new: Model environmental variability by acute/acclim
####################################################
  rerun = FALSE

# Ok, now that we have it we may as well just rerun the model using the effect size Reviewer 1 is talking about to show that it is nearly the same (rememnber, we lose power here). Also remoember that positive effect sizes show acclimation because it implies the acute slope is larger than the acclimation slope. Sp, we expect freshwater and marine to have positive overall effect sizes. 

if(rerun){
  model3_new_overall  <- metafor::rma.mv(lnRRQ10_ac_acclimate ~ max_temp_c + c_accl_time + habitat, V = lnRRQ10_ac_acclimate_SV,
                                       random = list(~1 | record_num,
                                                     ~1 | species_full,
                                                     ~1 | trait,
                                                     ~1 + max_temp_c| spp,
                                                     ~1 | obs),
                              R = list(species_full = phylo_cor_wild_ac_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acute_vs_acclim)
  saveRDS(model3_new_overall, file = "./output/models/lnRRQ10_3_new_overall")

  model3_new_overall_bayes <- brms::brm(lnRRQ10_ac_acclimate | se(sqrt(lnRRQ10_ac_acclimate_SV), sigma = TRUE) ~ 
                                max_temp_c + c_accl_time + habitat + (1 | record_num) + 
                              (1 | gr(species_full, cov = A_wild_ac_acclim)) + 
                              (1 + max_temp_c| spp) + 
                              (1|trait), 
                              data2 = list(A_wild_ac_acclim = A_wild_ac_acclim), 
                              family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), 
                              control = list(adapt_delta = 0.98, max_treedepth = 12), 
                              chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, 
                              data = lnRRQ10_data_wild_acute_vs_acclim)
saveRDS(model3_new_overall_bayes, file = "./output/models/lnRRQ10_3_new_overall_bayes")

} else{
  model3_new_overall <- readRDS("./output/models/lnRRQ10_3_new_overall")
  model3_new_overall_bayes <- readRDS("./output/models/lnRRQ10_3_new_overall_bayes")
}


####################################################
  # Get contrasts from overall model
####################################################

  # Extract posteriors
  posteriors_3_overall <- posterior_samples(model3_new_overall_bayes, "^b")

  # Check acclimation time if it explains variation in new effect?
  b_c_accl_time_slope <- posteriors_3_overall[,"b_c_accl_time"]; pmcmc(b_c_accl_time_slope); mean(b_c_accl_time_slope); quantile(b_c_accl_time_slope, c(0.025, 0.975))
  
  # Check slope
   b_max_temp_c <- posteriors_3_overall[,"b_max_temp_c"]; pmcmc(b_max_temp_c); mean(b_max_temp_c); quantile(b_max_temp_c, c(0.025, 0.975))

  # Freshwater
    f_ac_acclim  <- posteriors_3_overall[,"b_Intercept"]; pmcmc(f_ac_acclim); mean(f_ac_acclim); quantile(f_ac_acclim, c(0.025, 0.975))
  # Marine
    m_ac_acclim  <- f_ac_acclim + posteriors_3_overall[,"b_habitatm"]; pmcmc(m_ac_acclim); mean(m_ac_acclim); quantile(m_ac_acclim, c(0.025, 0.975))
  # Terrestrial
    t_ac_acclim  <- f_ac_acclim + posteriors_3_overall[,"b_habitatt"]; pmcmc(t_ac_acclim); mean(t_ac_acclim); quantile(t_ac_acclim, c(0.025, 0.975))

if(rerun){
  # More realistic model with 
  model3_new  <- metafor::rma.mv(lnRRQ10_ac_acclimate ~ max_temp_c + c_accl_time + cv_c + habitat + habitat:cv_c, V = lnRRQ10_ac_acclimate_SV,
                                       random = list(~1 | record_num,
                                                     ~1 | species_full,
                                                     ~1 | trait,
                                                     ~1 + max_temp_c| spp,
                                                     ~1 | obs),
                              R = list(species_full = phylo_cor_wild_ac_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acute_vs_acclim)
  
    model3_new_bayes <- brms::brm(lnRRQ10_ac_acclimate | se(sqrt(lnRRQ10_ac_acclimate_SV), sigma = TRUE) ~ max_temp_c + c_accl_time + cv_c + 
                                  habitat + habitat:cv_c + 
                                  (1 | record_num) + 
                                  (1 | gr(species_full, cov = A_wild_ac_acclim)) + 
                                  (1 + max_temp_c| spp) + 
                                  (1|trait), data2 = list(A_wild_ac_acclim = A_wild_ac_acclim), 
                                  family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), 
                                  control = list(adapt_delta = 0.98, max_treedepth = 12), 
                                  chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data_wild_acute_vs_acclim)
                                  
  # Save model3_new
    saveRDS(model3_new, file = "./output/models/model3_new")
    saveRDS(model3_new_bayes, file = "./output/models/model3_new_bayes")

  } else{
        model3_new <- readRDS("./output/models/model3_new")
  model3_new_bayes <- readRDS("./output/models/model3_new_bayes")
}

#################################################
### Bayesian Slopes from model3_new_bayes
#################################################
 posteriors_model3_new_bayes <- posterior_samples(model3_new_bayes, "^b") 
        
    slope_f_new_delta <- posteriors_model3_new_bayes[,"b_cv_c"]
    slope_m_new_delta <- posteriors_model3_new_bayes[,"b_cv_c"] + posteriors_model3_new_bayes[,"b_cv_c:habitatm"]
    slope_t_new_delta <- posteriors_model3_new_bayes[,"b_cv_c"] + posteriors_model3_new_bayes[,"b_cv_c:habitatt"]

##################################################
    # Models - Habitat subset
    # Used for making plots
##################################################
    # Subset data to habitat
    
    lnRRQ10_data_wild_acclim_t_delta <- lnRRQ10_data_wild_acute_vs_acclim %>% filter(habitat == "t") %>% filter(!is.na(cv_c)) %>% filter(!is.na(c_accl_time))
    lnRRQ10_data_wild_acclim_f_delta <- lnRRQ10_data_wild_acute_vs_acclim %>% filter(habitat == "f") %>% filter(!is.na(cv_c)) %>% filter(!is.na(c_accl_time))
    lnRRQ10_data_wild_acclim_m_delta <- lnRRQ10_data_wild_acute_vs_acclim %>% filter(habitat == "m") %>% filter(!is.na(cv_c)) %>% filter(!is.na(c_accl_time))


  # Check and prune tree

    # Terrestrial. 
        tree_lnrr_delta_wild_t <- tree_checks(data = lnRRQ10_data_wild_acclim_t_delta, tree = tree_p0.7, dataCol = "species_full", type = "prune")
    tree_checks(data = lnRRQ10_data_wild_acclim_t_delta, tree = tree_lnrr_delta_wild_t, dataCol = "species_full", type = "check") # Good

  # Marine
    tree_lnrr_delta_wild_m <- tree_checks(data = lnRRQ10_data_wild_acclim_m_delta, tree = tree_p0.7, dataCol = "species_full", type = "prune")
    tree_checks(data = lnRRQ10_data_wild_acclim_m_delta, tree = tree_lnrr_delta_wild_m, dataCol = "species_full", type = "check") # Good

  # Freshwater
    tree_lnrr_delta_wild_f <- tree_checks(data = lnRRQ10_data_wild_acclim_f_delta, tree = tree_p0.7, dataCol = "species_full", type = "prune")
    tree_checks(data = lnRRQ10_data_wild_acclim_f_delta, tree = tree_lnrr_delta_wild_f, dataCol = "species_full", type = "check") # Good


# Create the phylo correlation matrix
phylo_cor_wild_ac_acclim_t <- vcv(tree_lnrr_delta_wild_t, cor = TRUE)
phylo_cor_wild_ac_acclim_m <- vcv(tree_lnrr_delta_wild_m, cor = TRUE)
phylo_cor_wild_ac_acclim_f <- vcv(tree_lnrr_delta_wild_f, cor = TRUE)
        
        
if(rerun){
  
  # Terrestrial Models: # Note that convergence issues with this model now given data drops too few for a random slope of max temp so need to drop from model. Removed max temp slope. Note some effects are not defined (missing SD for one group etc) so are dropped from model
    model_delta_t  <- metafor::rma.mv(lnRRQ10_ac_acclimate ~ max_temp_c + c_accl_time + cv_c, V = lnRRQ10_ac_acclimate_SV,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_ac_acclim_t), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_t_delta, control=list(iter.max=1000, rel.tol=1e-8))
    saveRDS(model_delta_t, "./output/models/model_delta_t")
                   
    # Freshwater Models. Note some effects are not defined (missing SD for one group etc) so are dropped from model
    
    model_delta_f  <- metafor::rma.mv(lnRRQ10_ac_acclimate ~ max_temp_c + c_accl_time + cv_c, V = lnRRQ10_ac_acclimate_SV,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_ac_acclim_f), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_f_delta)

    saveRDS(model_delta_f, "./output/models/model_delta_f")

    # Marine Models. Note some effects are not defined (missing SD for one group etc) so are dropped from model

    model_delta_m  <- metafor::rma.mv(lnRRQ10_ac_acclimate ~ max_temp_c + c_accl_time + cv_c, V = lnRRQ10_ac_acclimate_SV,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_ac_acclim_m), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_m_delta)
    saveRDS(model_delta_m, "./output/models/model_delta_m")
    
  } else {
     model_delta_t <- readRDS("./output/models/model_delta_t")
     model_delta_f <- readRDS("./output/models/model_delta_f")
     model_delta_m <- readRDS("./output/models/model_delta_m")
}
    
    
```


When measuring plasticity, what is relevant is the difference between $lnRR_{Q_{10_{acute}}}$ and $lnRR_{Q_{10_{acclimation}}}$ because this captures the degree to which organisms plastically adjust (or acclimate). Variation in the magnitude of plasticity across studies is captured in our random slope models and is more powerful given that even studies without acute responses measured can be included. We can then estimate the mean difference between acute and acclimation in our meta-regression models while accounting for variation in responses within studies with our random slope. This analysis is the same as if we were to model the difference in acute and acclimation effect sizes within studies instead of each separately.

We can validate that our main analysis is similar to an analysis that only includes studies with both acute and acclimation responses. To achieve this, we need to derive a new effect size that contrasts the difference between acute and acclimation responses within a given study and trait using the following equation: 

$$
  \Delta lnRR_{Q_{10}} = lnRR_{Q_{10_{acute}}} - lnRR_{Q_{10_{acclimation}}}
$$ {#eq-lnq10_diff}

where, $lnRR_{Q_{10_{acute}}}$ and $lnRR_{Q_{10_{acclimation}}}$ are defined as in @eq-lnq10 in the main manuscript. We can calculate the combined sampling variance of the difference in effect sizes using the following equation:

$$
  s_{\Delta lnRR_{Q_{10}}} = s_{lnRR_{Q_{10_{acute}}}} + s_{lnRR_{Q_{10_{acclimation}}}}
$$ {#eq-Vlnq10_diff}

where, $s_{lnRR_{Q_{10_{acute}}}}$ and $s_{lnRR_{Q_{10_{acclimation}}}}$ is the sampling variance for the acute and acclimation effect sizes, respectively. Again, all notation is defined in @eq-Vlnq10 in the main manuscript. 

It is noteworthy here that our analysis using @eq-lnq10_diff as our main effect size means that we are now interested in the overall meta-analytic mean estimates, not the difference between $lnRR_{Q_{10_{acute}}}$ and $lnRR_{Q_{10_{acclimation}}}$ as in our main analyses. Positive $\Delta lnRR_{Q_{10}}$ values indicate that acute responses are higher than acclimated responses, while negative values indicate the opposite. Positive values indicate that organisms can plastically adjust their physiological rates to acute temperature changes, while negative values indicate that organisms are not able to plastically adjust their physiological rates.

Using $\Delta lnRR_{Q_{10}}$ for each trait within a study we fit a model that estimated the meta-anlaytic mean effect size for each habitat (freshwater, marine and terrestrial) accounting for acclimation time and maximum temperature as in our main analysis, along with random effects of study, species, phylogeny, and trait. Our analyses given quantitatively and qualitatively similar resuls to our main analysis @fig-delta. Acclimation time did not explain variation in $\Delta lnRR_{Q_{10}}$ (slope = `r mean(b_c_accl_time_slope)`, 95\% CI: `r quantile(b_c_accl_time_slope, c(0.025, 0.975))`, p = `r pmcmc(b_c_accl_time_slope)`) and there was weak evidence that maximum temperature explained variation in $\Delta lnRR_{Q_{10}}$ (slope = `r mean(b_max_temp_c)`, 95\% CI: `r quantile(b_max_temp_c, c(0.025, 0.975))`, p = `r pmcmc(b_max_temp_c)`).

Like our analysis with $lnRR_{Q_{10_{acclimation}}}$, $\Delta lnRR_{Q_{10}}$ was also not related to climate variability that a given population experienced @fig-delta-climate.

```{r, fig-delta}
#| label: fig-delta
#| fig-cap: "Meta-analysis results for $\\Delta lnRR_{Q_{10}}$ across different habitats. Thick bars are 95% confidence intervals (CI) and thin bars 95% prediction intervals (PI). $\\beta$ values are the contrasts between acute and acclimation means within each habitat. $\\mu$ values are the overall meta-analytic means averaged across acute and acclimation types within each habitat type. 95% CI's are indicated within square brackets and raw effects are weighted by their precision (inverse sampling variance). $p_{MCMC}$ values are the posterior probability of the contrast or overall meta-analytic mean being different from zero. k = total number of effect size estimates while the numbers in brackets indicate the number of species.  For ease of visualisation, all the raw data plotted for both acute and acclimation type effect sizes are presented as circles. Raw effects are weighted by their precision (inverse sampling variance). "


     col <- c("#0871B9", "#F3B40D", "#1BB908")
  k_lnrr_ac_acl <- manual_extract(model3_new_overall, mod = "habitat", group = "record_num", exclude = NULL)

  p3_ac_aclim <- orchaRd::orchard_plot(model3_new_overall, mod = "habitat", group  = "record_num", weights = "prop", xlab = TeX("\\Delta $lnRR_{Q_{10}}$ (Acute - Acclimation)"), angle = 20, legend.pos = "top.left", trunk.size = 1.8, branch.size = 2.8) + scale_x_discrete(labels = c("T" = "Terrestrial","M" = "Marine" ,"F" = "Freshwater")) +
  theme(legend.direction = "vertical") +
  
  annotate("text", x = 1.5, y = -1, label =TeX(paste0("$\\mu = $", round(mean(f_ac_acclim), 2), "[", round(quantile(f_ac_acclim, 0.025), 2)," to ", round(quantile(f_ac_acclim, 0.975), 2), "] ", " $\\,p_{MCMC}$ = 0.03")), hjust = 0, size = 8) + 
  #annotate("text", x = 1.20, y = -0.5, label =paste0(round(mean(change_f), 3), "%"), hjust = 0, size = 8) + labs(shape = "Type") +
  
  annotate("text", x = 2.5, y = -1, label =TeX(paste0("$\\mu = $", round(mean(m_ac_acclim), 2), "[", round(quantile(m_ac_acclim, 0.025), 2)," to ", round(quantile(m_ac_acclim, 0.975),2), "] ", " $\\,p_{MCMC}$ = 0.01")), hjust = 0, size = 8) + 
  #annotate("text", x = 2.20, y = -0.5, label =paste0(round(mean(change_m), 3), "%"), hjust = 0, size = 8) +
  
  annotate("text", x = 3.5, y = -1, label =TeX(paste0("$\\mu = $", round(mean(t_ac_acclim), 2), "[", round(quantile(t_ac_acclim, 0.025), 2)," to ", round(quantile(t_ac_acclim, 0.975),2), "] ", "$\\,p_{MCMC}$ = 0.36")), hjust = 0, size = 8) + 
  #annotate("text", x = 3.20, y = -0.5, label =paste0(round(mean(change_t), 3), "%"), hjust = 0, size = 8) +
  
  scale_fill_manual(values = col) + scale_color_manual(values = rep("black",3)) + ylim(-1.2, 2)
    
  p3_ac_aclim <- p3_ac_aclim + theme_classic() + theme(axis.title  = element_text(size = 24),
                                       axis.text = element_text(size = 24),
                                       axis.text.y = element_text(angle = 45, size = 24),
                                       legend.title = element_text(size = 30),
                               legend.text = element_text(size = 24),
                               title = element_text(size = 24), legend.position = "top") 

  ggsave(p3_ac_aclim, filename = "./output/figures/figS5.pdf", width = 11.5, height = 8)

  p3_ac_aclim <- image_read("./output/figures/figS5.pdf")
  p3_ac_aclim
  
```

```{r, fig-delta-climate}
#| label: fig-delta-climate
#| fig-cap: "Past climate variability did not predict acclimation responses as measured by $\\Delta lnRR_{Q_{10}}$. Predicted mean acclimation (thick black line) $\\Delta lnRR_{Q_{10}}$ as a function of the Thermal Coefficient of Variation (CV) for wild populations across marine, freshwater and terrestrial habitats. Dashed lines indicate 95% confidence intervals and dotted lines indicate 95% prediction intervals. Raw effects are weighted by their precision (inverse sampling variance). Model slope ($\\beta$) along with the 95% CI and $p_{MCMC}$ values for the slopes are shown for each habitat."

size_axis = 20
col <- c("#0871B9", "#F3B40D", "#1BB908")


####################
# lnVR_Delta CV
####################
 dat_text <- data.frame(label = c(text(slope_f_new_delta), text(slope_m_new_delta), text(slope_t_new_delta)),
                       label2 = c(text(slope_f_new_delta, b = FALSE), text(slope_m_new_delta,b = FALSE), text(slope_t_new_delta,b = FALSE)),
                            p = c(p_text(slope_f_new_delta), p_text(slope_m_new_delta), p_text(slope_t_new_delta)),
                        title = c("Freshwater", "Marine", "Terrestrial"), 
                    condition = c("f", "m", "t"),
                            x = rep(0, 3),
                            y = rep(-1.1, 3))
y_adj = -3
size_axis =14

# Terrestrial
  p_t_rr <-  bubble_plot(model_delta_t, mod = "cv_c", group = "spp", ylab = TeX("$\\Delta lnRR_{Q_{10}}$"), xlab = "Thermal Coefficient of Variation (CV)", g = TRUE) + 
    geom_point(data = lnRRQ10_data_wild_acclim_t_delta, aes(x = cv_c, y = lnRRQ10_ac_acclimate, size = 1/sqrt(lnRRQ10_ac_acclimate_SV)), fill = col[3], colour = "black", stroke = 0.2, shape = 21) + labs(title = dat_text$title[3]) +
  annotate("text", x = dat_text$x[3], y = y_adj, label = TeX(dat_text$p[3]), size = 8) +
  annotate("text", x = dat_text$x[3], y = y_adj + 0.5, label = TeX(dat_text$label2[3]), size = 8) +
  annotate("text", x = dat_text$x[3], y = y_adj + 1, label = TeX(dat_text$label[3]), size = 8) +
theme(axis.text = element_text(size = size_axis), 
      axis.text.y = element_text(size = size_axis), 
      axis.title = element_text(size = size_axis),
      axis.title.x = element_blank(),
      plot.title = element_text( size = 36, hjust = 0)) + ylim(-3,2)

# Marine
p_m_rr <-  bubble_plot(model_delta_m, mod = "cv_c", group = "spp", ylab = TeX("$\\Delta lnRR_{Q_{10}}$"), xlab = "Thermal Coefficient of Variation (CV)", g = TRUE) + 
    geom_point(data = lnRRQ10_data_wild_acclim_m_delta, aes(x = cv_c, y = lnRRQ10_ac_acclimate, size = 1/sqrt(lnRRQ10_ac_acclimate_SV)), fill = col[2], colour = "black", stroke = 0.2, shape = 21) +  labs(title = dat_text$title[2]) +
  annotate("text", x = dat_text$x[2]-0.5, y = y_adj, label = TeX(dat_text$p[2]), size = 8) +
  annotate("text", x = dat_text$x[2]-0.5, y = y_adj+0.5, label = TeX(dat_text$label2[2]), size = 8) +
  annotate("text", x = dat_text$x[2]-0.5, y = y_adj+1, label = TeX(dat_text$label[2]), size = 8) +
theme(axis.text = element_text(size = size_axis), 
      axis.text.y = element_text(size = size_axis), 
      axis.title = element_text(size = size_axis), 
      axis.title.x = element_blank(),
      plot.title = element_text( size = 36, hjust = 0)) + ylim(-3, 3)


# Freshwater
p_f_rr <-  bubble_plot(model_delta_f, mod = "cv_c", group = "spp", ylab = TeX("$\\Delta lnRR_{Q_{10}}$"), xlab = "Thermal Coefficient of Variation (CV)", g = TRUE) + 
    geom_point(data = lnRRQ10_data_wild_acclim_f_delta, aes(x = cv_c, y = lnRRQ10_ac_acclimate, size = 1/sqrt(lnRRQ10_ac_acclimate_SV)), fill = col[1], colour = "black", stroke = 0.2, shape = 21) +  labs(title = dat_text$title[1]) +
  annotate("text", x = dat_text$x[1]+0.6, y = y_adj, label = TeX(dat_text$p[1]), size = 8) +
  annotate("text", x = dat_text$x[1]+0.6, y = y_adj+0.5, label = TeX(dat_text$label2[1]), size = 8) +
  annotate("text", x = dat_text$x[1]+0.6, y = y_adj+ 1, label = TeX(dat_text$label[1]), size = 8) +
theme(axis.text = element_text(size = size_axis), 
      axis.text.y = element_text(size = size_axis), 
      axis.title = element_text(size = size_axis), 
      axis.title.x = element_blank(),
      plot.title = element_text( size = 36, hjust = 0)) + ylim(-3, 3)


  p_cv_delta <- (p_t_rr + p_m_rr + p_f_rr) +
            plot_annotation(tag_levels = "A") & theme(plot.tag = element_text(size = 36))

  ggsave(p_cv_delta, width = 18, height = 10, filename = "./output/figures/figS6.png")

  p_cv_delta <- image_read("./output/figures/figS6.png")
  p_cv_delta 

```


#### **Comparing relative variance changes: the *lnCVR* ratio**
As discussed by @Nakagawa2015-fo there is often a strong mean-variance relationship. As such, the coefficient of variation is often used because it permits standardization of changes in variance as mean trait values change:

$$
lnCVR_{Q_{10}} = ln\left( \frac{\text{CV}_{2}}{\text{CV}_{1}} \right){ \left(\ \frac{10^{\circ}C}{T_{2}-T_{1}} \right) }
$$ {#eq-lnq10CVR} $$
s_{lnCVR_{Q_{10}}} = \left[ \frac{(\text{SD}_{1})^2}{N_{1}({R}_{1})^2} + \frac{(\text{SD}_{2})^2}{N_{2} ({R}_{2})^2} + \frac{1}{2\left( N_{1}-1 \right)} + \frac{1}{2\left(N_{2} - 1\right)} \right]{ \left(\ \frac{10^{\circ}C}{T_{2}-T_{1}} \right) }^2
$$ {#eq-slncvr}

where $CV$ is the coefficient of variation defined as $SD / R$. We refer to $lnCVR_{Q_{10}}$ as relative variance because variance changes are relative to the mean. While we analyse $lnCVR_{Q_{10}}$ it does make the assumption that SD is directly proportional to the mean, and given that we are analysing the mean alongside the variance we present results on $lnCVR_{Q_{10}}$ in the supplement.

#### **Mean-variance relationships to understand patterns in $lnCVR_{Q_{10}}$**

```{r, mc_models}
#| label: mc_models
#| echo: false
#| include: false

 # Model mean variance relationships to estimate the relationship. Two additional models to address reviewer comments about what exactly is changing in the effect size
rerun = FALSE
if(rerun) { 
  
      r_11_m <- bf(log(r1.1_sd) ~ log(r1.1)*habitat + (1|record_num) + (1|spp) + (1|trait)) + gaussian()
      r_12_m <- bf(log(r1.2_sd) ~ log(r1.2)*habitat + (1|record_num) + (1|spp) + (1|trait)) + gaussian()
      r_21_m <- bf(log(r2.1_sd) ~ log(r2.1)*habitat + (1|record_num) + (1|spp) + (1|trait)) + gaussian()
      r_22_m <- bf(log(r2.2_sd) ~ log(r2.2)*habitat + (1|record_num) + (1|spp) + (1|trait)) + gaussian()
  
      mv_model_all <- brm(r_11_m + r_12_m + r_21_m + r_22_m + set_rescor(TRUE), 
                          chains = 4, cores = 4, iter = 4000, warmup = 1000, thin = 1, 
                          control = list(adapt_delta = 0.98), data = lnRRQ10_data)
       saveRDS(mv_model_all, file = "./output/models/mv_model_all")
       
} else {
        mv_model_all <- readRDS("./output/models/mv_model_all")
}

# Post processing
  model_mv1.1 <- posterior_samples(mv_model_all,  pars = "^b_logr11") # Acclimated at 1, measured at 1
  model_mv1.2 <- posterior_samples(mv_model_all,  pars = "^b_logr12") # Acclimated at 1, measured at 2; Acute
  model_mv2.2 <- posterior_samples(mv_model_all,  pars = "^b_logr22") # Acclimated at 2, measured at 2
  model_mv2.1 <- posterior_samples(mv_model_all,  pars = "^b_logr21") # Acclimated at 2, measured at 1; Acute

# Extract slopes
    slope_extract <- function(x, v){
        list = list()
         list[['fresh']] <-  x[,2]  # Slope for freshwater
        list[['marine']] <-  x[,2] + x[, grepl(":habitatm", colnames(x))] # Slope for marine
         list[['terrs']] <-  x[,2] + x[, grepl(":habitatt", colnames(x))] # Slope for terrestrial
         return(list)
    }
  
# From each model, lets get the slopes for each habitat
         r1.1 <-  slope_extract(model_mv1.1)
         r1.2 <-  slope_extract(model_mv1.2)
         r2.1 <-  slope_extract(model_mv2.1)
         r2.2 <-  slope_extract(model_mv2.2)
         
# Summary
         table <- data.frame(
                               mean = do.call("rbind", lapply(r1.1,  mean)),
                               L = do.call("rbind", lapply(r1.1,  function(x) quantile(x, 0.025))),
                               U = do.call("rbind", lapply(r1.1,  function(x) quantile(x, 0.975))))
         
         r_1.2 = data.frame( mean = do.call("rbind", lapply(r1.2,  mean)),
                               L = do.call("rbind", lapply(r1.2,  function(x) quantile(x, 0.025))),
                               U = do.call("rbind", lapply(r1.2,  function(x) quantile(x, 0.975))))
         r_2.1 = data.frame(mean = do.call("rbind", lapply(r2.1,  mean)),
                               L = do.call("rbind", lapply(r2.1,  function(x) quantile(x, 0.025))),
                               U = do.call("rbind", lapply(r2.1,  function(x) quantile(x, 0.975))))
          r_2.2 = data.frame(mean = do.call("rbind", lapply(r2.2,  mean)),
                               L = do.call("rbind", lapply(r2.2,  function(x) quantile(x, 0.025))),
                               U = do.call("rbind", lapply(r2.2,  function(x) quantile(x, 0.975))))
         
          table <- rbind(table, r_1.2,  r_2.1, r_2.2)
          table$habitat <- rep(c("Freshwater", "Marine", "Terrestrial"), 4)
          table$type <- c(rep("r1.1",3),
                          rep("r1.2", 3),
                          rep("r2.1",3),
                          rep("r2.2", 3))
          rownames(table) <- NULL
          
    table <- table %>% dplyr::select(type, habitat, mean, X2.5., X97.5.) %>% rename("2.5%" = X2.5.,
                                                                                    "97.5%" = X97.5.,
                                                                                    "Slope" = mean,
                                                                                    "Treatment" = type,
                                                                                    "Habitat" = habitat) %>% 
      mutate(Type = ifelse(Treatment %in% c("r1.1", "r2.2"), "Acclimation", ifelse(Treatment %in% c("r1.2", "r2.1"), "Acute", " "))) %>% relocate(Type, .before = Treatment) %>% dplyr::arrange(Habitat)
```

We explored mean-variance relationships for the acute and acclimation responses across all traits and habitats. We estimated the scaling relationship between log standard deviation in physiological rates [log(SD)] and log mean physiological rates [log(mean)], accounting for non-independence resulting from effects coming from the same species, study and traits (i.e., random effects of species, study and trait) as done in our main analyses. We also included an interaction between log(mean) and habitat type to better understand how the scaling relationship between log(SD) and log(mean) varies across habitats.

Overall, we found that the relationship between log(mean) and log(SD) of the acute and acclimation responses was generally linear (@fig-mv). Overall, the scaling relationship between log(SD) and log(mean) was sub-linear across all habitats (@tbl-slopes), however, ectotherms from terrestrial habitats had much shallower slopes than marine and freshwater ectotherms, particularly at higher treatment temperatures, indicating increased mean physiological rates generally do not result in higher between individual variance in physiological rates (@tbl-slopes). Interestingly, in marine ectotherms the slope was highest at cooler temperatures, whereas the slope was suppressed when acclimated and/or measured at higher temperatures (i.e., r.1. compared to r1.2, r2.1, r2.2) (@tbl-slopes). In freshwater ectotherms, there were some differences in scaling relationships but they were all fairly comparable no matter what acclimation and test temperature (@tbl-slopes).

```{r, fig-mv}
#| label: fig-mv
#| fig-cap: "Mean-standard deviation relationships for the acute and acclimation responses across all habitats. Relationships are depicted for the low temperature treatment of the study (A) and high temperature treatment (B)."
    col <- c("#0871B9", "#F3B40D", "#1BB908")

 
  mv1 <- ggplot2::ggplot(lnRRQ10_data, aes(x = log(r1.1), y = log(r1.1_sd),color = habitat)) +
                  geom_point(aes(color = habitat), size = 2.2) + 
                  geom_smooth(method = "lm", se = FALSE) + 
                  labs(x = "log (Mean)", y = "log (SD)", color = "Habitat") + 
                  scale_colour_manual(values = col) + 
                  facet_wrap(~type) + theme_classic() + theme(axis.text = element_text(size=14), axis.title = element_text(size = 16), 
                  legend.text = element_text(size = 14), legend.title = element_text(size = 16), strip.text = element_text(size = 16))

  mv2 <- ggplot2::ggplot(lnRRQ10_data, aes(x = log(r1.2), y = log(r1.2_sd), color = habitat)) +
                  geom_point(aes(color = habitat), size = 2.2) + 
                  geom_smooth(method = "lm", se = FALSE) + 
                  labs(x = "log (Mean)", y = "log (SD)", color = "Habitat") + 
                  scale_colour_manual(values = col)  +
                  facet_wrap(~type) + theme_classic() + theme(axis.text = element_text(size=14), axis.title = element_text(size = 16), 
                  legend.text = element_text(size = 14), legend.title = element_text(size = 16), strip.text = element_text(size = 16))

 p_mv <-  (mv1 / mv2)  + plot_annotation(tag_levels = "A") + theme(plot.tag = element_text(size = 20))
  ggsave(p_mv, file = "./output/figures/figS7.png", height = 8, width = 8)
  
  p_mv <- magick::image_read("./output/figures/figS7.png")
  p_mv
```

```{r, tbl-slopes}
#| label: tbl-slopes
#| tbl-cap: "Slopes and 95% credible intervals (lower = 2.5% and upper = 97.5%) of log transformed standard deviation (log(SD)) and log transformed mean (log(mean)) for each of the four treatment types (r1.1, r1.2, r2.1, r2.2). Note that r1.1 and r2.2 represent measurements of physiological rates of acclimated animals and measured at their respective acclimation temperature. In contrast, r1.2 and r2.1 are acute measurements. See Figure 1 in main manuscript for full details on treatments."

flextable(table) %>% bold(part = "header") %>% autofit()
```

#### **Comparing relative variance changes using $lnCVR_{Q_{10}}$**

```{r, lncvrq10}
#| label: lncvrq10
#| echo: false
#| warning: false
#| error: false
#| include: false
#| cache: false

#############
  ## lnCVRQ10
#############
##################################################
  # Organise the data and prune tree
#################################################
  lnCVRQ10_data <- data_long2 %>% filter(grepl("lnCVR", name) & !is.na(effect_size) & !is.na(V) & !V == 0 & !is.na(acclim_period)) %>% 
                              mutate(spp = species_full, c_accl_time = acclim_period - mean(acclim_period, na.rm = TRUE),
                                    max_temp_c = scale(temp_2, scale = FALSE))

# Check and prune tree
  tree_lncvr <- tree_checks(data = lnCVRQ10_data, tree = tree_p0.7, dataCol = "species_full", type = "prune")
  tree_checks(data = lnCVRQ10_data, tree = tree_lncvr, dataCol = "species_full", type = "check") # Good

# Create the phylo correlation matrix
  phylo_cor_CVR <- vcv(tree_lncvr, cor = TRUE)
          A_CVR <- vcv(tree_lncvr, cor = FALSE) # For bayes, need cov matrix

###################################################
  # Model 2.1: Intercept only model.
  # Used for heterogeneity analysis
###################################################
rerun = FALSE
if(rerun){
  model2.1 <- metafor::rma.mv(effect_size ~ 1, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_CVR), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data) 
  
  model2.1_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  1 + (~1 | record_num) + (1 | gr(species_full, cov = A_CVR)) + (1 | spp) + (1|trait), data2 = list(A_CVR=A_CVR), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.99, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnCVRQ10_data)
  
  # Save model1.1
  saveRDS(model2.1, file = "./output/models/lnCVRQ10_2.1")
  saveRDS(model2.1_bayes, file = "./output/models/lnCVRQ10_2.1_bayes")
} else{ 
        model2.1 <- readRDS("./output/models/lnCVRQ10_2.1")
  model2.1_bayes <- readRDS("./output/models/lnCVRQ10_2.1_bayes")
}

# Heterogeneity analysis
   w_cvr <- with(lnCVRQ10_data, 1/V) # weights
  sv_cvr <- sum(w_cvr*(dim(lnCVRQ10_data)[1]-1)) / (sum(w_cvr)^2 + sum(w_cvr^2))

# extract posterior sds, but square them to turn to variance
  posteriors_2.1 <- posterior_samples(model2.1_bayes, pars = c("^sd", "sigma"))^2
  colnames(posteriors_2.1) <- gsub("__Intercept", "", colnames(posteriors_2.1))
  colnames(posteriors_2.1) <- gsub("sd_", "", colnames(posteriors_2.1))
  
    res_cvr <- posteriors_2.1[,"sigma"]
   stdy_cvr <- posteriors_2.1[,"record_num"]
  phylo_cvr <- posteriors_2.1[,"species_full"]
    spp_cvr <- posteriors_2.1[,"spp"]
  trait_cvr <- posteriors_2.1[,"trait"]
  total_cvr <- phylo_cvr + spp_cvr + res_cvr + sv_cvr + stdy_cvr + trait_cvr
 
  # Calculate I2
     tot_i2_cvr <- (sv_cvr / total_cvr)*100    ; mean(tot_i2_cvr)  ; quantile(tot_i2_cvr, c(0.025, 0.975))
   phylo_i2_cvr <- (phylo_cvr / total_cvr)*100 ; mean(phylo_i2_cvr); quantile(phylo_i2_cvr, c(0.025, 0.975))
     spp_i2_cvr <- (spp_cvr / total_cvr)*100   ; mean(spp_i2_cvr)  ; quantile(spp_i2_cvr, c(0.025, 0.975))
    stdy_i2_cvr <- (stdy_cvr / total_cvr)*100  ; mean(stdy_i2_cvr) ; quantile(stdy_i2_cvr, c(0.025, 0.975))
   trait_i2_cvr <- (trait_cvr / total_cvr)*100 ; mean(trait_i2_cvr); quantile(trait_i2_cvr, c(0.025, 0.975))
     res_i2_cvr <- (res_cvr / total_cvr)*100   ; mean(res_i2_cvr)  ; quantile(res_i2_cvr, c(0.025, 0.975))
  
  # Table
     i2_lncvr <- data.frame(name = c("Phylogeny", "Species", "Study", "Trait"),
                           est = c(mean(phylo_i2_cvr),mean(spp_i2_cvr), mean(stdy_i2_cvr), mean(trait_i2_cvr)),
                           lci = c(quantile(phylo_i2_cvr, c(0.025, 0.975))[1], quantile(spp_i2_cvr, c(0.025, 0.975))[1],
                                   quantile(stdy_i2_cvr, c(0.025, 0.975))[1], quantile(trait_i2_cvr, c(0.025, 0.975))[1]),
                           uci = c(quantile(phylo_i2_cvr, c(0.025, 0.975))[2], quantile(spp_i2_cvr, c(0.025, 0.975))[2],
                                   quantile(stdy_i2_cvr, c(0.025, 0.975))[2], quantile(trait_i2_cvr, c(0.025, 0.975))[2]))  
  
###################################################
  # Model 2.2: Model controlling for acclimation time, 
  # type and habitat assuming type can vary by habitat
###################################################

if(rerun){
  # More realistic model 
  model2.2 <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + habitat + type:habitat, V = V, 
                              random = list(~1 + type | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_CVR), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data)
  
   model2.2_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  max_temp_c + c_accl_time + type + habitat + type:habitat + (1 + type | record_num) + (1 | gr(species_full, cov = A_CVR)) + (1 + max_temp_c| spp) + (1|trait), data2 = list(A_CVR=A_CVR), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnCVRQ10_data)
                                  
  # Save model1.2
  saveRDS(model2.2, file = "./output/models/lnCVRQ10_2.2")
  saveRDS(model2.2_bayes, file = "./output/models/lnCVRQ10_2.2_bayes")

  } else{
        model2.2 <- readRDS("./output/models/lnCVRQ10_2.2")
  model2.2_bayes <- readRDS("./output/models/lnCVRQ10_2.2_bayes")
}

######################################################
  # Bayesian Contrasts
######################################################

  posteriors_2.2 <- posterior_samples(model2.2_bayes, pars = "^b")
  f_acute_cvr  <- posteriors_2.2[,"b_Intercept"]; pmcmc(f_acute_cvr)
  f_acclim_cvr <- posteriors_2.2[,"b_Intercept"] + posteriors_2.2[,"b_typeacclim"]
  m_acute_cvr  <- posteriors_2.2[,"b_Intercept"] + posteriors_2.2[,"b_habitatm"]
  m_acclim_cvr <- posteriors_2.2[,"b_Intercept"] + posteriors_2.2[,"b_habitatm"] + posteriors_2.2[,"b_typeacclim"] + posteriors_2.2[,"b_typeacclim:habitatm"]
  t_acute_cvr  <- posteriors_2.2[,"b_Intercept"] + posteriors_2.2[,"b_habitatt"]
  t_acclim_cvr <- posteriors_2.2[,"b_Intercept"] + posteriors_2.2[,"b_habitatt"] + posteriors_2.2[,"b_typeacclim"] + posteriors_2.2[,"b_typeacclim:habitatt"]

# We'll take the marginalised mean for each type as there is no difference between acclimation and acute really except for in freshwater, but this effect size is so tiny. It's a 10% reduction at high temps and acclim is only a 2% reduction in variance at high temps.
  # First get sample sizes
    N <- lnCVRQ10_data %>% group_by(habitat, type) %>% summarise(n=n())
  
  # Calculated weighted mean by sample size. 
    f_cvr_mean <- (f_acute_cvr * N[1,"n"][[1]] + f_acclim_cvr * N[2,"n"][[1]]) / sum(N[1:2, "n"]); pmcmc(f_cvr_mean)
    m_cvr_mean <- (m_acute_cvr * N[3,"n"][[1]] + m_acclim_cvr * N[3,"n"][[1]]) / sum(N[3:4, "n"]); pmcmc(m_cvr_mean)
    t_cvr_mean <- (t_acute_cvr * N[5,"n"][[1]] + t_acclim_cvr * N[6,"n"][[1]]) / sum(N[5:6, "n"]); pmcmc(t_cvr_mean)
  
  # Lets now convert these to a %
    f_cvr_mean_ef  <- abs((exp(f_cvr_mean) - 1)*100) # ~8.4% reduction
    m_cvr_mean_ef  <- abs((exp(m_cvr_mean) - 1)*100) # ~15% reduction
    t_cvr_mean_ef  <- abs((exp(t_cvr_mean) - 1)*100) # ~30% reduction

###################################################
  # Model 2.3: Model controlling for acclimation time, 
  # type and trait category assuming type can vary by habitat
###################################################
  # Add two general trait categories to test for trait differences (whole-organism vs biochemical)
    lnCVRQ10_data <- lnCVRQ10_data %>% 
                    mutate(trait_broad = ifelse(trait_category %in% c("cardiac", "rest_MR", "sprint", "muscle", "endurance", "max_MR"), 
                                                "tissue/organism",
                                         ifelse(trait_category %in% c("ATPase", "metabolic_enzyme", "antiox", "mito_oxidation", "mito_leak"), 
                                                "biochemical", trait_category)))
 # We can also run subsets for each habitat
   tree_m_cvr <- tree_checks(lnCVRQ10_data %>% filter(habitat == "m" & trait_broad != "other"), tree = tree_lncvr, dataCol = "species_full", type = "prune")
   tree_f_cvr <- tree_checks(lnCVRQ10_data %>% filter(habitat == "f" & trait_broad != "other"), tree = tree_lncvr, dataCol = "species_full", type = "prune")
   tree_t_cvr <- tree_checks(lnCVRQ10_data %>% filter(habitat == "t" & trait_broad != "other"), tree = tree_lncvr, dataCol = "species_full", type = "prune")
   
 # cor matrices
   m_phylo_cvr <- vcv(tree_m_cvr, corr = TRUE)
   f_phylo_cvr <- vcv(tree_f_cvr, corr = TRUE)
   t_phylo_cvr <- vcv(tree_t_cvr, corr = TRUE)
    
if(rerun){
  
  # Full Bayesian model   
   model2.3_btrait_bayes <- brms::brm(effect_size | se(sqrt(V)) ~  max_temp_c + c_accl_time + type*trait_broad*habitat + 
                                           (1 + type | record_num) + 
                                           (1 | gr(species_full, cov = A)) + 
                                           (1 + max_temp_c | spp) +(1|trait) + 
                                           (1 + trait_broad |gr(obs, cor = FALSE)),  
                                         data2 = list(A=A_CVR), family = gaussian(), 
                                         prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), 
                                         control = list(adapt_delta = 0.98, max_treedepth = 12), 
                                         chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = filter(lnCVRQ10_data, trait_broad != "other"))
    saveRDS(model2.3_btrait_bayes, "./output/models/model2.3_btrait_bayes")
    
  # Metafor models for creating plots. Subset by habitat to make this easier. Again, cannot include random slope here because it's not possible to do this in metafor.
      # Marine
         model2.3_m_broad <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_broad + type:trait_broad, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 + trait_broad| obs),
                              R = list(species_full = m_phylo_cvr), dfs = "contain", 
                              test = "t", struct = c("GEN","HCS"), phi = 0,
                              data = filter(lnCVRQ10_data, habitat == "m" & trait_broad != "other"))
         saveRDS(model2.3_m_broad, "output/models/model2.3_m_broad")
    
      # Freshwater
         model2.3_f_broad <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_broad + type:trait_broad, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 + trait_broad| obs),
                              R = list(species_full = f_phylo_cvr), dfs = "contain", 
                              test = "t", struct = c("GEN","HCS"),  phi = 0,
                              data = filter(lnCVRQ10_data, habitat == "f" & trait_broad != "other"))
          saveRDS(model2.3_f_broad, "output/models/model2.3_f_broad")
      
      # Terrestrial
         model2.3_t_broad <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_broad + type:trait_broad, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 + trait_broad| obs),
                              R = list(species_full = t_phylo_cvr), dfs = "contain", 
                              test = "t", struct = c("GEN","HCS"), phi = 0,
                              data = filter(lnCVRQ10_data, habitat == "t" & trait_broad != "other"))
         saveRDS(model2.3_t_broad, "output/models/model2.3_t_broad")
  
  } else{
    model2.3_btrait_bayes <- readRDS("./output/models/model2.3_btrait_bayes")
    model2.3_m_broad <- readRDS("output/models/model2.3_m_broad")
    model2.3_f_broad <- readRDS("output/models/model2.3_f_broad")
    model2.3_t_broad <- readRDS("output/models/model2.3_t_broad")
}

###########################################################
  # Processing Bayesian Posteriors
###########################################################
      # Create new data for predictions
       trait_b_data <- data.frame(  type = c("acclim", "acute"),
                              max_temp_c = 0,
                             c_accl_time = 0,
                                       V = 0,
                                 habitat = rep(c("t", "m", "f"), each = 4),
                             trait_broad = rep(c("tissue/organism", "biochemical"), each = 2))     
      
       # Predict from model. Note this is the summary.
         pred_lncvr_traitb <- fitted(model2.3_btrait_bayes, 
                                     newdata = trait_b_data, re_formula = NA,
                                     summary = TRUE, 
                                     robust = FALSE)
         pred_lncvr_traitb <- cbind(trait_b_data, pred_lncvr_traitb)
    
       # Predict to get the posterior. Note that we have the full posterior distribution here for each of the 12 categories in the new data. Here, we want to look at the difference between acute and acclimation within each of the categories. 
            pred_lncvr_traitb_post <- fitted(model2.3_btrait_bayes, 
                                     newdata = trait_b_data, re_formula = NA,
                                     summary = FALSE, 
                                     robust = FALSE)
        contrast_lncvr_trait_post <-  pred_lncvr_traitb_post[,c(1,3,5,7,9,11)] - pred_lncvr_traitb_post[,c(2,4,6,8,10,12)] # Acclimation - acute.
            
        # Contrast statistics
            contrast_lncvr_trait_stats <- data.frame( habitat = rep(c("t", "m", "f"), each = 2),
                                                     trait = rep(c("tissue/organism", "biochemical"), each = 1),
                                                    diff = sapply(data.frame(contrast_lncvr_trait_post), mean),
                                                     l95 = sapply(data.frame(contrast_lncvr_trait_post), function(x) quantile(x, 0.025)),
                                                     u95 = sapply(data.frame(contrast_lncvr_trait_post), function(x) quantile(x, 0.975)),
                                                       p = sapply(data.frame(contrast_lncvr_trait_post), function(x) p_value(pmcmc(x))))

   # Contrasts for pooled acute and acclimation across trait categories
            
            contrast_lncvr_trait_cat_stats <- rbind(get_whole_bio(pred_lncvr_traitb_post, habitat = "t", trait_b_data),
                                                        get_whole_bio(pred_lncvr_traitb_post, habitat = "m", trait_b_data),
                                                        get_whole_bio(pred_lncvr_traitb_post, habitat = "f", trait_b_data))


###################################################
  # Model 2.4: Model controlling for acclimation time, 
  # type and life history stage assuming type can vary by habitat
###################################################

if(rerun){
  # More realistic model 
  model2.4 <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type*habitat*life.hist, V = V, 
                              random = list(~1 + type | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_CVR), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data)
  # Save model
  saveRDS(model2.4, file = "./output/models/lnCVRQ10_2.4")

   model2.4_bayes <- brms::brm(effect_size | se(sqrt(V)) ~  max_temp_c + c_accl_time + type*habitat*life.hist + 
                                 (1 + type| record_num) + 
                                 (1 | gr(species_full, cov = A_CVR)) + 
                                 (1 + max_temp_c| spp) + 
                                 (1|trait) +
                                 (1|obs), 
                               data2 = list(A_CVR=A_CVR), family = gaussian(), 
                               prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), 
                               control = list(adapt_delta = 0.98, max_treedepth = 12), 
                               chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnCVRQ10_data)
                                  
  # Save model
  saveRDS(model2.4_bayes, file = "./output/models/lnCVRQ10_2.4_bayes")

  } else{
        model2.4 <- readRDS("./output/models/lnCVRQ10_2.4")
  model2.4_bayes <- readRDS("./output/models/lnCVRQ10_2.4_bayes")
}

###########################################################
  # Processing Bayesian Posteriors
###########################################################
      # Create new data for predictions
       lh_b_data <- data.frame( c_accl_time = 0, 
                          max_temp_c = 0, 
                                type = relevel(factor(c("acclim", "acute")), ref = "acute"), 
                             habitat = rep(c("m", "f", "t"), each = 4), 
                           life.hist = rep(c("j", "a"), each = 2))    
       
            # I have no idea why the fitted function is not working on this model. We're doing this the old fashioned way
            X <- model.matrix(~max_temp_c + c_accl_time + type*habitat*life.hist, data = lh_b_data) 
   
            # Extract posteriors
              post_lh <- posterior_samples(model2.4_bayes, pars = "^b")
        
        # Now we can do all the calculations in one shot.# Predict to get the posterior. Note that we have the full posterior distribution here for each of the 12 categories in the new data. Here, we want to look at the difference between acute and acclimation within each of the categories. 
            pred_lh <- apply(t(post_lh),2 , function(x) as.matrix(X)%*%x)

        contrast_lncvr_lh_post <-  pred_lh[c(1,3,5,7,9,11),] - pred_lh[c(2,4,6,8,10,12),] # Acclimation - acute.
            
        # Contrast statistics
            contrast_lncvr_lh_stats <- data.frame( habitat = rep(c("t", "m", "f"), each = 2),
                                                     stage = rep(c("j", "a"), each = 1),
                                                    diff = apply(data.frame(contrast_lncvr_lh_post), 1, mean),
                                                     l95 = apply(data.frame(contrast_lncvr_lh_post), 1, function(x) quantile(x, 0.025)),
                                                     u95 = apply(data.frame(contrast_lncvr_lh_post), 1, function(x) quantile(x, 0.975)),
                                                       p = apply(data.frame(contrast_lncvr_lh_post), 1, function(x) p_value(pmcmc(x))))
```

Analysis of $lnCVR_{Q_{10}}$, which accounts for changes in mean physiological rates, also showed that the relative variance for terrestrial ectotherms decreased compared to marine and freshwater ectotherms, suggesting that increases in variance are less than expected for ectotherms occupying terrestrial habitats (@fig-s1). Generally, these results are consistent with those using $lnVR_{Q_{10}}$. 

Overall, analysis of $lnCVR_{Q_{10}}$ suggested that relative variance decreased with higher temperatures across all habitat types, with terrestrial ectotherms having the largest decrease in relative variance (@fig-s1). There were also no major differences in the relative differences among broad trait categories (@fig-cvrbtrait) or life-history stages (@fig-lncvrlh).

```{r, fig-s1}
#| label: fig-s1
#| fig-align: center
#| fig-cap: "Estimated mean acute and acclimation $lnCVR_{Q_{10}}$ for marine, freshwater and terrestrial habitats. The percentage change in variance is also back calculated. Note that these are raw variances and do not account for changes in mean physiological rates. k = total number of effect size estimates while the numbers in brackets indicate the number of species. Thick bars are 95% confidence intervals (CI) and thin bars 95% prediction intervals (PI). Raw effects are weighted by their precision (inverse sampling variance). $\\beta$ values are the contrasts between acute and acclimation means within each habitat with 'NS' signifiying no significant differences. $\\mu$ values are the overall meta-analytic means averaged across acute and acclimation types within each habitat type. In both cases, their 95% CI's are indicated within square brackets. $p_{MCMC}$ values are the posterior probability of the contrast or overall meta-analytic mean being different from zero. For ease of visualisation, all the raw data plotted for both acute and acclimation type effect sizes are presented as circles."

#################
# Fig S CVR
##################
  # Clear from the model that there really is no difference between the change in variance for acute or acclimation CVR. But, there is a clear reduction in between individual variance for terrestrial species. As temperature get hotter then the variance in physiological rates decreases. This is not true of aquatic systems. 
  col <- c("#0871B9", "#F3B40D", "#1BB908")
  k_cvr <- manual_extract(model2.2, mod = "habitat", group = "record_num", exclude = NULL)

  x1 = 1.4
  x2 = 2.4
  x3 = 3.4
  
  p3b <- orchard_plot(model2.2, xlab = TeX("$lnCVR_{Q_{10}}$"), by = "type", at = list(type = c("acute", "acclim")), mod = "habitat", group  = "record_num", weights = "prop", angle = 45, trunk.size = 1.8, branch.size = 2.8,  k.pos = "none")  +
              scale_x_discrete(labels = c("T" = "Terrestrial","M" = "Marine" ,"F" = "Freshwater")) +  
  
  scale_fill_manual(values = col) + scale_color_manual(values = rep("black",3)) +
  
  annotate("text", x = x1, y = -1.5, label =TeX(paste0("$\\mu = $", round(mean(f_cvr_mean), 3), "[", round(quantile(f_cvr_mean, 0.025), 2)," to ", round(quantile(f_cvr_mean, 0.975),2), "] ")), hjust = 0, size = 8) + 
         annotate("text", x = x1, y = 0.5, label =TeX(paste0("$\\beta = $", "NS")), hjust = 0, size = 8) +
  annotate("text", x = x1-0.20, y = -1.5, label = TeX(paste0("$p_{MCMC} = $", round(pmcmc(f_cvr_mean), digit = 2))), hjust = 0, size = 8) + 
  annotate("text", x = x1-0.20, y = 1, label =paste0(round(mean(exp(f_cvr_mean)-1)*100, 2), "%"), hjust = 0, size = 8) + 
  
  annotate("text", x = x2, y = -1.5, label =TeX(paste0("$\\mu = $", round(mean(m_cvr_mean), 3), "[", round(quantile(m_cvr_mean, 0.025), 2)," to ", round(quantile(m_cvr_mean, 0.975),2), "] ")), hjust = 0, size = 8) + 
     annotate("text", x = x2, y = 0.5, label =TeX(paste0("$\\beta = $", "NS")), hjust = 0, size = 8) +
  annotate("text", x = x2-0.20, y = -1.5, label = TeX(paste0("$p_{MCMC} = $", round(pmcmc(m_cvr_mean), digit = 2))), hjust = 0, size = 8) +
  annotate("text", x = x2-0.20, y = 1, label =paste0(round(mean(exp(m_cvr_mean)-1)*100, 2), "%"), hjust = 0, size = 8) + 
  
  annotate("text", x = x3+0.10, y = -1.5, label =TeX(paste0("$\\mu = $", round(mean(t_cvr_mean), 3), "[", round(quantile(t_cvr_mean, 0.025), 2)," to ", round(quantile(t_cvr_mean, 0.975),2), "] ")), hjust = 0, size = 8) + 
  annotate("text", x = x3+0.10, y = 0.5, label =TeX(paste0("$\\beta = $", "NS")), hjust = 0, size = 8) +
  annotate("text", x = x3-0.10, y = 1, label =paste0(round(mean(exp(t_cvr_mean)-1)*100, 2), "%"), hjust = 0, size = 8) + 
  annotate("text", x = x3-0.10, y = -1.5, label = TeX(paste0("$p_{MCMC} = $", round(pmcmc(t_cvr_mean), digit = 3))), hjust = 0, size = 8) + 
    
    labs(shape = "Type") +
    annotate("text", label= paste0("k = ", k_cvr$k, " (", k_cvr$sdy, ")"), x = c(0.8, 1.8, 2.8), y = 1.3, size = 5) + ylim (-1.5, 1.5) 
   
  p3b <- p3b + theme_classic() + theme(axis.title  = element_text(size = 24),
                                       axis.text = element_text(size = 24),
                                       legend.title = element_text(size = 30),
                               legend.text = element_text(size = 24),
                               title = element_text(size = 24), legend.position = "top") + guides(shape = "none")

##################
  # Figure 
################## 

  
  ggsave(p3b, filename = "./output/figures/figS8.pdf", width = 11.5, height = 8)

  figs1 <- image_read("./output/figures/figS8.pdf")
  figs1
```

```{r, fig-cvrbtrait}
#| label: fig-cvrbtrait
#| fig-cap: "Estimated mean acclimation and acute $lnCVR_{Q_{10}}$ for tissue/whole-orgamism traits and biochemical traits across  terrestrial (A), marine (B) and freshwater (C) habitats. Across all plots, thick bars indicate 95% confidence intervals and thin bars indicate 95% prediction intervals. Raw effects are weighted by their precision (inverse sampling variance). *k* = total number of effect size estimates while the numbers in brackets indicate the number of species. For ease of visualisation, raw data for both trait categories are presented but points are not distinguished by different symbols. $\\beta$ values are the contrasts between acute and acclimation means within each life stage. $p_{MCMC}$ values are the posterior probability of the contrast being different from zero."
#| echo: false
#| warning: false

add_theme  <- function(){theme(axis.title  = element_text(size = 30),
                               axis.text.y = element_text(size = 30),
                               axis.text.x = element_text(size = 30),
                              legend.title = element_text(size = 30),
                               legend.text = element_text(size = 24),
                               title = element_text(size = 36))}

branch.size = 2.8
trunk.size = 1.8

n_lncvr_btrait  <- lnCVRQ10_data  %>% filter(trait_broad != "other") %>% 
              group_by(habitat, trait_broad, type) %>% summarise(k = n(), spp = length(unique(spp))) %>% arrange(trait_broad, type, habitat)

       col <- c("#0871B9", "#F3B40D", "#1BB908")
     x.pos <- c(0.7, 1.30, 1.70, 2.30)
size_annot <- 5.5

############
# CVR
############
m_cv <- n_lncvr_btrait %>% filter(habitat == "m")
f_cv <- n_lncvr_btrait %>% filter(habitat == "f")
t_cv <- n_lncvr_btrait %>% filter(habitat == "t")

t_trait_b_cvr <- contrast_lncvr_trait_stats %>% filter(habitat == "t") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(trait)
m_trait_b_cvr <- contrast_lncvr_trait_stats %>% filter(habitat == "m") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(trait)
f_trait_b_cvr <- contrast_lncvr_trait_stats %>% filter(habitat == "f") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(trait)


p1_cvr <- orchard_plot(model2.3_m_broad, mod = "trait_broad", at = list(c_accl_time = 0, habitat = "m"), group = "record_num", xlab = TeX("$lnCVR_{Q_{10}}$"), condition.lab = "Type", by = "type",  g = FALSE, k = FALSE, angle = 45, branch.size = branch.size, trunk.size = trunk.size) + labs(title = "Marine") + ylim(c(-2, 2.2)) + add_theme() + ylim(-1.7, 1.6)  + annotate("text", x = x.pos, y = 0.8, label = TeX(paste0("\\it{k} = ", m_cv$k, " (", m_cv$spp, ")")), size = size_annot) + theme(legend.position = "none", axis.text.y = element_blank()) + scale_fill_manual(values = rep(col[2],4)) + scale_color_manual(values = rep("black", 4)) + annotate("text", x = yloc, y = -1.7, label = TeX(paste0("$\\beta$ = ", m_trait_b_cvr$diff, " [", m_trait_b_cvr$l95, " to ", m_trait_b_cvr$u95, "] ", "$\\,p_{MCMC}$ = ", m_trait_b_cvr$p)), hjust = 0, size = 8)

p2_cvr <- orchard_plot(model2.3_f_broad, mod = "trait_broad", at = list(c_accl_time = 0, habitat = "f"), group = "record_num", xlab = TeX("$lnCVR_{Q_{10}}$"), condition.lab = "Type", by = "type", angle = 45, g = FALSE, k = FALSE, branch.size = branch.size, trunk.size = trunk.size)  + labs(title = "Freshwater") + add_theme() + ylim(-1.6, 1.3) + annotate("text", x = x.pos, y = 0.8, label = TeX(paste0("\\it{k} = ", f_cv$k, " (", f_cv$spp, ")")), size = size_annot) + theme(legend.position = "right", legend.justification = c(1, 1), axis.text.y = element_blank()) + guides(shape = guide_legend(direction = "vertical"), size = guide_legend(direction = "vertical")) + scale_fill_manual(values = rep(col[1], 4)) + scale_color_manual(values = rep("black", 4)) + annotate("text", x = yloc, y = -1.6, label = TeX(paste0("$\\beta$ = ", f_trait_b_cvr$diff, " [", f_trait_b_cvr$l95, " to ", f_trait_b_cvr$u95, "] ", "$\\,p_{MCMC}$ = ", f_trait_b_cvr$p)), hjust = 0, size = 8)

p3_cvr <- orchard_plot(model2.3_t_broad, mod = "trait_broad", at = list(c_accl_time = 0, habitat = "t"), angle = 45, group = "record_num", xlab = TeX("$lnCVR_{Q_{10}}$"), condition.lab = "Type", by = "type",  g = FALSE, k = FALSE, branch.size = branch.size, trunk.size = trunk.size)+ labs(title = "Terrestrial") + add_theme()  + ylim(-2, 2) + annotate("text", x = x.pos, y = 1.5, label = TeX(paste0("\\it{k} = ", t_cv$k, " (", t_cv$spp, ")")), size = size_annot) +  theme(legend.position = "none") + scale_fill_manual(values = rep(col[3], 4)) + scale_color_manual(values = rep("black", 4)) + annotate("text", x = yloc, y = -2, label = TeX(paste0("$\\beta$ = ", t_trait_b_cvr$diff, " [", t_trait_b_cvr$l95, " to ", t_trait_b_cvr$u95, "] ", "$\\,p_{MCMC}$ = ", t_trait_b_cvr$p)), hjust = 0, size = 8)


############
# Full fig
############
figbtrait_vr <-(p3_cvr | p1_cvr | p2_cvr) + plot_annotation(tag_levels = "A") 
ggsave(figbtrait_vr, filename = "./output/figures/figS9.png", width = 28, height = 8, device = "png")

figbtrait <- magick::image_read("./output/figures/figS9.png")
figbtrait
```

```{r, fig-lncvrlh}
#| label: fig-lncvrlh
#| echo: false
#| fig-cap: "Estimated mean acclimation and acute $lnCVR_{Q_{10}}$ for adult (a) and juvenile (j) life-history stages for terrestrial (A), marine (B) and freshwater (C) ectotherms. Across all plots, thick bars indicate 95% confidence intervals and thin bars indicate 95% prediction intervals. *k* = total number of effect size estimates while the numbers in brackets indicate the number of species. For ease of visualisation, raw data for both adult and juvenile life-history stages are presented but points are not distinguished by different symbols. $\\beta$ values are the contrasts between acute and acclimation means within each life stage. $p_{MCMC}$ values are the posterior probability of the contrast being different from zero."

add_theme  <- function(){theme(axis.title  = element_text(size = 30),
                               axis.text.y = element_text(size = 30),
                               axis.text.x = element_text(size = 30),
                              legend.title = element_text(size = 30),
                               legend.text = element_text(size = 24),
                               title = element_text(size = 36))}

branch.size = 2.8
trunk.size = 1.8

n_lncvr_lh <- lnCVRQ10_data %>% group_by(habitat, life.hist, type) %>% summarise(k = n(), spp = length(unique(spp))) %>% arrange(type, life.hist, habitat)

x.pos = c(0.7, 1.30, 1.70, 2.30)
size_annot <- 5.5

###############
# ln CVR
###############
m_cv <- n_lncvr_lh %>% filter(habitat == "m")
f_cv <- n_lncvr_lh %>% filter(habitat == "f")
t_cv <- n_lncvr_lh %>% filter(habitat == "t")

  t_trait_cvr <- contrast_lncvr_lh_stats %>% filter(habitat == "t") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(stage)
m_trait_b_cvr <- contrast_lncvr_lh_stats %>% filter(habitat == "m") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(stage)
f_trait_b_cvr <- contrast_lncvr_lh_stats %>% filter(habitat == "f") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(stage)


p1_cvr <- orchard_plot(model2.4, mod = "life.hist", at = list(c_accl_time = 0, habitat = "m"), group = "record_num", xlab = TeX("$lnCVR_{Q_{10}}$"), condition.lab = "Type", by = "type",  g = FALSE, k = FALSE, angle = 45, branch.size = branch.size, trunk.size = trunk.size) + ylim(c(-2, 2.2)) + labs(title = "Marine") + add_theme() + ylim(-1.5, 1.1)  + annotate("text", x = x.pos, y = 0.8, label = TeX(paste0("\\it{k} = ", m_cv$k, " (", m_cv$spp, ")")), size = size_annot) + theme(legend.position = "none", axis.text.y = element_blank()) + annotate("text", x = yloc, y = -1.3, label = TeX(paste0("$\\beta$ = ", m_trait_b_cvr$diff, " [", m_trait_b_cvr$l95, " to ", m_trait_b_cvr$u95, "] ", "$\\,p_{MCMC}$ = ", m_trait_b_cvr$p)), hjust = 0, size = 8)

p2_cvr <- orchard_plot(model2.4, mod = "life.hist", at = list(c_accl_time = 0, habitat = "f"), group = "record_num", xlab = TeX("$lnCVR_{Q_{10}}$"), condition.lab = "Type", by = "type", angle = 45, g = FALSE, k = FALSE, branch.size = branch.size, trunk.size = trunk.size)  + labs(title = "Freshwater") + add_theme() + ylim(-1.3, 1.1) + annotate("text", x = x.pos, y = 0.8, label = TeX(paste0("\\it{k} = ", f_cv$k, " (", f_cv$spp, ")")), size = size_annot) + theme(legend.position = "right", legend.justification = c(1, 1), axis.text.y = element_blank()) + guides(shape = guide_legend(direction = "vertical"), size = guide_legend(direction = "vertical")) + annotate("text", x = yloc, y = -1.3, label = TeX(paste0("$\\beta$ = ", f_trait_b_cvr$diff, " [", f_trait_b_cvr$l95, " to ", f_trait_b_cvr$u95, "] ", "$\\,p_{MCMC}$ = ", f_trait_b_cvr$p)), hjust = 0, size = 8)

p3_cvr <- orchard_plot(model2.4, mod = "life.hist", at = list(c_accl_time = 0, habitat = "t"), angle = 45, group = "record_num", xlab = TeX("$lnCVR_{Q_{10}}$"), condition.lab = "Type", by = "type",  g = FALSE, k = FALSE, branch.size = branch.size, trunk.size = trunk.size)+ labs(title = "Terrestrial") + add_theme()  + ylim(-1.55, 1.1) + annotate("text", x = x.pos, y = 0.6, label = TeX(paste0("\\it{k} = ", t_cv$k, " (", t_cv$spp, ")")), size = size_annot) +  theme(legend.position = "none") + annotate("text", x = yloc, y = -1.55, label = TeX(paste0("$\\beta$ = ", t_trait_cvr$diff, " [", t_trait_cvr$l95, " to ", t_trait_cvr$u95, "] ", "$\\,p_{MCMC}$ = ", t_trait_cvr$p)), hjust = 0, size = 8) + scale_x_discrete(labels = c("A" = "Adult","J" = "Juvenile")) 


figcvr_lh <-(p3_cvr | p1_cvr | p2_cvr) + plot_annotation(tag_levels = "A") 
ggsave(figcvr_lh, filename = "./output/figures/figS10.pdf", width = 28, height = 10, device = "pdf")

figcvr_lh <- magick::image_read("./output/figures/figS10.pdf")
figcvr_lh

```

```{r wildlncvr}
#| label: wildlncvr
#| cache: true
#| include: false
#| echo: false
#| warning: false
#| 
#######################################
  ## lnCVRQ10 from Wild Populations ##
#######################################
##################################################
  # Organise the data and prune tree
##################################################

# Bring in  historial climate data
  climate <- read.csv("./output/climate_data/ERA5_air_and_SST_timeseries.csv")

# Create a match column.
  climate2 <- climate %>% mutate(match = interaction(Species, Latitude, Longitude)) %>% 
                          dplyr::select(Species, Latitude, Longitude, match, cv, sd, mean, acf_lag1, acf_all)

# Populations and species?
  pop_spp_w <- climate2[complete.cases(climate2),]

# Subset the data
  lnCVRQ10_data_wild <- data_long2 %>% 
    filter(grepl("lnCVR", name) & !is.na(effect_size) & !is.na(V) & !V == 0 & !is.na(acclim_period) & source == "w") %>% 
                        mutate(spp = species_full, 
                                     c_accl_time = acclim_period - mean(acclim_period, na.rm = TRUE), 
                                     match = interaction(spp, lat, long),
                                     max_temp_c = scale(temp_2, scale = FALSE))

# Now, join climate data to full data. This will give us all the climate variability data for each site across time
  lnCVRQ10_data_wild <- left_join(lnCVRQ10_data_wild, climate2, by = "match")

# Look at the environment details across different habitats. 
  lnCVRQ10_data_wild  %>% group_by(habitat) %>% summarise(mean(sd))

# Check and prune tree
  tree_lncvr_wild <- tree_checks(data = lnCVRQ10_data_wild, tree = tree_p0.7, dataCol = "species_full", type = "prune")
  tree_checks(data = lnCVRQ10_data_wild, tree = tree_lncvr_wild, dataCol = "species_full", type = "check") # Good

# Create the phylo correlation matrix
  phylo_cor_wild_cvr <- vcv(tree_lncvr_wild, cor = TRUE)
          A_wild_cvr <- vcv(tree_lncvr_wild, cor = FALSE) # For bayes, need cov matrix

# Scale environment variables
    lnCVRQ10_data_wild <- lnCVRQ10_data_wild %>% mutate(     cv_c = scale(cv),
                                                        acf_all_c = scale(acf_all),
                                                        acf_lag1_c = scale(acf_lag1))

####################################################
  # Model 4.3: Model environmental variability by acute/acclim
####################################################
rerun = FALSE
if(rerun){
  # More realistic model with 
  model4.3          <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + cv_c + type + type:cv_c, V = V,
                                       random = list(~1 + type| record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_cvr), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data_wild)
  
   model4.3_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  max_temp_c + c_accl_time + cv_c + type + type:cv_c + (~1 + type| record_num) + (1 | gr(species_full, cov = A_wild_cvr)) + (1 + max_temp_c| spp) + (1|trait), data2 = list(A_wild_cvr=A_wild_cvr), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnCVRQ10_data_wild)
                                  
  # Save model4.3
  saveRDS(model4.3, file = "./output/models/lnCVRQ10_4.3")
  saveRDS(model4.3_bayes, file = "./output/models/lnCVRQ10_4.3_bayes")

  } else{
        model4.3 <- readRDS("./output/models/lnCVRQ10_4.3")
  model4.3_bayes <- readRDS("./output/models/lnCVRQ10_4.3_bayes")
}
  

############################################################################################
# Model 4.9: Acclimatization lnCVRQ10 only. Test if environmental variance explains 
# differently in each habitat
############################################################################################          
  lnCVRQ10_data_wild_acclim <- lnCVRQ10_data_wild %>%  filter(type == "acclim")
  
  # Create the phylo correlation matrix
  
  # Check and prune tree
tree_lncvr_wild_acclim <- tree_checks(data = lnCVRQ10_data_wild_acclim, tree = tree_p0.7, dataCol = "species_full", type = "prune")
tree_checks(data = lnCVRQ10_data_wild_acclim, tree = tree_lncvr_wild_acclim, dataCol = "species_full", type = "check")

phylo_cor_wild_acclim <- vcv(tree_lncvr_wild_acclim, cor = TRUE)
        A_wild_acclim <- vcv(tree_lncvr_wild_acclim, cor = FALSE) # For bayes, need cov matrix
  
  
if(rerun){
  # More realistic model with 
  model4.9  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + cv_c + habitat + habitat:cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data_wild_acclim)
  
   model4.9_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  max_temp_c + c_accl_time + cv_c + habitat + habitat:cv_c + (~1 | record_num) + (1 | gr(species_full, cov = A_wild_acclim)) + (1 | spp) + (1|trait), data2 = list(A_wild_acclim=A_wild_acclim), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.99, max_treedepth = 12), chains = 4, thin = 1, iter = 5000, warmup = 1000, cores = 8, data = lnCVRQ10_data_wild_acclim)
                                  
  # Save model3.8
  saveRDS(model4.9, file = "./output/models/lnCVRQ10_4.9")
  saveRDS(model4.9_bayes, file = "./output/models/lnCVRQ10_4.9_bayes")

  } else{
        model4.9 <- readRDS("./output/models/lnCVRQ10_4.9")
  model4.9_bayes <- readRDS("./output/models/lnCVRQ10_4.9_bayes")
}
                  
#################################################
### Bayesian Slopes from Model 4.9
#################################################
 posteriors4.9 <- posterior_samples(model4.9_bayes, "^b") 
        
    slope_f_4.9 <- posteriors4.9[,"b_cv_c"]; mean(slope_f_4.9); pmcmc(slope_f_4.9); quantile(slope_f_4.9, c(0.025, 0.975))
    slope_m_4.9 <- posteriors4.9[,"b_cv_c"] + posteriors4.9[,"b_cv_c:habitatm"]; mean(slope_m_4.9); pmcmc(slope_m_4.9); quantile(slope_m_4.9, c(0.025, 0.975))
    slope_t_4.9 <- posteriors4.9[,"b_cv_c"] + posteriors4.9[,"b_cv_c:habitatt"]; mean(slope_t_4.9); pmcmc(slope_t_4.9); quantile(slope_t_4.9, c(0.025, 0.975))

##################################################
    # Model 4.8, 4.9 and 4.10 - Habitat subset
    # Used for making plots
##################################################
    # Subset data to habitat
    lnCVRQ10_data_wild_acclim_t <- lnCVRQ10_data_wild_acclim %>% filter(habitat == "t")
    lnCVRQ10_data_wild_acclim_f <- lnCVRQ10_data_wild_acclim %>% filter(habitat == "f")
    lnCVRQ10_data_wild_acclim_m <- lnCVRQ10_data_wild_acclim %>% filter(habitat == "m")

if(rerun){
    # Terrestrial Models
    model4.9_t  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data_wild_acclim_t)
    saveRDS(model4.9_t, "./output/models/model4.9_t")
                   
    # Freshwater Models
    
    model4.9_f  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data_wild_acclim_f)

    saveRDS(model4.9_f, "./output/models/model4.9_f")

    # Marine Models

    model4.9_m  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data_wild_acclim_m)
    saveRDS(model4.9_m, "./output/models/model4.9_m")
    
  } else {
     model4.9_t <- readRDS("./output/models/model4.9_t")
     model4.9_f <- readRDS("./output/models/model4.9_f")
     model4.9_m <- readRDS("./output/models/model4.9_m")
}

```

```{r, globallncvr}
#| label: globallncvr
#| echo: false
#| include: false
#| eval: false

# Here, we want to make global predictions, at the lat/long in the data for how the opportunity of selection is expected to change with climate change. How can we do this? Q10 effects already have temperature controls within the effect size. So, what we want is to be able to understand how Q10 changes with latitude and longitude. Once we know that, we an extract how temperature is expected to change from our current levels to future levels. This will be in degrees C. Then, assuming no plasticity and evolution (big assumption) we can get a baseline change in variance for each site. We first need to adjust the predicted Q10 value so that it's at 1C temperature, not 10, we can do this through this formula Qt = (Q10 / 10)*T, where T is the temperature change in C. This will adjust the predicted Q10 value to the change in 1 degree C. We can then multiply this by the temperature change expected at that location to get the % change in variance or acure/acclim response. We can then plot these globally. 

#############################
rerun = FALSE
if(rerun){
  
  # Model lat and long. Need to exclude missing acclimdation data. That will make it easier to create predcitions and explore the model fit. Include max temp to correct predictions for possible decrease at higher temps.
    
   model5_bayes <- brms::brm(effect_size | se(sqrt(V)) ~  max_temp_c + c_accl_time + type*habitat + t2(Longitude, Latitude) +
                               (1 + type | record_num) + 
                               (1 | gr(species_full, cov = A_wild_cvr)) + 
                               (1 + max_temp_c | spp) + 
                               (1 | trait) + 
                               (1 | obs), 
                      data2 = list(A_wild_cvr=A_wild_cvr), family = gaussian(), 
                      prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), 
                      control = list(adapt_delta = 0.99, max_treedepth = 12), 
                      chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, 
                      data = lnCVRQ10_data_wild[complete.cases(lnCVRQ10_data_wild$c_accl_time),])
         
  saveRDS(model5_bayes, file = "./output/models/lnCVRQ10_5_bayes")

  } else{
  model5_bayes <- readRDS("./output/models/lnCVRQ10_5_bayes")
}

# Lets explore the model and how it's predicting the real data
  data_w <- lnCVRQ10_data_wild[complete.cases(lnCVRQ10_data_wild$c_accl_time),]

# combine with predictions
  data_w_pred <- cbind(data_w, predict(model5_bayes))

# Fitted vs actual data
  ggplot(data = data_w_pred, aes(x = Estimate, y = effect_size))      + 
        geom_point() + geom_smooth(method = "lm")                     + 
        labs(x = "Predicted Effect Size", y = "Observed Effect Size") + 
        theme_classic()                                               + 
        geom_abline(intercept = 0, slope = 1)

# Seems to be OK, but over and under-predicting at times. Lets explore the data for odd ball predictions to see if there are any obvious reasons why. There are very few for the most part but lets see why sign changes occur which are most striking differences. Sign changes indicate the observed data is completely opposite in sign to the predicted data

#  Spot check of a bunch of studies doesn't show any obvious issues with the data. Note that data is repeated because acute and acclimated rates are calculated. We expect the rows of raw data for acute and acclim to be repeated even though these data are NOT all used to make the calculation.
  sign_change_dat <- data_w_pred  %>% filter(sign(Estimate) != sign(effect_size))

######################################################################
# Model predictions for terrestrial, marine and freshwater ectotherms
######################################################################
# Now we need to make predictions for new data. We first need to create new data. We need to do this for each habitat type because they are all a little different. Lets do terrestrial first.

#############################
## Terrestrial ectotherms
#############################

  terrest_data <- sub_data  %>% filter(habitat == "t")  %>% distinct(spp, species_full, habitat, type, Latitude, Longitude)
  new_data_t <- data.frame(
      max_temp_c = 0, 
      c_accl_time = 0,
      V = 0,
      trait = 0,
      obs = 0, 
      record_num = 0
    )

  # Create new data frame with only unique values for prediction.
  new_data_t2  <- cbind(terrest_data, new_data_t)

  # We'll now make the predictions from the model object using the new data frame
  terre_pred <- predict(model5_bayes, newdata = new_data_t2, summary = TRUE, allow_new_levels = TRUE, sample_new_levels = "uncertainty", robust = FALSE, intervals = "confidence")

  # We'll also keep the whole posterior which we'll use later on. We need to transpose so that the data match. Each numbered columns is one sample of the posterior.
  terre_pred_no_sum <- cbind(new_data_t2, t(predict(model5_bayes, newdata = new_data_t2, summary = FALSE, allow_new_levels = TRUE, sample_new_levels = "uncertainty")))
  
  # Lets merge predictions with the original data
  terrest_data <- cbind(terrest_data, terre_pred)

  # Test manual calculations. We can also set summary = FALSE and then do the calculations ourselves. Note we want robust = FALSE to make the comparisons more similar as otherwise the calculation are different when using summary TRUE/FALSE . These are extremely close, and I suspect are only different because sample_new_levels is sampling differently each time predict is run, so will be slightly different from run-to-run
  terre_pred2 <- predict(model5_bayes, newdata = new_data_t2, summary = FALSE, allow_new_levels = TRUE, sample_new_levels = "uncertainty", robust = FALSE)
  plyr::ldply(apply(terre_pred2, 2, function(x) post_summary(x)))

#############################
## Marine ectotherms  
#############################
  marine_data <- sub_data  %>% filter(habitat == "m") %>% distinct(spp, species_full, habitat, type, Latitude, Longitude)
  
  new_data_m <- data.frame(
       max_temp_c = 0, 
      c_accl_time = 0,
                V = 0,
            trait = 0,
              obs = 0, 
       record_num = 0
    )

  # Create new data frame with only unique values for prediction.
  new_data_m  <- cbind(marine_data, new_data_m)

  # We'll now make the predictions from the model object using the new data frame
  marine_pred <- predict(model5_bayes, newdata = new_data_m, summary = TRUE, allow_new_levels = TRUE, sample_new_levels = "uncertainty", robust = FALSE, intervals = "confidence")

  # We'll also keep the whole posterior which we'll use later on. We need to transpose so that the data match. Each numbered columns is one sample of the posterior.
  marine_pred_no_sum <- cbind(new_data_m, t(predict(model5_bayes, newdata = new_data_m, summary = FALSE, allow_new_levels = TRUE, sample_new_levels = "uncertainty")))

  # Lets merge predictions with the original data
  marine_data <- cbind(marine_data, marine_pred)

#############################
## Freshwater ectotherms
#############################
  fresh_data <- sub_data  %>% filter(habitat == "f") %>% distinct(spp, species_full, habitat, type, Latitude, Longitude)
  
  new_data_f <- data.frame(
       max_temp_c = 0, 
      c_accl_time = 0,
                V = 0,
            trait = 0,
              obs = 0, 
       record_num = 0
    )

  # Create new data frame with only unique values for prediction.
  new_data_f  <- cbind(fresh_data, new_data_f)

  # We'll now make the predictions from the model object using the new data frame
  fresh_pred <- predict(model5_bayes, newdata = new_data_f, summary = TRUE, allow_new_levels = TRUE, sample_new_levels = "uncertainty", robust = FALSE, intervals = "confidence")

  # We'll also keep the whole posterior which we'll use later on. We need to transpose so that the data match. Each numbered columns is one sample of the posterior.
  fresh_pred_non_sum <- cbind(new_data_f, t(predict(model5_bayes, newdata = new_data_f, summary = FALSE, allow_new_levels = TRUE, sample_new_levels = "uncertainty")))

  # Lets merge predictions with the original data
  fresh_data <- cbind(fresh_data, fresh_pred)

# Now that we have all the predictions we can merge the data together. Note that species itself is not really that useful because each prediction at each latitude and longitude should incorporate the species effect. So we'll remove it. While I retain spp, it's still not totally specific to the species, but left it there so it's clear how these data match with the wild data. Note there are only 134 species because this is subset of the wild data.
         all_pred <- rbind(terrest_data, marine_data, fresh_data) %>% 
                     dplyr::select(-species_full)  %>% 
                     mutate(uniques = interaction(spp, Latitude, Longitude))
  all_pred_no_sum <- rbind(terre_pred_no_sum, marine_pred_no_sum, fresh_pred_non_sum) %>%      dplyr::select(-species_full)
        spp_wild  <- length(unique(sub_data$spp))
```

```{r, future_climlncvr}
#| label: future_climlncvr
#| echo: false
#| warning: false
#| include: false
#| eval: false

# Now we want to take the predictions from `global` and use this for future climate sceneios. We have the future temperatures expected for each location. We can then use the predicted Q10 values to calculate the expected change in variance. We can then plot these globally.

# First, lets get the current and future temperature data for 2081-2085. We'll use the mean. 
  future_temp <- read.csv("./output/climate_data/CanESM2_air_and_SST_timeseries.csv")

# Now, lets summarise the mean for the current temps (i.e., 2018-2022)
current_temps <-   future_temp  %>% 
                   dplyr::select(Species, Latitude, Longitude, grep("X2018|X2019|X2020|X2021|X2022", colnames(future_temp)))  %>% 
                                mutate(mean = apply(.[, grep("X2018|X2019|X2020|X2021|X2022", colnames(.))], 1, function(x) mean(x, na.rm = TRUE)), Celc_curr = mean - 273.15, match = interaction(Species, Latitude, Longitude))

# Lets clean this data up. We only need the mean temperature here, but this needs to be converted to Celcius as right now it's in Kelvins. We'll now take the last 5 years of the future temperature 2096-2100
  future_temps  <- future_temp  %>% 
                  dplyr::select(Species, Latitude, Longitude,  grep("X2096|X2097|X2098|X2099|X2100", colnames(future_temp)))  %>% 
                  mutate(mean = apply(.[, grep("X2096|X2097|X2098|X2099|X2100", colnames(.))], 1, function(x) mean(x, na.rm = TRUE)), Celc_future = mean - 273.15,  match = interaction(Species, Latitude, Longitude))

# Now we can merge the climate datasets together so that we have the species, lat and long, current and future climate. Then we can calculate the expected 'increase' in T into the future

  climate_data <- left_join(current_temps, future_temps, by = "match")  %>% dplyr::select(match, Latitude.x, Longitude.x, Species.x, Celc_curr, Celc_future)  %>% mutate(T_change = Celc_future - Celc_curr)  %>% rename(Species = Species.x, Latitude = Latitude.x, Longitude = Longitude.x)


# Lets look at future and current. Most, I would expect, should be above the line indicating higher future temperatures.
  ggplot(data = climate_data, aes(x = Celc_curr, y = Celc_future)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Current Temperature (C)", y = "Future Temperature (C)") + theme_classic() + geom_abline(intercept = 0, slope = 1)

# Lets have a global plot of temperature changes to see it sptially 

world_map = map_data("world") %>% 
  filter(! long > 180)

  map2_temp_proj <- ggplot() +
    geom_map(
      data = world_map, map = world_map,
      aes(long, lat, map_id = region),
      color = "black", fill = "lightgray") +
    expand_limits(x = world_map$long, y = world_map$lat) +
    coord_map("moll") +
    geom_point(
      data = climate_data[complete.cases(climate_data$T_change),],
      aes(Longitude, Latitude, color = T_change),
      alpha = 0.7, size = 5
    ) + labs(x = "Longitude", y = "Latitude", color = TeX("$\\Delta$ Temp. ($^\\circ$C)"), title = "Current (2018-2022) vs Future (2096-2100)") + scale_colour_gradient2(trans = "reverse") + theme_map(base_size = 22) + theme(plot.title = element_text(hjust = 0.5))

# Now lets merge all_pred with the climate projections
  # Simplify columns 
  climate_data_new <- climate_data  %>% dplyr::select(-Latitude, -Longitude)

  # Merge with model predictions. This is the predicted lnCVRQ10 for 10C change AT the specific latitude and longitude. We must assume that there is no plasticity or adaptation at each site to make projections.
  all_pred2 <- all_pred %>% mutate(match = interaction(spp, Latitude, Longitude)) %>% 
              left_join(., climate_data_new, by = "match")  %>% 
              mutate(lnCVR_future = (Estimate / 10) * T_change,
                      lnCVR_F_l95 = (Q2.5 / 10) * T_change,
                      lnCVR_F_u95 = (Q97.5 / 10) * T_change, 
                      per_change = (exp(lnCVR_future) - 1) * 100,
                      per_change_l95 = (exp(lnCVR_F_l95) - 1) * 100,
                      per_change_u95 = (exp(lnCVR_F_u95) - 1) * 100)

  # First, lets merge the climate data with the predictions, but here predictions are not summarised. We have the entire posteior
   
    all_pred2_no_sum <-  all_pred_no_sum %>% 
                        mutate(match = interaction(spp, Latitude, Longitude))  %>% 
                        left_join(., climate_data_new, by = "match") 
   
  # Second, lets convert each estimate to lncvr to 1 degree C instead of 10...
   all_pred2_no_sum2 <- all_pred2_no_sum %>%  
                        mutate_if(colnames(.) %in% c(1:3200), lncvr_1c) 

  # Third, lets multiply each estimate by the temperature change at that location. I've checked 4 different cells and they are calculated correctly.
    all_pred2_no_sum2[,colnames(all_pred2_no_sum2) %in% c(1:3200)]  <- all_pred2_no_sum2[,colnames(all_pred2_no_sum2) %in% c(1:3200)] * all_pred2_no_sum2$T_change

  # Fourth, we can calculate the percentage change on the posterior
    all_pred2_no_sum2[,paste0("perc", c(1:3200))]  <- (exp(all_pred2_no_sum2[,colnames(all_pred2_no_sum2) %in% c(1:3200)]) - 1)*100

  # Now we can summarise each. Here, what we are doing is taking the mean for each column. Effectively pooling across all the iterations for each dataset. This gives us an estimation of the mean change in variance across all locations/species, but it gives us 3200 point estimates of this mean. We can then use this to calculate the 95% CI's.
    mean_perc <-  apply(all_pred2_no_sum2[,paste0("perc", c(1:3200))], 1, mean, na.rm = TRUE) 
    mean(mean_perc)
    quantile(mean_perc, 0.025)
    quantile(mean_perc, 0.975)
    hist(mean_perc)

  # Now, lets do this but for each habitat, the good old fashioned way. I think that these are so variable because the expected change in the future is quite dramatic, so the variability is high.
  mean_perc_habitat <-  lapply(split(all_pred2_no_sum2,  all_pred2_no_sum2$habitat), function(x) apply(x[,paste0("perc", c(1:3200))], 1, mean, na.rm = TRUE))
  lapply(mean_perc_habitat, mean)
  lapply(mean_perc_habitat, function(x) quantile(x, c(0.025, 0.975)))
  #lapply(mean_perc_habitat, hist)

# Create a table to summarise everything
tables_future <- all_pred2 %>% group_by(habitat) %>% summarise(mean = mean(per_change, na.rm = TRUE), 
                                                                l95 = mean(per_change_l95, na.rm = TRUE), 
                                                                u95 = mean(per_change_u95, na.rm = TRUE))

# Check on how many to decrease
  decreases <- all_pred2 %>% group_by(match)  %>% summarise(n = if_else(any(per_change < 0), 1, 0))
    
```

#### **Acute and acclimation for detailed trait categories across marine, freshwater and terrestrial taxa**

Across habitats, the extent to which whole-organism versus biochemical traits acclimated varied ("Model 3"; [@fig-btrait]A-C). Biochemical traits acclimated to a greater extent compared to whole-organism traits in marine habitats ([@fig-btrait]B), whereas both whole-organism and biochemical traits acclimated similarly in freshwater ectotherms ([@fig-btrait]C). Neither trait category acclimated in terrestrial ectotherms ([@fig-btrait]A).

Across habitats biochemical processes tended to result in greater increases in variance at higher temperatures, but this was only significant for marine ectotherms (biochemical/whole-organism contrasts: Marine: $\beta$ = `r contrast_lnvr_trait_cat_stats[2,3]`, 95% CI: `r contrast_lnvr_trait_cat_stats[2,4]` to `r contrast_lnvr_trait_cat_stats[2,5]`, $p_{MCMC}$ = `r contrast_lnvr_trait_cat_stats[2,6]`; Freshwater: $\beta$ = `r contrast_lnvr_trait_cat_stats[3,3]`, 95% CI: `r contrast_lnvr_trait_cat_stats[3,4]` to `r contrast_lnvr_trait_cat_stats[3,5]`, $p_{MCMC}$ = `r contrast_lnvr_trait_cat_stats[3,6]`; Terrestrial: $\beta$ = `r contrast_lnvr_trait_cat_stats[1,3]`, 95% CI: `r contrast_lnvr_trait_cat_stats[1,4]` to `r contrast_lnvr_trait_cat_stats[1,5]`, $p_{MCMC}$ = `r contrast_lnvr_trait_cat_stats[1,6]`) ([@fig-btrait]D-F; "Model 3"). Variance increases for biochemical traits was reduced during acclimation in marine ectotherms ([@fig-btrait]E). 

```{r, fig-btrait}
#| label: fig-btrait
#| fig-cap: "Meta-analysis results for organismal and biochemical trait categories. Estimated mean acclimation and acute $lnRR_{Q_{10}}$ (A-C) and $lnVR_{Q_{10}}$ (D-F) effect sizes for tissue/whole-orgamism traits and biochemical traits across terrestrial (A & D), marine (B & E) and freshwater (C & F) ectotherms. Across all plots, thick bars indicate 95% confidence intervals and thin bars indicate 95% prediction intervals. k = total number of effect size estimates while the numbers in brackets indicate the number of species. For ease of visualisation, raw data for both trait categories are presented but points are not distinguished by different symbols. "
#| echo: false
#| warning: false

add_theme  <- function(){theme(axis.title  = element_text(size = 30),
                               axis.text.y = element_text(size = 30),
                               axis.text.x = element_text(size = 30),
                              legend.title = element_text(size = 30),
                               legend.text = element_text(size = 24),
                               title = element_text(size = 36))}

branch.size = 2.8
trunk.size = 1.8

n_lnrr_btrait  <- lnRRQ10_data  %>% filter(trait_broad != "other") %>% 
              group_by(habitat, trait_broad, type) %>% summarise(k = n(), spp = length(unique(spp))) %>% arrange(trait_broad, type, habitat)
n_lnvr_btrait <- lnVRQ10_data %>% filter(trait_broad != "other") %>% 
              group_by(habitat, trait_broad, type) %>% summarise(k = n(), spp = length(unique(spp))) %>% arrange(trait_broad, type, habitat)

       col <- c("#0871B9", "#F3B40D", "#1BB908")
     x.pos <- c(0.7, 1.30, 1.70, 2.30)
size_annot <- 5.5

############
# lnRR
############
m_r <- n_lnrr_btrait %>% filter(habitat == "m")
f_r <- n_lnrr_btrait %>% filter(habitat == "f")
t_r <- n_lnrr_btrait %>% filter(habitat == "t")

t_trait_b <- contrast_lnrr_trait_stats %>% filter(habitat == "t") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(trait)
m_trait_b <- contrast_lnrr_trait_stats %>% filter(habitat == "m") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(trait)
f_trait_b <- contrast_lnrr_trait_stats %>% filter(habitat == "f") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(trait)

yloc = c(1.5, 2.5)

p1 <- orchard_plot(model1.3_m_broad, mod = "trait_broad", at = list(c_accl_time = 0, habitat = "m"), group = "record_num", xlab = TeX("$lnRR_{Q_{10}}$"), condition.lab = "Type", by = "type",  g = FALSE, k = FALSE, angle = 45, branch.size = branch.size, trunk.size = trunk.size) + labs(title = "Marine") + add_theme() + ylim(-0.8, 1.8) + theme(legend.position = "none", axis.text.y = element_blank()) + annotate("text", x = x.pos, y = 1.3, label = TeX(paste0("\\it{k} = ", m_r$k, " (", m_r$spp, ")")), size = size_annot) + scale_fill_manual(values = rep(col[2],4)) + scale_color_manual(values = rep("black",4)) + annotate("text", x = yloc, y = -0.8, label = TeX(paste0("$\\beta$ = ", m_trait_b$diff, " [", m_trait_b$l95, " to ", m_trait_b$u95, "] ", "$\\,p_{MCMC}$ = ", m_trait_b$p)), hjust = 0, size = 8)

p2 <- orchard_plot(model1.3_f_broad, mod = "trait_broad", at = list(c_accl_time = 0, habitat = "f"), group = "record_num", xlab = TeX("$lnRR_{Q_{10}}$"), condition.lab = "Type", by = "type",  g = FALSE, k = FALSE, branch.size = branch.size, trunk.size = trunk.size, angle = 45)+ labs(title = "Freshwater")  + add_theme() + theme(legend.position = "none", axis.text.y = element_blank()) + ylim(-0.5, 2) + annotate("text", x = x.pos, y = 1.3, label = TeX(paste0("\\it{k} = ", f_r$k, " (", f_r$spp, ")")), size = size_annot) + theme(legend.position = "right", legend.justification = c(1, 1)) + guides(shape = guide_legend(direction = "vertical"), size = guide_legend(direction = "vertical")) + scale_fill_manual(values = rep(col[1],4)) + scale_color_manual(values = rep("black", 4)) + annotate("text", x = yloc, y = -0.5, label = TeX(paste0("$\\beta$ = ", f_trait_b$diff, " [", f_trait_b$l95, " to ", f_trait_b$u95, "] ", "$\\,p_{MCMC}$ = ", f_trait_b$p)), hjust = 0, size = 8)

p3 <- orchard_plot(model1.3_t_broad, mod = "trait_broad", at = list(c_accl_time = 0, habitat = "t", legend.pos = "none"), group = "record_num", xlab = TeX("$lnRR_{Q_{10}}$"), condition.lab = "Type", by = "type",  g = FALSE, k = FALSE, branch.size = branch.size, trunk.size = trunk.size, angle = 45)+ labs(title = "Terrestrial") + add_theme()  +  ylim(-0.3, 1.8) + theme(legend.position = "none") + annotate("text", x = x.pos, y = 1.5, label = TeX(paste0("\\it{k} = ", t_r$k, " (", t_r$spp, ")")), size = size_annot) + scale_fill_manual(values = rep(col[3], 4)) + scale_color_manual(values = rep("black", 4)) + annotate("text", x = yloc, y = -0.25, label = TeX(paste0("$\\beta$ = ", t_trait_b$diff, " [", t_trait_b$l95, " to ", t_trait_b$u95, "] ", "$\\,p_{MCMC}$ = ", t_trait_b$p)), hjust = 0, size = 8)

############
# lnVR
############
m_r_vr <- n_lnvr_btrait %>% filter(habitat == "m")
f_r_vr <- n_lnvr_btrait %>% filter(habitat == "f")
t_r_vr <- n_lnvr_btrait %>% filter(habitat == "t")

t_trait_b_vr <- contrast_lnvr_trait_stats %>% filter(habitat == "t") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(trait)
m_trait_b_vr <- contrast_lnvr_trait_stats %>% filter(habitat == "m") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(trait)
f_trait_b_vr <- contrast_lnvr_trait_stats %>% filter(habitat == "f") %>% purrr::modify_if(~is.numeric(.), ~round(., 2)) %>% arrange(trait)

yloc = c(1.5, 2.5)

p1_vr_trait <- orchard_plot(model3.3_m_broad, mod = "trait_broad", at = list(c_accl_time = 0, habitat = "m"), group = "record_num", xlab = TeX("$lnVR_{Q_{10}}$"), condition.lab = "Type", by = "type",  g = FALSE, k = FALSE, angle = 45, branch.size = branch.size, trunk.size = trunk.size) + labs(title = "Marine") + add_theme() + ylim(-1.5, 3) + theme(legend.position = "none", axis.text.y = element_blank()) + annotate("text", x = x.pos, y = 2.5, label = TeX(paste0("\\it{k} = ", m_r_vr$k, " (", m_r_vr$spp, ")")), size = size_annot) + scale_fill_manual(values = rep(col[2],4)) + scale_color_manual(values = rep("black",4)) + annotate("text", x = yloc, y = -1.5, label = TeX(paste0("$\\beta$ = ", m_trait_b_vr$diff, " [", m_trait_b_vr$l95, " to ", m_trait_b_vr$u95, "] ", "$\\,p_{MCMC}$ = ", m_trait_b_vr$p)), hjust = 0, size = 8)

p2_vr_trait <- orchard_plot(model3.3_f_broad, mod = "trait_broad", at = list(c_accl_time = 0, habitat = "f"), group = "record_num", xlab = TeX("$lnVR_{Q_{10}}$"), condition.lab = "Type", by = "type",  g = FALSE, k = FALSE, branch.size = branch.size, trunk.size = trunk.size, angle = 45)+ labs(title = "Freshwater")  + add_theme() + theme(legend.position = "none", axis.text.y = element_blank()) + ylim(-1.5, 3) + annotate("text", x = x.pos, y = 2.5, label = TeX(paste0("\\it{k} = ", f_r_vr$k, " (", f_r_vr$spp, ")")), size = size_annot) + theme(legend.position = "right", legend.justification = c(1, 1)) + guides(shape = guide_legend(direction = "vertical"), size = guide_legend(direction = "vertical")) + scale_fill_manual(values = rep(col[1],4)) + scale_color_manual(values = rep("black", 4)) + annotate("text", x = yloc, y = -1.5, label = TeX(paste0("$\\beta$ = ", f_trait_b_vr$diff, " [", f_trait_b_vr$l95, " to ", f_trait_b_vr$u95, "] ", "$\\,p_{MCMC}$ = ", f_trait_b_vr$p)), hjust = 0, size = 8)

p3_vr_trait <- orchard_plot(model3.3_t_broad, mod = "trait_broad", at = list(c_accl_time = 0, habitat = "t", legend.pos = "none"), group = "record_num", xlab = TeX("$lnVR_{Q_{10}}$"), condition.lab = "Type", by = "type",  g = FALSE, k = FALSE, branch.size = branch.size, trunk.size = trunk.size, angle = 45)+ labs(title = "Terrestrial") + add_theme()  +  ylim(-1.5, 3) + theme(legend.position = "none") + annotate("text", x = x.pos, y = 2.5, label = TeX(paste0("\\it{k} = ", t_r_vr$k, " (", t_r_vr$spp, ")")), size = size_annot) + scale_fill_manual(values = rep(col[3], 4)) + scale_color_manual(values = rep("black", 4)) + annotate("text", x = yloc, y = -1.5, label = TeX(paste0("$\\beta$ = ", t_trait_b_vr$diff, " [", t_trait_b_vr$l95, " to ", t_trait_b_vr$u95, "] ", "$\\,p_{MCMC}$ = ", t_trait_b_vr$p)), hjust = 0, size = 8)

############
# Full fig
############
figbtrait <-(p3 | p1 | p2) / (p3_vr_trait | p1_vr_trait | p2_vr_trait) + plot_annotation(tag_levels = "A") 
ggsave(figbtrait, filename = "./output/figures/figS11.png", width = 28, height = 14, device = "png")

figbtrait <- magick::image_read("./output/figures/figS11.png")
figbtrait
```


In addition to the broader trait categories we fit models to understand how acute and acclimation effect sizes varied across more detailed trait categories. To achieve this, we categorized each effect size into one of 12 trait categories. These categories included measures of whole organism performance measures including cardiac (i.e., 'cardiac') and muscle ('muscle') function, sprint speed ('sprint') and endurance ('endurance') and metabolic rates (i.e., maximal and resting metabolic rate; max MR', 'rest MR', respectively). Studies also quantified various enzymatic reaction rates, including enzymes involved in general metabolic responses (categorized as 'metabolic enzyme'), various parts of the electron transport chain, including ATPase activity ('ATPase'), mitochondrial leak ('Proton Leak') and oxidation ('OXPHOS', short for Oxidative Phosphorylation), as well as antioxidant enzymes ('antiox'). All other traits not falling within these categories were placed into 'other'.

Acclimation capacity varied across trait categories and habitat with measures of resting metabolic rate, including associated biochemical reactions like oxidative phosphorylation (OXPHOS) and ATPase activity, acclimating in marine and freshwater ectotherms (@fig-lnrrtrait). Whether variation in physiological rates changes also depended on trait type, with freshwater ectotherms generally maintaining variance in physiological rates better than marine and freshwater ectotherms (@fig-vrtrait & @fig-cvrtrait). We note though that some traits have very small sample sizes on their own and should be interpreted with caution.

```{r, detail_trait}
#| label: detail_trait
#| echo: false
#| include: false
#| warning: false

##########################################
## lnRR - Detailed trait category analyses 
##########################################
  # Filter out antioxidant and NAs. For terrestrial, need to filter out endurance and max_MR because only 3 effect sizes
  lnRRQ10_data_m <- lnRRQ10_data %>% filter(habitat == "m" & !trait_category =="antiox") %>% filter(!is.na(c_accl_time))
  lnRRQ10_data_f <- lnRRQ10_data %>% filter(habitat == "f" & !is.na(c_accl_time))
  lnRRQ10_data_t <- lnRRQ10_data %>% filter(habitat == "t" & !is.na(c_accl_time)) %>% filter(!trait_category %in% c("endurance", "max_MR", "other"))
  
  # Prune tree
   tree_m <- tree_checks(lnRRQ10_data_m, tree = tree_lnrr, dataCol = "species_full", type = "prune")
   tree_f <- tree_checks(lnRRQ10_data_f, tree = tree_lnrr, dataCol = "species_full", type = "prune")
   tree_t <- tree_checks(lnRRQ10_data_t, tree = tree_lnrr, dataCol = "species_full", type = "prune")
   
   # cor matrices
   m_phylo <- vcv(tree_m, corr = TRUE)
       A_m <- vcv(tree_m, corr = FALSE)
   f_phylo <- vcv(tree_f, corr = TRUE)
       A_f <- vcv(tree_f, corr = FALSE)
   t_phylo <- vcv(tree_t, corr = TRUE)
       A_t <- vcv(tree_t, corr = FALSE)

rerun = FALSE
if(rerun){
#################################
  # Detailed Trait Categories
  # For supplement
#################################
  # More realistic model with traits in marine species. Remove antioxidants because there are just too few effects. Note that, for orchardplot we can only fit one random slope, so we'll just use obs as results are unchanged and Bayesian models have it accounted for
   model1.3_m <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c | spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = m_phylo), dfs = "contain", 
                              test = "t", 
                              data = lnRRQ10_data_m)

  # Robust variance estimator.
    model1.3_m_rve <- robust(model1.3_m, cluster = lnRRQ10_data_m$record_num) # Mostly Consistent but some changes to p for some traits.

  # Baeysian model
  model1.3_m_het <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c | spp,
                                            ~1 | trait,
                                            ~1 + trait_category | obs),
                              R = list(species_full = m_phylo), 
                              struct = c("GEN", "HCS"),  phi = 0, dfs = "contain", 
                              test = "t", data = lnRRQ10_data_m, control = list(iter.max=1000, rel.tol=1e-8))
  
  # Check k is the same for both models (yes) and check which model is best supported
    AICc1.3_m     <- AIC(model1.3_m) + AICc_correction(model1.3_m)
    AICc1.3_m_het <- AIC(model1.3_m_het) + AICc_correction(model1.3_m_het)
  # Clear support for this model. We'll go with this.
    AICc1.3_m - AICc1.3_m_het

  # Cannot model heterogeneous variance across traits if use sigma + TRUE, so just use obs.
   model1.3_m_bayes <- brms::brm(effect_size | se(sqrt(V)) ~  max_temp_c + c_accl_time + type + trait_category + type:trait_category + 
                                   (~1 | record_num) + 
                                   (1 | gr(species_full, cov = A_m)) + 
                                   (1 + max_temp_c | spp) +(1|trait) + 
                                   (1 + trait_category |gr(obs, cor = FALSE)),  
                                 data2 = list(A_m=A_m), family = gaussian(), 
                                 prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), 
                                 control = list(adapt_delta = 0.98, max_treedepth = 12), 
                                 chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data_m)
  
    # More realistic model with traits in freshwater species
  model1.3_f <- metafor::rma.mv(effect_size ~  max_temp_c+c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c | spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full =f_phylo), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_f)
  
  # Heteroscedastic variance model for freshwater
  model1.3_f_het <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c | spp,
                                            ~1 | trait,
                                            ~1 + trait_category | obs),
                              R = list(species_full =f_phylo), struct = c("GEN", "HCS"), phi = 0, dfs = "contain", 
                              test = "t", data = lnRRQ10_data_f, method = "REML", control=list(iter.max=1000, rel.tol=1e-8))
  
  ## Check support for two models
  AICc_model1.3_f_het <- AIC(model1.3_f_het) + AICc_correction(model1.3_f_het) # Clearly better supported.
      AICc_model1.3_f <- AIC(model1.3_f) + AICc_correction(model1.3_f)
  delat_AICc_model1.3_f <- AICc_model1.3_f - AICc_model1.3_f_het
  
  # Run the Bayesian equivalent of the top supported model. 
   model1.3_f_bayes <- brms::brm(effect_size | se(sqrt(V)) ~  max_temp_c + c_accl_time + type + trait_category + type:trait_category + 
                                   (~1 | record_num) + 
                                   (1 | gr(species_full, cov = A_f)) + 
                                   (1 + max_temp_c| spp) + (1|trait) + 
                                   (1+trait_category|gr(obs, cor = FALSE)), 
                                 data2 = list(A_f=A_f), family = gaussian(), 
                                 prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), 
                                 control = list(adapt_delta = 0.98, max_treedepth = 12), 
                                 chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data_f)
   
    # More realistic model with traits in terrestrial species
  model1.3_t <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c | spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full =t_phylo), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_t)
  
  # Heteroscedastic variance model for terrestrial
  model1.3_t_het <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c | spp,
                                            ~1 | trait,
                                            ~1 + trait_category | obs),
                              R = list(species_full =t_phylo), struct = c("GEN", "HCS"),  phi = 0, dfs = "contain", 
                              test = "t", data = lnRRQ10_data_t)
  
  # Check which model is better
    AICc_model1.3_t     <- AIC(model1.3_t) + AICc_correction(model1.3_t)
    AICc_model1.3_t_het <- AIC(model1.3_t_het) + AICc_correction(model1.3_t_het)
  
  #  Delta
    AICc_model1.3_t - AICc_model1.3_t_het
    
  # Bayesian model
   model1.3_t_bayes <- brms::brm(effect_size | se(sqrt(V)) ~ max_temp_c + c_accl_time + type + trait_category + type:trait_category + 
                                   (~1 | record_num) + 
                                   (1 | gr(species_full, cov = A_t)) + 
                                   (1 + max_temp_c| spp) + 
                                   (1 | trait) + 
                                   (1 + trait_category | gr(obs, cor = FALSE)), 
                                 data2 = list(A_t=A_t), family = gaussian(), 
                                 prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), 
                                 control = list(adapt_delta = 0.98, max_treedepth = 12), 
                                 chains = 8, thin = 5, iter = 3000, warmup = 1000, cores = 8, data = lnRRQ10_data_t)
                      
    # Save models
  saveRDS(model1.3_m, file = "./output/models/lnRRQ10_1.3m")
  saveRDS(model1.3_m_het, file = "./output/models/lnRRQ10_1.3m_het")
  saveRDS(model1.3_m_bayes, file = "./output/models/lnRRQ10_1.3_bayes_m")
  
  saveRDS(model1.3_f, file = "./output/models/lnRRQ10_1.3f")
  saveRDS(model1.3_f_het, file = "./output/models/lnRRQ10_1.3f_het")
  saveRDS(model1.3_f_bayes, file = "./output/models/lnRRQ10_1.3_bayes_f")
  
  saveRDS(model1.3_t, file = "./output/models/lnRRQ10_1.3t")
  saveRDS(model1.3_t_het, file = "./output/models/lnRRQ10_1.3t_het")
  saveRDS(model1.3_t_bayes, file = "./output/models/lnRRQ10_1.3_bayes_t")

  } else{
        model1.3_m <- readRDS("./output/models/lnRRQ10_1.3m")
    model1.3_m_het <- readRDS("./output/models/lnRRQ10_1.3m_het")
  model1.3_m_bayes <- readRDS("./output/models/lnRRQ10_1.3_bayes_m")
        model1.3_f <- readRDS("./output/models/lnRRQ10_1.3f")
    model1.3_f_het <- readRDS("./output/models/lnRRQ10_1.3f_het")
  model1.3_f_bayes <- readRDS("./output/models/lnRRQ10_1.3_bayes_f")
        model1.3_t <- readRDS("./output/models/lnRRQ10_1.3t")
    model1.3_t_het <- readRDS("./output/models/lnRRQ10_1.3t_het")
  model1.3_t_bayes <- readRDS("./output/models/lnRRQ10_1.3_bayes_t")
}

##########################################
# lnCVR - Detailed trait analysis
##########################################

  # Filter out antioxidant and NAs. For terrestrial, need to filter out endurance and max_MR because only 3 effect sizes
  lnCVRQ10_data_m <- lnCVRQ10_data %>% filter(habitat == "m" & !trait_category =="antiox") %>% filter(!is.na(c_accl_time))
  lnCVRQ10_data_f <- lnCVRQ10_data %>% filter(habitat == "f" & !is.na(c_accl_time))
  lnCVRQ10_data_t <- lnCVRQ10_data %>% filter(habitat == "t" & !is.na(c_accl_time)) %>% filter(!trait_category %in% c("endurance", "max_MR", "other"))
  
  # Prune tree
   tree_m_cvr <- tree_checks(lnCVRQ10_data_m, tree = tree_lncvr, dataCol = "species_full", type = "prune")
   tree_f_cvr <- tree_checks(lnCVRQ10_data_f, tree = tree_lncvr, dataCol = "species_full", type = "prune")
   tree_t_cvr <- tree_checks(lnCVRQ10_data_t, tree = tree_lncvr, dataCol = "species_full", type = "prune")
   
   # cor matrices
   m_phylo_cvr <- vcv(tree_m_cvr, corr = TRUE)
   f_phylo_cvr <- vcv(tree_f_cvr, corr = TRUE)
   t_phylo_cvr <- vcv(tree_t_cvr, corr = TRUE)
    
if(rerun){
#########################
  # Detailed Trait Categories
  # Models for the supplement
#########################
  # More realistic model 
  model2.3 <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_CVR), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data)
  
   model2.3_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  max_temp_c + c_accl_time + type + trait_category + type:trait_category + 
                                 (~1 | record_num) + 
                                 (1 | gr(species_full, cov = A_CVR)) + 
                                 (1 + max_temp_c| spp) + 
                                 (1|trait), 
                               data2 = list(A_CVR=A_CVR), family = gaussian(), 
                               prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), 
                               control = list(adapt_delta = 0.98, max_treedepth = 12), 
                               chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnCVRQ10_data)
                                  
  # Save model1.2
  saveRDS(model2.3, file = "./output/models/lnCVRQ10_2.3")
  saveRDS(model2.3_bayes, file = "./output/models/lnCVRQ10_2.3_bayes")

 
  model2.3f <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 + trait_category | obs),
                              R = list(species_full = f_phylo_cvr), dfs = "contain", 
                              test = "t", struct = c("GEN", "HCS"), phi = 0, data = lnCVRQ10_data_f)

  saveRDS(model2.3f, file = "./output/models/lnCVRQ10_model2.3f")

  model2.3m <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 + trait_category| obs),
                              R = list(species_full = m_phylo_cvr), dfs = "contain", 
                              test = "t", struct = c("GEN", "HCS"),  phi = 0, data = lnCVRQ10_data_m)
  saveRDS(model2.3m, file = "./output/models/lnCVRQ10_model2.3m")

  # Note that we need to drop interaction for terrestrial as it's not able to estimate. 
  model2.3t <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c | spp,
                                            ~1 | trait,
                                            ~1 + trait_category | obs),
                              R = list(species_full = t_phylo_cvr), dfs = "contain", 
                              test = "t", struct = c("GEN", "HCS"),  phi = 0, data = lnCVRQ10_data_t)
  saveRDS(model2.3t, file = "./output/models/lnCVRQ10_model2.3t")

  } else{
#########################
  # Detailed Trait Categories
  # Models for the supplement
#########################
        model2.3 <- readRDS("./output/models/lnCVRQ10_2.3")
        model2.3f <- readRDS("./output/models/lnCVRQ10_model2.3f")
        model2.3m <- readRDS("./output/models/lnCVRQ10_model2.3m")
        model2.3t <- readRDS("./output/models/lnCVRQ10_model2.3t")
  model2.3_bayes <- readRDS("./output/models/lnCVRQ10_2.3_bayes")
  }

##########################################
## lnVR - Detailed trait category analyses
##########################################
  # Filter out antioxidant and NAs. For terrestrial, need to filter out endurance and max_MR because only 3 effect sizes
  lnVRQ10_data_m <- lnVRQ10_data %>% filter(habitat == "m" & !trait_category =="antiox") %>% filter(!is.na(c_accl_time))
  lnVRQ10_data_f <- lnVRQ10_data %>% filter(habitat == "f" & !is.na(c_accl_time))
  lnVRQ10_data_t <- lnVRQ10_data %>% filter(habitat == "t" & !is.na(c_accl_time)) %>% filter(!trait_category %in% c("endurance", "max_MR", "other"))
  
  # Prune tree
   tree_m_VR <- tree_checks(lnVRQ10_data_m, tree = tree_lnVR, dataCol = "species_full", type = "prune")
   tree_f_VR <- tree_checks(lnVRQ10_data_f, tree = tree_lnVR, dataCol = "species_full", type = "prune")
   tree_t_VR <- tree_checks(lnVRQ10_data_t, tree = tree_lnVR, dataCol = "species_full", type = "prune")
   
   # cor matrices
   m_phylo_VR <- vcv(tree_m_VR, corr = TRUE)
   f_phylo_VR <- vcv(tree_f_VR, corr = TRUE)
   t_phylo_VR <- vcv(tree_t_VR, corr = TRUE)
    
if(rerun){
#########################
  # Detailed Trait Categories
  # Models for the supplement
#########################
  # More realistic model 
  model3.3 <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_category + type:trait_category, 
                                   V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_VR), dfs = "contain", 
                              test = "t", data = lnVRQ10_data)
  
   model3.3_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  max_temp_c + c_accl_time + type + trait_category + type:trait_category + 
                                 (~1 | record_num) + 
                                 (1 | gr(species_full, cov = A_VR)) + 
                                 (1 + max_temp_c| spp) + 
                                 (1|trait), 
                               data2 = list(A_VR=A_VR), family = gaussian(), 
                               prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), 
                               control = list(adapt_delta = 0.98, max_treedepth = 12), 
                               chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnVRQ10_data)
                                  
  # Save models
  saveRDS(model3.3, file = "./output/models/lnVRQ10_3.3")
  saveRDS(model3.3_bayes, file = "./output/models/lnVRQ10_3.3_bayes")

  # Models for plotting
 
  model3.3f <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_category + type:trait_category, 
                                  V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 + trait_category | obs),
                              R = list(species_full = f_phylo_VR), dfs = "contain", 
                              test = "t", struct = c("GEN", "HCS"), phi = 0, data = lnVRQ10_data_f)

  saveRDS(model3.3f, file = "./output/models/lnVRQ10_model3.3f")

  model3.3m <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_category + type:trait_category, 
                                   V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c| spp,
                                            ~1 | trait,
                                            ~1 + trait_category| obs),
                              R = list(species_full = m_phylo_VR), dfs = "contain", 
                              test = "t", struct = c("GEN", "HCS"),  phi = 0, data = lnVRQ10_data_m)
  saveRDS(model3.3m, file = "./output/models/lnVRQ10_model3.3m")

  # Note that we need to drop interaction for terrestrial as it's not able to estimate. 
  model3.3t <- metafor::rma.mv(effect_size ~  max_temp_c + c_accl_time + type + trait_category, 
                                   V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 + max_temp_c | spp,
                                            ~1 | trait,
                                            ~1 + trait_category | obs),
                              R = list(species_full = t_phylo_VR), dfs = "contain", 
                              test = "t", struct = c("GEN", "HCS"),  phi = 0, data = lnVRQ10_data_t)
  saveRDS(model3.3t, file = "./output/models/lnVRQ10_model3.3t")

  } else{
#########################
  # Detailed Trait Categories
  # Models for the supplement
#########################
        model3.3 <- readRDS("./output/models/lnVRQ10_3.3")
        model3.3f <- readRDS("./output/models/lnVRQ10_model3.3f")
        model3.3m <- readRDS("./output/models/lnVRQ10_model3.3m")
        model3.3t <- readRDS("./output/models/lnVRQ10_model3.3t")
  model3.3_bayes <- readRDS("./output/models/lnVRQ10_3.3_bayes")
}
```

```{r, fig-lnrrtrait}
#| label: fig-lnrrtrait
#| fig-cap: "Acute and Acclimation $lnRR_{Q_{10}}$ across detailed trait categories for A) marine, B) freshwater and C) terrestrial systems. k = total number of effect size estimates while the numbers in brackets indicate the number of species. Thick bars indicate 95% confidence intervals and thin bars indicate 95% prediction intervals. Raw effects are weighted by their precision (inverse sampling variance). The x-axis is truncated for ease of visualisation. See methods section “Moderator Variables” for a full description of the trait categories. "
#| echo: false

k_marine=manual_extract(model1.3_m_het, mod = "trait_category", group = "record_num", exclude = "Antiox")
k_fresh=manual_extract(model1.3_f_het, mod = "trait_category", group = "record_num")
k_terrs=manual_extract(model1.3_t_het, mod = "trait_category", group = "record_num")

ptm <- orchard_plot(model1.3_m_het, mod = "trait_category", at = list(type = c("acute", "acclim")), by = "type", group = "record_num", weights = "prop", k.pos = "none", xlab = TeX("$lnRR_{Q_{10}}$"), angle = 0, condition.lab = "Type") +
  scale_x_discrete(labels = c("Mito_leak" = "Proton Leak",
                              "Metabolic_enzyme" = "Metabolic Enzymes",
                              "Rest_MR" = "Resting Metabolic Rate",
                              "Max_MR" = "Maximum Metabolic Rate",
                              "Mito_oxidation" = "OXPHOS")) + theme_classic() + theme(axis.text = element_text(size=12)) + ylim(-1.5, 2.5) +
                            annotate("text", label= paste0("k = ", k_marine$k, " (", k_marine$sdy, ")"), x = k_marine$moderator, y = 2.4) + add_theme()
#ptm$layers[[1]] <- NULL # Lets just remove the data point geom layer as it's too busy


ptf <- orchard_plot(model1.3_f_het, mod = "trait_category", at = list(type = c("acute", "acclim")), by = "type", group = "record_num", weights = "prop", k.pos = "none", xlab = TeX("$lnRR_{Q_{10}}$"), angle = 0, condition.lab = "Type") +
  scale_x_discrete(labels = c("Mito_leak" = "Proton Leak",
                              "Metabolic_enzyme" = "Metabolic Enzymes",
                              "Rest_MR" = "Resting Metabolic Rate",
                              "Max_MR" = "Maximum Metabolic Rate",
                              "Mito_oxidation" = "OXPHOS")) + theme_classic() + theme() + 
                              annotate("text", label= paste0("k = ", k_fresh$k, " (", k_fresh$sdy, ")"), x = k_fresh$moderator, y = 2.4) + add_theme()
#ptf$layers[[1]] <- NULL # Lets just remove the data point geom layer as it's too busy


ptt <- orchard_plot(model1.3_t_het, mod = "trait_category", at = list(type = c("acute", "acclim")), by = "type", group = "record_num", weights = "prop", k.pos = "none",  xlab = TeX("$lnRR_{Q_{10}}$"), angle = 0, condition.lab = "Type") +
  scale_x_discrete(labels = c("Metabolic_enzyme" = "Metabolic Enzymes",
                              "Rest_MR" = "Resting Metabolic Rate")) + theme_classic() + labs(legend = "Type")+ annotate("text", label= paste0("k = ", k_terrs$k, " (", k_terrs$sdy, ")"), x = k_terrs$moderator, y = 2.4) + add_theme() + ylim(-1,3)
#ptt$layers[[1]] <- NULL # Lets just remove the data point geom layer as it's too busy


fig2 <- (ptm / ptf / ptt) + plot_annotation(tag_levels = "A")
ggsave(fig2, filename = "./output/figures/figS12.png", height = 20, width = 15)

img_fig2 <- magick::image_read("./output/figures/figS12.png")
img_fig2
```

```{r, fig-vrtrait}
#| label: fig-vrtrait
#| fig-cap: "Acute and acclimation $lnVR_{Q_{10}}$ across traits for A) marine, B) freshwater and C) terrestrial systems. k = total number of effect size estimates while the numbers in brackets indicate the number of species. Thick bars indicate 95% confidence intervals and thin bars indicate 95% prediction intervals. Raw effects are weighted by their precision (inverse sampling variance). The x-axis is truncated for ease of visualisation. See methods section “Moderator Variables” for a full description of the trait categories. "
#| echo: false

k_marinevr=manual_extract(model3.3m, mod = "trait_category", group = "record_num", exclude = "Antiox")
 k_freshvr=manual_extract(model3.3f, mod = "trait_category", group = "record_num")
 k_terrsvr=manual_extract(model3.3t, mod = "trait_category", group = "record_num")

ptm_vr <- orchard_plot(model3.3m, mod = "trait_category", group = "record_num", weights = "prop",  xlab = TeX("$lnVR_{Q_{10}}$"), angle = 0, k.pos = "none", condition.lab = "Type") +
  scale_x_discrete(labels = c("Mito_leak" = "Proton Leak",
                              "Metabolic_enzyme" = "Metabolic Enzymes",
                              "Rest_MR" = "Resting Metabolic Rate",
                              "Max_MR" = "Maximum Metabolic Rate",
                              "Mito_oxidation" = "OXPHOS")) + theme_classic() + add_theme() + annotate("text", label= paste0("k = ", k_marinevr$k, " (", k_marinevr$sdy, ")"), x = k_marinevr$moderator, y = 2.4) + ylim(-2, 2.6)
#ptm$layers[[1]] <- NULL # Lets just remove the data point geom layer as it's too busy


ptf_vr <- orchard_plot(model3.3f, mod = "trait_category",  group = "record_num", weights = "prop",  xlab = TeX("$lnVR_{Q_{10}}$"), angle = 0, condition.lab = "Type",  k.pos = "none") +
  scale_x_discrete(labels = c("Mito_leak" = "Proton Leak",
                              "Metabolic_enzyme" = "Metabolic Enzymes",
                              "Rest_MR" = "Resting Metabolic Rate",
                              "Max_MR" = "Maximum Metabolic Rate",
                              "Mito_oxidation" = "OXPHOS")) + theme_classic()+ add_theme() + annotate("text", label= paste0("k = ", k_freshvr$k, " (", k_freshvr$sdy, ")"), x = k_freshvr$moderator, y = 2.4) + ylim(-2.5, 2.65)
#ptf$layers[[1]] <- NULL # Lets just remove the data point geom layer as it's too busy


ptt_vr <- orchard_plot(model3.3t, mod = "trait_category",  group = "record_num", weights = "prop",  xlab = TeX("$lnVR_{Q_{10}}$"), angle = 0,  k.pos = "none", condition.lab = "Type") +
  scale_x_discrete(labels = c("Metabolic_enzyme" = "Metabolic Enzymes",
                              "Rest_MR" = "Resting Metabolic Rate",
                              "Max_MR" = "Maximum Metabolic Rate")) + theme_classic() +  annotate("text", label= paste0("k = ", k_terrsvr$k, " (", k_terrsvr$sdy, ")"), x = k_terrsvr$moderator, y = 2.4) + labs(legend = "Type")+ add_theme() + ylim(-2, 2.65)
#ptt$layers[[1]] <- NULL # Lets just remove the data point geom layer as it's too busy


figvrtrait <- (ptm_vr / ptf_vr / ptt_vr) + plot_annotation(tag_levels = "A", tag_suffix = ")")
ggsave(figvrtrait, filename = "./output/figures/figS13.png", height = 20, width = 15)

img_figvrtrait <- magick::image_read("./output/figures/figS13.png")
img_figvrtrait
```

```{r, fig-cvrtrait}
#| label: fig-cvrtrait
#| fig-cap: "Acute and acclimation $lnCVR_{Q_{10}}$ across traits for A) marine, B) freshwater and C) terrestrial systems. k = total number of effect size estimates while the numbers in brackets indicate the number of species. Thick bars indicate 95% confidence intervals and thin bars indicate 95% prediction intervals. Raw effects are weighted by their precision (inverse sampling variance). The x-axis is truncated for ease of visualisation. See methods section “Moderator Variables” for a full description of the trait categories. "
#| echo: false

k_marinecv=manual_extract(model2.3m, mod = "trait_category", group = "record_num", exclude = "Antiox")
k_freshcv=manual_extract(model2.3f, mod = "trait_category", group = "record_num")
k_terrscv=manual_extract(model2.3t, mod = "trait_category", group = "record_num")

ptm <- orchard_plot(model2.3m, mod = "trait_category", group = "record_num", weights = "prop",  xlab = TeX("$lnCVR_{Q_{10}}$"), angle = 0, k.pos = "none", condition.lab = "Type") +
  scale_x_discrete(labels = c("Mito_leak" = "Proton Leak",
                              "Metabolic_enzyme" = "Metabolic Enzymes",
                              "Rest_MR" = "Resting Metabolic Rate",
                              "Max_MR" = "Maximum Metabolic Rate",
                              "Mito_oxidation" = "OXPHOS")) + theme_classic() + add_theme() + annotate("text", label= paste0("k = ", k_marinecv$k, " (", k_marinecv$sdy, ")"), x = k_marinecv$moderator, y = 2.4) + ylim(-2, 2.6)
#ptm$layers[[1]] <- NULL # Lets just remove the data point geom layer as it's too busy


ptf <- orchard_plot(model2.3f, mod = "trait_category",  group = "record_num", weights = "prop",  xlab = TeX("$lnCVR_{Q_{10}}$"), angle = 0, condition.lab = "Type",  k.pos = "none") +
  scale_x_discrete(labels = c("Mito_leak" = "Proton Leak",
                              "Metabolic_enzyme" = "Metabolic Enzymes",
                              "Rest_MR" = "Resting Metabolic Rate",
                              "Max_MR" = "Maximum Metabolic Rate",
                              "Mito_oxidation" = "OXPHOS")) + theme_classic()+ add_theme() + annotate("text", label= paste0("k = ", k_freshcv$k, " (", k_freshcv$sdy, ")"), x = k_freshcv$moderator, y = 2.4) + ylim(-2.5, 2.65)
#ptf$layers[[1]] <- NULL # Lets just remove the data point geom layer as it's too busy


ptt <- orchard_plot(model2.3t, mod = "trait_category",  group = "record_num", weights = "prop",  xlab = TeX("$lnCVR_{Q_{10}}$"), angle = 0,  k.pos = "none", condition.lab = "Type") +
  scale_x_discrete(labels = c("Metabolic_enzyme" = "Metabolic Enzymes",
                              "Rest_MR" = "Resting Metabolic Rate",
                              "Max_MR" = "Maximum Metabolic Rate")) + theme_classic() +  annotate("text", label= paste0("k = ", k_terrscv$k, " (", k_terrscv$sdy, ")"), x = k_terrscv$moderator, y = 2.4) + labs(legend = "Type")+ add_theme() + ylim(-2, 2.65)
#ptt$layers[[1]] <- NULL # Lets just remove the data point geom layer as it's too busy


figcvrtrait <- (ptm / ptf / ptt) + plot_annotation(tag_levels = "A", tag_suffix = ")")
ggsave(figcvrtrait, filename = "./output/figures/figS14.png", height = 20, width = 15)

img_figcvrtrait <- magick::image_read("./output/figures/figS14.png")
img_figcvrtrait
```


#### **Plots of $I^2$ for multilevel models**

```{r, fig-s3}
#| label: fig-s3
#| fig-cap: "$I^2$ estimates. A) $lnRR_{Q_{10}}$ B) $lnCVR_{Q_{10}}$ and C) $lnVR_{Q_{10}}$." 
#| fig-align: center

ps3_1 <- ggplot(i2_lnrr, aes(x = est, y = name)) + xlim(0, 50) + geom_point(size = 5) + geom_errorbar(aes(xmin = lci, xmax = uci), width = 0.15) + theme_bw() + labs(x = "Percentage of Variation (%)") + theme(axis.title.y = element_blank(), axis.text = element_text(size = 20), axis.title = element_text(size = 24)) + geom_text(aes(label = paste0(round(est, 2), "% ", "[", round(lci, 2), " - ", round(uci, 2), "%]")), position = position_nudge(x = 5, y = 0.2)) + annotate("text", x = 30, y = 1.5, label = TeX(paste0("$I^2_{sv}$ = ", round(mean(tot_i2), 2), "%")), size = 10)

ps3_2 <- ggplot(i2_lncvr, aes(x = est, y = name)) + xlim(0, 50) + geom_point(size = 5) + geom_errorbar(aes(xmin = lci, xmax = uci), width = 0.15) + theme_bw() + labs(x = "Percentage of Variation (%)") + theme(axis.title.y = element_blank(), axis.text = element_blank(), axis.title = element_text(size = 24)) + geom_text(aes(label = paste0(round(est, 2), "% ", "[", round(lci, 2), " - ", round(uci, 2), "%]")), position = position_nudge(x = 5, y = 0.2)) + annotate("text", x = 30, y = 1.5, label = TeX(paste0("$I^2_{sv}$ = ", round(mean(tot_i2_cvr), 2), "%")), size = 10)

ps3_3 <- ggplot(i2_lnVR, aes(x = est, y = name)) + xlim(0, 50) + geom_point(size = 5) + geom_errorbar(aes(xmin = lci, xmax = uci), width = 0.15) + theme_bw() + labs(x = "Percentage of Variation (%)") + theme(axis.title.y = element_blank(), axis.text = element_blank(), axis.title = element_text(size = 24)) + geom_text(aes(label = paste0(round(est, 2), "% ", "[", round(lci, 2), " - ", round(uci, 2), "%]")), position = position_nudge(x = 5, y = 0.2)) + annotate("text", x = 30, y = 1.5, label = TeX(paste0("$I^2_{sv}$ = ", round(mean(tot_i2_cvr), 2), "%")), size = 10)

figS12 <- (ps3_1 | ps3_2 | ps3_3) + plot_annotation(tag_levels = "A", tag_suffix = ")") & theme(plot.tag = element_text(size = 20))
ggsave(figS12, width = 16, height = 5.7, filename = "./output/figures/figS15.png")

figS12 <- image_read("./output/figures/figS15.png")
figS12
```

#### **Environmental predictability**

Theoretical models highlight the importance of environmental predictability in selecting for plastic responses. However, capturing environmental predictability is challenging given that it is unclear which timescale one should select. For example, is it more important to look at correlation between temperatures monthly or seasonally. In addition, such temporal resolution will likely depend on the species in question given that for some species fine-grained thermal predictability maybe more important compared to others.

With these limitations in mind, we used our temperature time series to calculate auto regressive correlation in temperature across the entire time series. We then modeled how this measure of thermal predictability was related to plasticity. We found no relationship between our estimate of environmental predictability and effect sizes (@fig-4).

```{r, acf}
#| label: acf
#| echo: false
#| warning: false
#| error: false
#| include: false
#| cache: true
############################################################################################
# Model 3.8: Acclimatization lnRRQ10 only. Test if environmental predictability explains 
# differently in each habitat
############################################################################################  
  lnRRQ10_data_wild_acclim <- lnRRQ10_data_wild %>%  filter(type == "acclim") %>% mutate(acf_lag1_c = scale(acf_lag1))
  
  # Create the phylo correlation matrix
  
  # Check and prune tree
tree_lnrr_wild_acclim <- tree_checks(data = lnRRQ10_data_wild_acclim, tree = tree_p0.7, dataCol = "species_full", type = "prune")
tree_checks(data = lnRRQ10_data_wild_acclim, tree = tree_lnrr_wild_acclim, dataCol = "species_full", type = "check")

phylo_cor_wild_acclim <- vcv(tree_lnrr_wild_acclim, cor = TRUE)
        A_wild_acclim <- vcv(tree_lnrr_wild_acclim, cor = FALSE) # For bayes, need cov matrix
  
if(rerun){
  # More realistic model with 
  model3.8  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + acf_lag1_c + habitat + habitat:acf_lag1_c, V = V,
                                       random = list(~1 + type| record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim)
  
   model3.8_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  max_temp_c + c_accl_time + acf_lag1_c + habitat + habitat:acf_lag1_c + (1 + type | record_num) + (1 | gr(species_full, cov = A_wild_acclim)) + (1 + max_temp_c| spp) + (1|trait), data2 = list(A_wild_acclim=A_wild_acclim), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data_wild_acclim)
                                  
  # Save model3.8
  saveRDS(model3.8, file = "./output/models/lnRRQ10_3.8")
  saveRDS(model3.8_bayes, file = "./output/models/lnRRQ10_3.8_bayes")

  } else{
        model3.8 <- readRDS("./output/models/lnRRQ10_3.8")
  model3.8_bayes <- readRDS("./output/models/lnRRQ10_3.8_bayes")
}

#################################################
### Bayesian Slopes from Model 3.8
#################################################
  posteriors3.8 <- posterior_samples(model3.8_bayes, "^b") 
        
    slope_f_3.8 <- posteriors3.8[,"b_acf_lag1_c"] 
    slope_m_3.8 <- posteriors3.8[,"b_acf_lag1_c"] + posteriors3.8[,"b_acf_lag1_c:habitatm"] 
    slope_t_3.8 <- posteriors3.8[,"b_acf_lag1_c"] + posteriors3.8[,"b_acf_lag1_c:habitatt"] 

##################################################
    # Model 3.8, 3.9 and 3.10 - Habitat subset
##################################################
    # Subset data to habitat
    lnRRQ10_data_wild_acclim_t <- lnRRQ10_data_wild_acclim %>% filter(habitat == "t")
    lnRRQ10_data_wild_acclim_f <- lnRRQ10_data_wild_acclim %>% filter(habitat == "f")
    lnRRQ10_data_wild_acclim_m <- lnRRQ10_data_wild_acclim %>% filter(habitat == "m")

if(rerun){
    # Terrestrial Models
    model3.8_t  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + acf_lag1_c, V = V,
                                       random = list(~1 + type| record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_t)
    saveRDS(model3.8_t, "./output/models/model3.8_t")
                   

    # Freshwater Models
    model3.8_f  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + acf_lag1_c, V = V,
                                       random = list(~1 + type | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_f)
    saveRDS(model3.8_f, "./output/models/model3.8_f")
    
    # Marine Models
      model3.8_m  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + acf_lag1_c, V = V,
                                       random = list(~1 + type | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_m)
        saveRDS(model3.8_m, "./output/models/model3.8_m")

   
  } else {
     model3.8_t <- readRDS("./output/models/model3.8_t")
     model3.8_f <- readRDS("./output/models/model3.8_f")
     model3.8_m <- readRDS("./output/models/model3.8_m")
}


############################################################################################
  # Model 4.8: Acclimatization lnCVRQ10 only. Test if environmental predictability explains 
  # differently in each habitat
############################################################################################  
  
if(rerun){
  # More realistic model with 
  model4.8  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + acf_lag1_c + habitat + habitat:acf_lag1_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data_wild_acclim)
  
   model4.8_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  max_temp_c + c_accl_time + acf_lag1_c + habitat + habitat:acf_lag1_c + (1 | record_num) + (1 | gr(species_full, cov = A_wild_acclim)) + (1 + max_temp_c| spp) + (1|trait), data2 = list(A_wild_acclim=A_wild_acclim), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnCVRQ10_data_wild_acclim)
                                  
  # Save model4.8
  saveRDS(model4.8, file = "./output/models/lnRRQ10_4.8")
  saveRDS(model4.8_bayes, file = "./output/models/lnRRQ10_4.8_bayes")

  } else{
        model4.8 <- readRDS("./output/models/lnRRQ10_4.8")
  model4.8_bayes <- readRDS("./output/models/lnRRQ10_4.8_bayes")
}
     
#################################################
### Bayesian Slopes from Model 4.8
#################################################
 posteriors4.8 <- posterior_samples(model4.8_bayes, "^b") 
        
    slope_f_4.8 <- posteriors4.8[,"b_acf_lag1_c"]; mean(slope_f_4.8)
    slope_m_4.8 <- posteriors4.8[,"b_acf_lag1_c"] + posteriors4.8[,"b_acf_lag1_c:habitatm"]
    slope_t_4.8 <- posteriors4.8[,"b_acf_lag1_c"] + posteriors4.8[,"b_acf_lag1_c:habitatt"]
    
#################################################
### Same model as above, but separate for habitat 
### For plotting, 4.8
#################################################
 lnCVRQ10_data_wild_acclim_t <- lnCVRQ10_data_wild_acclim %>% filter(habitat == "t")
 lnCVRQ10_data_wild_acclim_m <- lnCVRQ10_data_wild_acclim %>% filter(habitat == "m")
 lnCVRQ10_data_wild_acclim_f <- lnCVRQ10_data_wild_acclim %>% filter(habitat == "f")
    
if(rerun){
  # Terrestrial Model
    model4.8_t  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + acf_lag1_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data_wild_acclim_t)
    saveRDS(model4.8_t, "./output/models/model4.8_t")
    
  # Freshwater Model
    model4.8_f  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + acf_lag1_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data_wild_acclim_f)
    saveRDS(model4.8_f, "./output/models/model4.8_f")
    
  # Marine Model
    model4.8_m  <- metafor::rma.mv(effect_size ~ max_temp_c + c_accl_time + acf_lag1_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 + max_temp_c| spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data_wild_acclim_m)
    saveRDS(model4.8_m, "./output/models/model4.8_m")
} else {
     model4.8_t <- readRDS("./output/models/model4.8_t")
     model4.8_m <- readRDS("./output/models/model4.8_m")
     model4.8_f <- readRDS("./output/models/model4.8_f")
}

```

```{r, fig-4}
#| label: fig-4
#| fig-align: center
#| fig-cap: "Predicted mean acclimation (thick black line) $lnRR_{Q_{10_{acclim}}}$ (A) and $lnCVR_{Q_{10_{acclim}}}$ (B) as a function of the thermal predictability for wild populations across marine, freshwater and terrestrial habitats. Dashed lines indicate 95% confidence intervals and dotted lines indicate 95% prediction intervals. Raw effects are weighted by their precision (inverse sampling variance). Model slope ($\\beta$) along with the 95% CI and $p_{MCMC}$ values for the slopes are shown for each habitat."

size_axis = 20
col <- c("#0871B9", "#F3B40D", "#1BB908")


####################
# lnRR ACF
####################
 dat_textacf <- data.frame(label = c(text(slope_f_3.8), 
                                     text(slope_m_3.8), 
                                     text(slope_t_3.8)),
                          label2 = c(text(slope_f_3.8, b = FALSE), 
                                     text(slope_m_3.8, b = FALSE), 
                                     text(slope_t_3.8, b = FALSE)),
                               p = c(p_text(slope_f_3.8), 
                                     p_text(slope_m_3.8), 
                                     p_text(slope_t_3.8)),
                           title = c("Freshwater", "Marine", "Terrestrial"), 
                       condition = c("f", "m", "t"),
                               x = rep(0, 3))
  y_adj = -3
#############
# Terrestrial
#############
  p_t_rr_acf <-  bubble_plot(model3.8_t, mod = "acf_lag1_c", group = "spp", 
                             ylab = TeX("$lnRR_{Q_{10_{acclim}}}$"), 
                             xlab = "Thermal Predictability", g = TRUE) + 
    geom_point(data = lnRRQ10_data_wild_acclim_t, 
               aes(x = acf_lag1_c, y = effect_size, size = 1/sqrt(V)), 
               fill = col[3], colour = "black", stroke = 0.2, shape = 21) + 
    labs(title = dat_textacf$title[3]) +
    annotate("text", x = dat_textacf$x[3], y = y_adj, label = TeX(dat_textacf$p[3]), size = 8) +
    annotate("text", x = dat_textacf$x[3], y = y_adj + 0.5, label = TeX(dat_text$label2[3]), size = 8) +
    annotate("text", x = dat_textacf$x[3], y = y_adj + 1, label = TeX(dat_textacf$label[3]), size = 8) +
    theme( axis.text = element_text(size = size_axis), 
         axis.text.y = element_text(size = size_axis), 
          axis.title = element_text(size = size_axis),
        axis.title.x = element_blank(),
          plot.title = element_text( size = 36, hjust = 0)) + 
    ylim(-3,3)
#############
# Marine
#############
  x_m = -2.5
p_m_rr_acf <-  bubble_plot(model3.8_m, mod = "acf_lag1_c", group = "spp", 
                           ylab = TeX("$lnRR_{Q_{10_{acclim}}}"), 
                           xlab = "Thermal Predictability", g = TRUE) + 
    geom_point(data = lnRRQ10_data_wild_acclim_m, 
               aes(x = acf_lag1_c, y = effect_size, size = 1/sqrt(V)), 
               fill = col[2], colour = "black", stroke = 0.2, shape = 21) +  
    labs(title = dat_textacf$title[2]) +
    annotate("text", x = dat_textacf$x[2]+x_m, y = y_adj,     label = TeX(dat_textacf$p[2]),      size = 8) +
    annotate("text", x = dat_textacf$x[2]+x_m, y = y_adj+0.5, label = TeX(dat_textacf$label2[2]), size = 8) +
    annotate("text", x = dat_textacf$x[2]+x_m, y = y_adj+1,   label = TeX(dat_textacf$label[2]),  size = 8) +
    theme(axis.text = element_text(size = size_axis), 
        axis.text.y = element_text(size = size_axis), 
         axis.title = element_text(size = size_axis), 
       axis.title.x = element_blank(),
         plot.title = element_text( size = 36, hjust = 0)) + 
    ylim(-3, 3)

#############
# Freshwater
#############
x_f = -0.2
p_f_rr_acf <-  bubble_plot(model3.8_f, mod = "acf_lag1_c", group = "spp", 
                           ylab = TeX("$lnRR_{Q_{10_{acclim}}}"), 
                           xlab = "Thermal Predictability", g = TRUE) + 
    geom_point(data = lnRRQ10_data_wild_acclim_f, 
               aes(x = acf_lag1_c, y = effect_size, size = 1/sqrt(V)), 
               fill = col[1], colour = "black", stroke = 0.2, shape = 21) +  
    labs(title = dat_textacf$title[1]) +
    annotate("text", x = dat_textacf$x[1]+x_f, y = y_adj,     label = TeX(dat_textacf$p[1]),      size = 8) +
    annotate("text", x = dat_textacf$x[1]+x_f, y = y_adj+0.5, label = TeX(dat_textacf$label2[1]), size = 8) +
    annotate("text", x = dat_textacf$x[1]+x_f, y = y_adj+ 1,  label = TeX(dat_textacf$label[1]),  size = 8) +
    theme(axis.text = element_text(size = size_axis), 
        axis.text.y = element_text(size = size_axis), 
         axis.title = element_text(size = size_axis), 
       axis.title.x = element_blank(),
         plot.title = element_text( size = 36, hjust = 0)) + 
    ylim(-3, 3)

####################
# lnCVR CV
####################
dat_textcvr_acf <- data.frame(label = c(text(slope_f_4.8), 
                                 text(slope_m_4.8), 
                                 text(slope_t_4.8)),
                      label2 = c(text(slope_f_4.8, b = FALSE), 
                                 text(slope_m_4.8,b = FALSE), 
                                 text(slope_t_4.8,b = FALSE)),
                           p = c(p_text(slope_f_4.8), 
                                 p_text(slope_m_4.8), 
                                 p_text(slope_t_4.8)),
                       title = c("Freshwater", "Marine", "Terrestrial"), 
                      condition = c("f", "m", "t"),
                      x = rep(0, 3),
                      y = rep(-4, 3))
#############
# Freshwater
#############
  yadj2 = -6
  x_f = -0.2
  p_f_cv_acf <-  bubble_plot(model4.8_f, mod = "acf_lag1_c", group = "spp", ylab = TeX("$lnCVR_{Q_{10_{acclim}}}$"), 
                              xlab = "Thermal Predictability", g =FALSE, k = FALSE) + 
      geom_point(data = lnCVRQ10_data_wild_acclim_f, 
                 aes(x = acf_lag1_c, y = effect_size, size = 1/sqrt(V)), 
                 fill = col[1], colour = "black", stroke = 0.2, shape = 21) + 
    annotate("text", x = dat_textcvr_acf$x[1]+x_f, y = yadj2, label = TeX(dat_textcvr_acf$p[1]), size = 8) +
    annotate("text", x = dat_textcvr_acf$x[1]+x_f, y = yadj2+0.8, label = TeX(dat_textcvr_acf$label2[1]), size = 8) +
    annotate("text", x = dat_textcvr_acf$x[1]+x_f, y = yadj2+1.6, label = TeX(dat_textcvr_acf$label[1]), size = 8) +
  theme(axis.text = element_text(size = size_axis), 
        axis.text.y = element_text(size = size_axis), 
        axis.title = element_text(size = size_axis), 
        plot.title = element_text(face = "bold", size = 36, hjust = 0.5)) + 
    ylim(-6, 3.5)
#############
# Marine
#############
  x_m = -2.5
  p_m_cv_acf <-  bubble_plot(model4.8_m, mod = "acf_lag1_c", group = "spp", ylab = TeX("$lnCVR_{Q_{10_{acclim}}}$"), 
                              xlab = "Thermal Predictability", g =FALSE, k = FALSE) + 
    geom_point(data = lnCVRQ10_data_wild_acclim_m, 
                 aes(x = acf_lag1_c, y = effect_size, size = 1/sqrt(V)), 
                 fill = col[2], colour = "black", stroke = 0.2, shape = 21) + 
    annotate("text", x = dat_textcvr_acf$x[1]+x_m, y = yadj2, label = TeX(dat_textcvr_acf$p[2]), size = 8) +
    annotate("text", x = dat_textcvr_acf$x[1]+x_m, y = yadj2+0.8, label = TeX(dat_textcvr_acf$label2[2]), size = 8) +
    annotate("text", x = dat_textcvr_acf$x[1]+x_m, y = yadj2+1.6, label = TeX(dat_textcvr_acf$label[2]), size = 8) +
    theme(axis.text = element_text(size = size_axis), 
        axis.text.y = element_text(size = size_axis), 
        axis.title = element_text(size = size_axis), 
        plot.title = element_text(face = "bold", size = 36, hjust = 0.5)) + 
    ylim(-6, 3.5)
#############
# Terrestrial
#############
x_t = -0.2
p_t_cv_acf <-  bubble_plot(model4.8_t, mod = "acf_lag1_c", group = "spp", ylab = TeX("$lnCVR_{Q_{10_{acclim}}}$"), 
                            xlab = "Thermal Predictability", g = FALSE, k = FALSE) + 
  geom_point(data = lnCVRQ10_data_wild_acclim_t, 
               aes(x = acf_lag1_c, y = effect_size, size = 1/sqrt(V)), 
               fill = col[3], colour = "black", stroke = 0.2, shape = 21) +
  annotate("text", x = dat_textcvr_acf$x[3]+x_t, y = yadj2, label = TeX(dat_textcvr_acf$p[3]), size = 8) +
  annotate("text", x = dat_textcvr_acf$x[3]+x_t, y = yadj2+0.8, label = TeX(dat_textcvr_acf$label2[3]), size = 8) +
  annotate("text", x = dat_textcvr_acf$x[3]+x_t, y = yadj2+1.6, label = TeX(dat_textcvr_acf$label[3]), size = 8) +
  theme(axis.text = element_text(size = size_axis), 
      axis.text.y = element_text(size = size_axis), 
      axis.title = element_text(size = size_axis), 
      plot.title = element_text(face = "bold", size = 36, hjust = 0.5)) + 
  ylim(-6, 3.5)

####################
# Full plot
####################


p_acf <- (p_t_rr_acf + p_m_rr_acf + p_f_rr_acf) / (p_t_cv_acf + p_m_cv_acf + p_f_cv_acf) + plot_annotation(tag_levels = "A") & theme(plot.tag = element_text(size = 36))

ggsave(p_acf, width = 18, height = 10, filename = "./output/figures/figS16.pdf")

  p_acf <- image_read("./output/figures/figS16.pdf")
  p_acf 
```

#### **Publication bias analysis**

We explored the possibility for publication bias graphically using funnel plots, and more formally by including the square root of the inverse effective sample size ($\sqrt{1/ne}$) in our meta-regression models [@Nakagawa2022-gy]. Funnel plot asymmetry indicates a form of publication bias called the ‘file-drawer’ effect whereby low-powered studies are less likely to be published. However, graphical approaches do not account for sources of non-independence and high heterogeneity which can drive apparent funnel asymmetry [@Nakagawa2022-gy]. As such, we included $\sqrt{1/ne}$ as a moderator in a multilevel meta-regression model that accounted for all the random (i.e, study, species, trait) and fixed effects (acclimation time, type of effect, habitat, trait category and the interaction between habitat type and trait category). There was no evidence for publication bias, and results are presented in the *Supplementary Materials* (see @fig-s2). 

```{r, pubias}
#| label: pubias
#| echo: false
#| include: false
rerun = FALSE
if(rerun){
  # Use effective sample size instead because sampling variance estimates could induce a spurious correlation with our effect size
    lnRRQ10_data <- lnRRQ10_data %>%  
              mutate(n_ef = ifelse(name == "lnRR_Q10_acute_t1", (r1.1_N + r1.2_N) / (r1.1_N*r1.2_N), # acute 1
                            ifelse(name == "lnRR_Q10_acute_t2", (r2.1_N + r2.2_N) / (r2.1_N*r2.2_N), # acute 2
                                                                (r1.1_N + r2.2_N) / (r1.1_N*r2.2_N)))) # acclimation
  
    lnCVRQ10_data <- lnCVRQ10_data %>%  
               mutate(n_ef = ifelse(name == "lnRR_Q10_acute_t1", (r1.1_N + r1.2_N) / (r1.1_N*r1.2_N), # acute 1
                            ifelse(name == "lnRR_Q10_acute_t2", (r2.1_N + r2.2_N) / (r2.1_N*r2.2_N), # acute 2
                                                                (r1.1_N + r2.2_N) / (r1.1_N*r2.2_N)))) #acclimation
    
    lnVRQ10_data <- lnVRQ10_data %>%  
              mutate(n_ef = ifelse(name == "lnRR_Q10_acute_t1", (r1.1_N + r1.2_N) / (r1.1_N*r1.2_N), # acute 1
                            ifelse(name == "lnRR_Q10_acute_t2", (r2.1_N + r2.2_N) / (r2.1_N*r2.2_N), # acute 2
                                                                (r1.1_N + r2.2_N) / (r1.1_N*r2.2_N)))) #acclimation
  
    model_full_lnrr_pb <- brms::brm(effect_size | se(sqrt(V)) ~  max_temp_c + c_accl_time + sqrt(n_ef) + habitat*life.hist*type + trait_category + habitat:type + habitat:life.hist + habitat:life.hist:type + (~1 + type | record_num) + (1 | gr(species_full, cov = A)) + (1 + max_temp_c | spp) + (1 | trait) + (1  | obs),  data2 = list(A=A), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data)

    model_full_lncvr_pb <- brms::brm(effect_size | se(sqrt(V)) ~ max_temp_c +  c_accl_time + sqrt(n_ef) + habitat*life.hist*type + trait_category + (~1 + type | record_num) + (1 | gr(species_full, cov = A_CVR)) + (1 + max_temp_c| spp) + (1 | trait) + (1  | obs),  data2 = list(A_CVR=A_CVR), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 1, iter = 5000, warmup = 1000, cores = 8, data = lnCVRQ10_data)
  
    model_full_lnvr_pb <- brms::brm(effect_size | se(sqrt(V)) ~  max_temp_c + c_accl_time + sqrt(n_ef) + habitat*life.hist*type + trait_category + (~1 + type| record_num) + (1 | gr(species_full, cov = A_VR)) + (1 + max_temp_c | spp) + (1 | trait) + (1  | obs),  data2 = list(A_VR=A_VR), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 1, iter = 5000, warmup = 1000, cores = 8, data = lnVRQ10_data)

  saveRDS(model_full_lnrr_pb, file = "./output/models/lnRRQ10_pubbias")
  saveRDS(model_full_lncvr_pb, file = "./output/models/lnCVRQ10_pubbias")
  saveRDS(model_full_lnvr_pb, file = "./output/models/lnVRQ10_pubbias")
} else {
   model_full_lnrr_pb <- readRDS(file = "./output/models/lnRRQ10_pubbias")
  model_full_lncvr_pb <- readRDS(file = "./output/models/lnCVRQ10_pubbias")
  model_full_lnvr_pb <- readRDS(file = "./output/models/lnVRQ10_pubbias")
}

 #Pull the posterior for the slope with sqrt effective n
  post_pb_lnrr <- posterior_samples(model_full_lnrr_pb, "^b_sqrtn_ef")[,1]
 #Pull the posterior for the slope with sqrt effective n
  post_pb_lncvr <- posterior_samples(model_full_lncvr_pb, "^b_sqrtn_ef")[,1]
 #Pull the posterior for the slope with sqrt effective n
  post_full_lnvr_pb <- posterior_samples(model_full_lnvr_pb, "^b_sqrtn_ef")[,1]
```

```{r, fig-s2}
#| label: fig-s2
#| fig-cap: "Funnel plot of precision (1/sampling standard error) against effect size for A) log response ratio $Q_{10}$ ($lnRR_{Q_{10}}$), B) log coefficient of variance ratio $Q_{10}$ ($lnCVR_{Q_{10}}$) and C) log variance ratio $Q_{10}$ ($lnVR_{Q_{10}}$). Both acute ('black') and acclimation ('grey') effect sizes are plotted."
cols <- c("#303234", "#D3D3D3")
ps2_1 <- ggplot(lnRRQ10_data, aes(y = 1/sqrt(V), x = effect_size, color = type)) + geom_point() + theme_classic() + labs(y = TeX("Precision\\ $\\left( \\frac{1}{\\sqrt{V}} \\right)$"), x = TeX("$lnRR_{Q_{10}}$"))+geom_vline(xintercept = 0, linetype = 3) + theme(legend.title  = element_text(size = 15), legend.text = element_text(size = 15), axis.title = element_text(size = 15), axis.text = element_text(size = 15), legend.position = "none") + scale_color_manual(name = "Type", values = cols)

ps2_2 <- ggplot(lnCVRQ10_data, aes(y = 1/sqrt(V), x = effect_size, color = type)) + geom_point() + theme_classic() + labs(y = TeX("Precision\\ $\\left( \\frac{1}{\\sqrt{V}} \\right)$"), x = TeX("$lnCVR_{Q_{10}}$"))+geom_vline(xintercept = 0, linetype = 3) + theme(legend.title  = element_text(size = 15), legend.text = element_text(size = 15), axis.title = element_text(size = 15), axis.text = element_text(size = 15), legend.position = "none", axis.title.y = element_blank())+ scale_color_manual(name = "Type", values = cols)

ps2_3 <- ggplot(lnVRQ10_data, aes(y = 1/sqrt(V), x = effect_size, color = type)) + geom_point() + theme_classic() + labs(y = TeX("Precision\\ $\\left( \\frac{1}{\\sqrt{V}} \\right)$"), x = TeX("$lnVR_{Q_{10}}$"))+geom_vline(xintercept = 0, linetype = 3) + theme(legend.title  = element_text(size = 15), legend.text = element_text(size = 15), axis.title = element_text(size = 15), axis.text = element_text(size = 15),  axis.title.y = element_blank())+ scale_color_manual(name = "Type", values = cols)

figs2 <- (ps2_1 | ps2_2 | ps2_3) + plot_annotation(tag_levels = "A", tag_suffix = ")") & theme(plot.tag = element_text(size = 20))
ggsave(figs2, width = 11.5, height = 4.8, filename = "./output/figures/figS17.png")

figs2 <- image_read("./output/figures/figS17.png")
figs2
```

Funnel plots did not show any noticeable deviation from the typical funnel shape for any of the effect size estimates (@fig-s2). Meta-regression models including sampling standard error as a moderator also suggested no relationship with effect size for $lnRR_{Q_{10}}$ ($\beta$ = `r mean(post_pb_lnrr)`, 95% CI: `r quantile(post_pb_lnrr, 0.025)` to `r quantile(post_pb_lnrr, 0.975)`, $p_{MCMC}$ = `r p_value(pmcmc(post_pb_lnrr))`), $lnCVR_{Q_{10}}$ ($\beta$ = `r mean(post_pb_lncvr)`, 95% CI: `r quantile(post_pb_lncvr, 0.025)` to `r quantile(post_pb_lncvr, 0.975)`, $p_{MCMC}$ = `r p_value(pmcmc(post_pb_lncvr))`) or $lnVR_{Q_{10}}$ ($\beta$ = `r mean(post_full_lnvr_pb)`, 95% CI: `r quantile(post_full_lnvr_pb, 0.025)` to `r quantile(post_full_lnvr_pb, 0.975)`, $p_{MCMC}$ = `r p_value(pmcmc(post_full_lnvr_pb))`) was not significant indicating little evidence for publication bias.

#### **Performance curve simulations**

To better understand the characteristics of the performance curves in a sample that would lead to observed changes in variance (and relative variance) across temperature we conducted a simple simulation. To simulate performance curves, we used a asymmetrical Gaussian function (@eq-sim):

$$
P_{T} = 2\epsilon^{-\frac{(T-\delta)^2}{2\sigma^2}}\Phi\left(\alpha\frac{T-\delta}{\sigma}\right)
$$ {#eq-sim}

where $T$ is the temperature gradient, $\delta$ is the optimal temperature (the temperature where performance is maximized), $\sigma$ is the performance breadth, and $\alpha$ is the skewness of the performance function or rate variation.  To understand how each parameter impacts the shape of performance curves, we simulated 40 individuals with varying amounts of between individual variation in performance breadth, optima and rate variation. We then calculated the relative variance in performance across the temperature gradient as the variance in performance at each temperature divided by the maximum performance at that temperature. This simple analysis identified thermal maxima and breath as being the major factors likely leading to the observed patterns in $lnVR_{Q_{10}}$ we identify in our meta-analysis.


```{r, sim}
#| label: sim
#| echo: false

# Library
pacman::p_load(latex2exp, ggplot2, dplyr, tidyr, viridis)

# delta; Optimal environment (the optimal temperature where fitness is maximised)
# sigma; Niche breadth (this is the variation in the fitness surface)
# alpha; Skewness of the fitness function

# Environmental Temperature
  set.seed(23)
     z = seq(0,45,0.1) # Temperature gradient
     n = 40            # Number of individuals
ind_sd = 0.5           # Standard deviation among individuals

# Simulation 1. Assume optimum is rather constant among individuals 
#parameters
delta =  35  
sigma =  9 + rnorm(n, 0, ind_sd)
alpha = -15 + rnorm(n, 0, ind_sd)
# k=2 # note that, if we want to control the between individual differences in performance we can multiply curve by constant. Can do that and add variation and then all aspects of the curve can be modified. 

ws1<- list()
for(i in 1:length(alpha)){
ws1[[i]] <- 2*exp(-(z-delta)^2/(2*sigma[i]^2))*pnorm(alpha[i]*(z-delta)/sigma)
}

ws1 <- data.frame(do.call(cbind, ws1)) %>% pivot_longer(everything(), names_to = "run", values_to = "fitness")  %>% mutate(z = rep(z,each = n))

# Simulation 2: Assume optimum varies but sigma and alpha the same
#parameters

delta =  35 + rnorm(n, 0, 1) 
sigma =  9  
alpha = -15 

ws2<- list()
for(i in 1:length(delta)){
ws2[[i]] <- 2*exp(-(z-delta[i])^2/(2*sigma^2))*pnorm(alpha*(z-delta[i])/sigma)
}

ws2 <- data.frame(do.call(cbind, ws2)) %>% pivot_longer(everything(), names_to = "run", values_to = "fitness")  %>% mutate(z = rep(z,each = n))

# Simulation 3: Assume optimum sigma and alpha vary
#parameters

delta =  35 + rnorm(n, 0, 1) 
sigma =  9  + rnorm(n, 0, ind_sd) 
alpha = -15 + rnorm(n, 0, ind_sd)

ws3<- list()
for(i in 1:length(delta)){
ws3[[i]] <- 2*exp(-(z-delta[i])^2/(2*sigma[i]^2))*pnorm(alpha[i]*(z-delta[i])/sigma[i])
}

ws3 <- data.frame(do.call(cbind, ws3)) %>% pivot_longer(everything(), names_to = "run", values_to = "fitness")  %>% mutate(z = rep(z,each = n))


# Simulation 4: Assume optimum varies but sigma and alpha the same
#parameters

delta =  35 
sigma =  9  + rnorm(n, 0, ind_sd) 
alpha = -15 

ws4<- list()
for(i in 1:length(sigma)){
ws4[[i]] <- 2*exp(-(z-delta)^2/(2*sigma[i]^2))*pnorm(alpha*(z-delta)/sigma[i])
}

ws4 <- data.frame(do.call(cbind, ws4)) %>% pivot_longer(everything(), names_to = "run", values_to = "fitness")  %>% mutate(z = rep(z,each = n))

```

```{r, fig-sim}
#| label: fig-sim
#| fig-align: center
#| fig-cap: "Simulated performance curves for *n* = 40 individuals in four hypothetical scenerios with varying performance breadth ($\\sigma$), optima ($\\delta$) and skewness ($\\alpha$). Individual performance curves are different colours. $lnCVR_{Q_{10}}$ is calculated as the log transformed ratio of the coefficient of variance (CV) in performance at the higher temperature divided by the CV in performance at that temperature at each point along the curve. $lnVR_{Q_{10}}$ is calculated as the log transformed ratio of the standard deviation in performance at the higher temperature divided by the standard deviation in performance at that temperature. The dashed red line indicates the higher temperature (28°C) and the dashed blue line indicates the lower temperature (18°C). Note that the mean ($\\mu$) and standard deviation ($\\sigma$) of physiological rates are shown for each temperature. In all simulations, $\\delta$ = 35, $\\sigma$ = 9 and $\\alpha$ = -15, while between individual variation for $\\sigma_{\\delta}$ = 1,  $\\sigma_{\\sigma}$ = 0.5 and $\\sigma_{\\alpha}$ = 0.5."

my_annotate  <- function(data, size_ano){
  list(annotate("text", x = 18-15, y = 2, label = TeX("18$^\\circ$C"), size = size_ano), 
  annotate("text", x = 28-15, y =2, label = TeX("28$^\\circ$C"), size = size_ano),
  annotate("text", x = 28-16, y = 1.8, label = TeX(paste0("$\\sigma = $", round(data$sd[2], 2))), size = size_ano),
  annotate("text", x = 18-16, y = 1.8, label = TeX(paste0("$\\sigma = $", round(data$sd[1], 2))), size = size_ano),
  annotate("text", x = 28-16, y = 1.6, label = TeX(paste0("$\\mu = $", round(data$mean[2], 2))), size = size_ano),
  annotate("text", x = 18-16, y = 1.6, label = TeX(paste0("$\\mu = $", round(data$mean[1], 2))), size = size_ano),
  annotate("text", x = 8, y = 1, label = TeX(paste0("$lnCVR_{Q_{10}}$ = ", round(log(data$cv[2]/data$cv[1]), 2))), size = size_ano),
  annotate("text", x = 8, y = 0.8, label = TeX(paste0("$lnVR_{Q_{10}}$ = ", round(log(data$sd[2]/data$sd[1]), 2))), size = size_ano))
}
size_ano = 10

# mean, SD and CV
  sum_sim1 <- ws1 %>% 
              filter(z %in% c(18, 28)) %>% 
              group_by(z) %>% 
              summarise(mean = mean(fitness), sd = sd(fitness), cv = sd/mean, n = n())

sim1 <- ggplot(ws1, aes(x = z, y = fitness, color = run)) + geom_line() + theme_classic() + labs(y = "Physiological Rate", x = TeX("Temperature ($^\\circ$C)"), color = "Individual", title = "Thermal Breadth & Rate") + scale_color_viridis_d() + my_theme()+ geom_vline(xintercept = 28, linetype = "dashed", color = "red") + geom_vline(xintercept = 18, linetype = "dashed", color = "blue") + my_annotate(sum_sim1, size_ano) + theme(legend.position = "none")
  

# mean, SD and CV
  sum_sim2 <- ws2 %>% 
              filter(z %in% c(18, 28)) %>% 
              group_by(z) %>% 
              summarise(mean = mean(fitness), sd = sd(fitness), cv = sd/mean, n = n())

sim2 <- ggplot(ws2, aes(x = z, y = fitness, color = run)) + geom_line() + theme_classic() + labs(y = "Physiological Rate", x = TeX("Temperature ($^\\circ$C)"), color = "Individual", title = "Thermal Optima") + scale_color_viridis_d() + my_theme()+ geom_vline(xintercept = 28, linetype = "dashed", color = "red") +     geom_vline(xintercept = 18, linetype = "dashed", color = "blue")   + my_annotate(sum_sim2, size_ano)+ theme(legend.position = "none")
  
# mean, SD and CV
  sum_sim3 <- ws3 %>% 
              filter(z %in% c(18, 28)) %>% 
              group_by(z) %>% 
              summarise(mean = mean(fitness), sd = sd(fitness), cv = sd/mean, n = n())

sim3 <- ggplot(ws3, aes(x = z, y = fitness, color = run)) + geom_line() + theme_classic() + labs(y = "Physiological Rate", x = TeX("Temperature ($^\\circ$C)"), color = "Individual", title = "Thermal Breadth, Optima & Rate") + scale_color_viridis_d() + my_theme()+ geom_vline(xintercept = 28, linetype = "dashed", color = "red") +     geom_vline(xintercept = 18, linetype = "dashed", color = "blue")   + my_annotate(sum_sim3, size_ano)+ theme(legend.position = "none")

# mean, SD and CV
  sum_sim4 <- ws4 %>% 
              filter(z %in% c(18, 28)) %>% 
              group_by(z) %>% 
              summarise(mean = mean(fitness), sd = sd(fitness), cv = sd/mean, n = n())

sim4 <- ggplot(ws4, aes(x = z, y = fitness, color = run)) + geom_line() + theme_classic() + labs(y = "Physiological Rate", x = TeX("Temperature ($^\\circ$C)"), color = "Individual", title = "Thermal Breadth") + scale_color_viridis_d() + my_theme()+ geom_vline(xintercept = 28, linetype = "dashed", color = "red") +     geom_vline(xintercept = 18, linetype = "dashed", color = "blue")   + my_annotate(sum_sim4, size_ano)+ theme(legend.position = "none")

p_sim <- ((sim1 + sim2) / (sim4 + sim3)) +plot_annotation(tag_levels = "A") & theme(plot.tag = element_text(size = 30))
ggsave(p_sim, width = 22.5, height = 18, filename = "./output/figures/figS18.png")
 
p_sim <- image_read("./output/figures/figS18.png")
p_sim
```

```{r, sim2}
#| label: sim2
#| echo: false
#| eval: false
##### Larger simulation

#parameters
  set.seed(23)
 delta_ind_sd = seq(0.01, 2, by = 0.20)
 alpha_ind_sd = 0.01
 sigma_ind_sd = seq(0.01, 2, by = 0.20)
        delta =  35 
        sigma =  9  
        alpha = -15 
            n = 1000
            z = seq(0,45,0.1) # Temperature gradient
            
# create all combinations of sd
sims <- expand.grid(delta_ind_sd, alpha_ind_sd, sigma_ind_sd) %>% 
  mutate(sim = row_number())  %>% rename(delta = Var1, alpha = Var2, sigma = Var3)

sim_results <- data.frame()

for(i in 1:nrow(sims)){
      optima_sim <- delta + rnorm(n, 0, sims[i, "delta"])
       alpha_sim <- alpha + rnorm(n, 0, sims[i, "alpha"])
       sigma_sim <- sigma + rnorm(n, 0, sims[i, "sigma"])

    ws = list()
    for(j in 1:length(optima_sim)){
     ws[[j]] <- 2*exp(-(z-optima_sim[j])^2/(2*sigma_sim[j]^2))*pnorm(alpha_sim[j]*(z-optima_sim[j])/sigma_sim[j])
    }
    
    # Aggregate the list
    data <- data.frame(do.call(cbind, ws)) %>% pivot_longer(everything(), names_to = "run", values_to = "fitness")  %>% mutate(z = rep(z,each = n))

    # Summarise data
    sum_sim <- data %>% 
              filter(z %in% c(18, 28)) %>% 
              group_by(z) %>% 
              summarise(mean = mean(fitness), sd = sd(fitness), cv = sd/mean, n = n())

    sim_results[i,1:5] <- cbind(delta = sims[i, "delta"], alpha = sims[i, "alpha"], sigma = sims[i, "sigma"], lnCVR = log(sum_sim$cv[2]/sum_sim$cv[1]), lnVR = log(sum_sim$sd[2]/sum_sim$sd[1]))
    print(paste0("Simulation is ", round(i/nrow(sims)*100, 2), "% complete"))
}

colnames(sim_results) <- c("delta", "alpha", "sigma", "lnCVR", "lnVR")

# Save simulation so that we don't have to re-run each time
  saveRDS(sim_results, file = "./output/sim_results")

```

