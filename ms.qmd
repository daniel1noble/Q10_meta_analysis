---
title: "Reduced plasticity and variance in physiological rates for terrestrial ectotherm populations under climate change"
bibliography: ./bib/refs.bib
csl: ./bib/ecology-letters.csl
format:
  docx:
    reference-doc: ./bib/template.docx
editor_options: 
  chunk_output_type: console
execute:
  freeze: auto  # re-render only when source changes
  cache: false
  echo: false
  warning: false
  error: false
  include: true
crossref:
  fig-title: 'Figure'
  fig-labels: arabic
  title-delim: "-"
  fig-prefix: "Figure"
  tbl-prefix: "Table"
---

```{r}
#| label: setup
#| echo: false
#| include: false
##################################
# Clean workspace
##################################
    rm(list=ls())

##################################
# Loading packages & Functions
##################################
    pacman::p_load(tidyverse,  metafor, flextable, raster, rasterVis,  patchwork, RColorBrewer, ggtree, ape, phytools, viridis, MCMCglmm, brms, latex2exp, orchaRd, multcomp, ggbeeswarm, magick, ggimage, gt, performance, ggthemes, mapproj)

#devtools::install_github(repo = "ErikKusch/KrigR")
## Function to produce colour palette
# Note that temp is stored as a factor of 10 C larger, so needs to be divided. Also, we can create a custom colour palette function using colorRampPallette
colfunc <- colorRampPalette(rev(brewer.pal(10,"RdBu")))
#test colfunc(10) will generate the exact Hex codes for 10 different colours can 10 to 100 and you get 100 colour hex codes. Very useful webpage: https://pjbartlein.github.io/REarthSysSci/rasterVis01.html

    # loading functions
    source("./R/functions.R")
  
  options(digits = 2, scipen = 3)
```

```{r data_setup_summary}

##########################
## Load processed datasets
##########################
data_wide <- read.csv("./output/data/data_final_wide.csv")
data_long <- read.csv("./output/data/data_final_long.csv")

data_long2 <- data_long %>% mutate(type = factor(type, levels = c("acute", "acclim")))

##########################
## Summarize data
##########################

 data_wide$lat <- as.numeric(data_wide$lat)
    new_papers <- data_wide[-grep("_o", data_wide$record_num),]
    old_papers <- data_wide[grep("_o", data_wide$record_num),]
  
    # habitat
      spp_habitat <- data_wide %>%
                      group_by(habitat) %>%
                      summarise(spp_n = length(unique(species_full)))
      tot_spp <- sum(spp_habitat[,2])
      
    # Taxa
      taxa_sum <- data_wide %>%  
              group_by(habitat, phylum, class) %>% 
              summarise(spp = length(unique(species_full)), n = n()) %>% data.frame()
      
      taxa_sum_long <- data_long2 %>% group_by(habitat, phylum, class) %>% 
              summarise(spp = length(unique(species_full)), n = n()) %>% data.frame()

    # Traits 
      traits_habitat <- data_long2 %>%
                      group_by(habitat, trait_category) %>%
                      summarise(spp_n = length(unique(species_full)), k = n())
      traits_all <- data_long2 %>%
                      group_by(trait_category) %>%
                      summarise(spp_n = length(unique(species_full)), k = n())
    
      # Acclimation time vary across habitat?
      
      acclim_time <- data_wide %>% 
                      group_by(habitat) %>% 
                      summarise(mean = mean(acclim_period, na.rm = TRUE),
                                  sd = sd(acclim_period, na.rm = TRUE),
                                  n = n())
      test_m_t <- t.test(acclim_period ~ habitat, data = data_wide %>% filter(!habitat == "f"))
      test_f_t <- t.test(acclim_period ~ habitat, data = data_wide %>% filter(!habitat == "m"))
      test_f_m <- t.test(acclim_period ~ habitat, data = data_wide %>% filter(!habitat == "t"))
      
#########################
## Phylogeny
#########################
 ## Tree data
    tree_data <-  data_long %>%
                  group_by(species_full)                                                 %>%
                  mutate(n = length(habitat))                                            %>%
                  dplyr::select(species_full,  habitat, n)                               %>% 
                  distinct(species_full, habitat, n)
    #rownames(tree_data) <- tree_data$species_full
    #tree_data <- tree_data[,2:3]
    
 ## Load the phylogenetic tree
                tree <- read.tree("./tree/tree_binary_SN_Q10.tre")   
      tree$tip.label <- gsub("_", " ", tree$tip.label)
      tree$tip.label <- gsub("Enithares sp", "Enithares ciliata", tree$tip.label)
  
      # Do a tree check with original data
        #  tree_checks(data_long, tree, dataCol = "species_full", type = "checks") 

##################################
# Tree checking and pruning
##################################
  # Have a look at species in data and tree. 
  tree <- tree_checks(data_long, tree, dataCol = "species_full", type = "prune")
      
# Check that taxa dropped
 # tree_checks(data_long, tree, dataCol = "species_full", type = "checks")

##################################
# Branch lengths and cor matrix
##################################
      # Now that we have the tree file, we need to use it to create a phylogenetic correlation matrix using Grafen's method. This assumes Brownian motion and is the best we can do without a molecular phylogeny. The topology of the tree should be fairly good. We will explore a few different options with p to determine the best power function
      
      tree_p0.7 <- compute.brlen(tree, method = "Grafen", power = 0.7) # Probably most sensible power
        
     # Create null nodes 
      tree_p0.7$node.label <- NULL # We don't use nodes and will cause a warning so create null node names
```

<p style="text-align: center;">Daniel W.A. Noble^1^ $\ddagger$, Fonti Kar^2^,  Alex Bush^4^, Frank Seebacher^3^ $\dagger$, & Shinichi Nakagawa^2^ $\dagger$</p>


#### Affliations:
^1^ Division of Ecology and Evolution, Research School of Biology, The Australian National University, Canberra, ACT 2600, Australia &NewLine;  
^2^ Ecology and Evolution Research Centre, School of Biological, Earth and Environmental Sciences, University of New South Wales, Sydney, NSW, Australia &NewLine;  
^3^ SOLES, University of Sydney, Sydney, NSW, Australia &NewLine;  
^4^ Department of Biology, Lancaster University, Liverpool, UK &NewLine;  
$\dagger$ contributed equally &NewLine;  
$\ddagger$ corresponding author, daniel.noble@anu.edu.au &NewLine;  

## **Abstract**

Climate change is expected to result in warmer and more variable thermal environments globally. Greater thermal variability is expected to result in strong selection pressures leading to genetic adaptation and/or the evolution of adaptive phenotypic plasticity. Such responses depend on genetic and phenotypic variability, yet most work has focused on plastic changes in mean responses to climate warming ignoring how temperature changes variability. Here, using a large database of physiological rate data on marine, freshwater and terrestrial ectotherms we quantify the capacity for acclimation and the extent to which relative variance in physiological rates change in response to higher temperatures. Using new effect size measures and meta-analysis we show that physiological acclimation and changes in relative variance do not depend on past temperature variability and predictability experienced by a population, or differ between life stages. Across habitats there was a general tendency for relative variation in physiological rates to decrease at higher temperatures. Freshwater ectotherms are capable of acclimating and such responses will likely be beneficial considering that these effects are larger than reductions in relative variance in physiological rates. In contrast, acclimation responses of marine organisms coincide with a nearly equal reduction in relative variance in physiolgical rates, suggesting acclimation may not be as beneficial as previously thought. Relative variance reductions are particularly pronounced for terrestrial ectotherms and this coincides with a general inability to acclimate highlighting the vulnerability of terrestrial ectotherms to climate change. Our results highlight the importance of considering changes in variance in physiological rates when predicting the capacity of populations to persist in and adapt to novel environments.

## **Introduction**

Climate change is expected to result in warmer but also more variable thermal environments for many organisms globally [@Suarez2023; @Easterling2000; @Ummenhofer2017]. Greater thermal variability in the past is expected to have resulted in strong selection pressures leading to genetic adaptation and/or the evolution of adaptive phenotypic plasticity -- both of which are considered important for population resilience to contemporary human-induced climate change [@Seebacher2015-wi; @Merila2014; @Chevin2015; @Chevin2017; @Chevin2010; @Nunney2016]. The extent to which adaptive plasticity and genetic adaptation will each contribute to a populations capacity to adapt to new environmental conditions is not yet clearly established [@Chevin2017]. Without such responses, high extinction rates are predicted if organisms cannot track suitable habitats [@Cahill2012; @Nunney2016]. Phenotypic plasticity is expected to be the 'first line of defence' against changing climates by buying time for genetic adaptation to take place [i.e., the 'plasticity first hypothesis' - @WestEberhard2003; see also @Lande2009]. Phenotypic plasticity is predicted to evolve when environmental variability is high but predictable and the costs of plasticity are low [@Chevin2017; @Scheiner2020; @Nunney2016; @Dewitt1998; @Reed2010]. Despite this theoretical expectation, empirical support is scant [but see @Leung2020], likely because many organisms can behaviorally adjust micro-habitat selection to offset thermal stress, the costs of plasticity are high [@Chevin2015; @Dewitt1998], or the prediction is likely only supported for specific plastic responses (i.e., active and developmental plasticity) or life-history stages.  

Reversible forms of phenotypic plasticity, such as acclimatization  and behavioural plasticity, are expected to provide greater potential to buffer populations from climate impacts as responses can be fine-tuned to environments [assuming the costs of plasticity are low – @Dewitt1998; @Scheiner2020]. Such responses are driven by changes in underlying physiology that can respond rapidly to the environment. However, studies have primarily been focused on mean physiological responses, paying little attention to changes in physiological variability in a population [@Seebacher2015-wi; @Havird2020-mj]. For example, most work has focused on the degree to which mean thermal tolerances or acclimation abilities in a population are likely to shift in response to thermal environments [@Seebacher2015-wi; @Gunderson2015-hz; @Havird2020-mj; @Pottier2022], neglecting how intrapopulation variability might also be impacted. Understanding how variability in physiological rates -- traits thought to be closely linked to fitness -- are affected by climate change has important implications for understanding a population's capacity for physiological trait evolution because lack of physiological variation is expected to play a role in limiting responses to selection (i.e., the 'opportunity for selection on a trait') [@Pelletier2012]. Higher physiological variability in a population may also imply greater niche breadth and inform on the extent to which populations are able to buffer against environmental change [for example, through 'portfolio effects' see @Bolnick2011; @Schindler2010; @Zheng2023; @Slatyer2013]. Decreases in phenotypic variance may also suggest strong stabilising selection or constraints on performance, depending on the trait [@Scheiner2020; @Dewitt1998]. Such changes in physiological trait variation may also have important ecological consequences by promoting population productivity and stability [@Agashe2009; @kooijman1989population], species coexistence and ecosystem processes [@imura2003genetic; @Bolnick2011; @hart2016variation]. The implications of changes in variance could, therefore, have wide-reaching consequences for understanding the capacity of populations to persist in and adapt to novel environments but to date have been largely ignored [@Scheiner2020].

Periods of past climatic change have had disproportionate impacts on some ecosystems over others leading to uncertainty over which ecosystems will be most vulnerable to contemporary climate change. Studies have highlighted species occupying terrestrial ecosystems as being particularly vulnerable given their weak acclimation abilities and greater probability of experiencing thermal extremes that overwhelm physiological homeostasis [@Seebacher2015-wi; @Gunderson2015-hz; @hoffmann2013upper], whereas greater proximity to upper thermal limits in marine systems have questioned such conclusions [@Pinsky2019-fn]. Despite marine and freshwater ecosystems appearing to have greater physiological acclimation capacity [e.g., @Seebacher2015-wi; @Pottier2022], it is unclear if the magnitude of physiological adjustment is sufficient, particularly in combination with potential changes in other factors, such as genetic and phenotypic variability. Low oxygen availability has been suggested as a major factor influencing the vulnerability of aquatic ecosystems whereas remaining close to thermal limits and greater water loss is expected to be a stronger constraint on physiological processes in terrestrial ectotherms [@Verberk2016]. Given that terrestrial ectotherms are expected to be closer to their thermal limits, an increase in temperature may have a stronger impact on variation in physiological rates within populations compared to aquatic ectotherms. Reduced variability may result from variances being eroded by strong selection, an inability to adjust physiological rates, or a combination of both. Changes in physiological rate variance may therefore have important cascading effects on energy transfer and productivity for populations across these different ecosystems that are, as of yet, poorly measured and modelled.

Here, we use new effect sizes and meta-analysis to re-evaluate the degree to which aquatic and terrestrial ectotherms are capable of physiological plasticity. We then expand these effect sizes to allow for comparisons of variance in physiological rates to ask the following questions: 1) How much is variance in physiological rates expected to change, if at all, as temperatures rise? 2) Are temperture effects on plastic adjustments in physiolgical rates larger than changes in variance across aquatic and terrestrial ectotherms? 3) Are changes in plasticity or variance in physiological rates impacted by a population's past climate history? 4) How are means and variances in physiological rates expected to change under climate change?  


## **Materials and Methods**
### *Literature collection*
We compiled literature on ectothermic animals that measured physiological rates (e.g., metabolic rate) at two or more temperatures after having been acclimated (or acclimatized) at these temperatures. We used data from a previous meta-analysis [@Seebacher2015-wi] and updated @Seebacher2015-wi's data by extracting data from suitable studies from our own searches that followed the same search protocol. More specifically, we performed a literature search using the Web of Science database for articles or proceedings papers published in English from 2013 to 2017 [the date after @Seebacher2015-wi searches were conducted] using the following topic search string: *"(acclimat* AND (therm* OR temp*) NOT (plant* OR tree* OR forest* OR fung* OR mammal* OR marsup* OR bird* OR human OR exercis* OR train* OR hypoxi*))"*. We further limited to the following research areas: Anatomy Morphology; Biodiversity Conservation; Biology; Ecology; Endocrinology Metabolism; Entomology; Evolutionary Biology; Marine Freshwater Biology; Physiology; Respiratory System, Reproductive Biology, Zoology. 

Our search resulted in 1,321 papers for screening in Rayyan [@Ouzzani2016-ge]. We also cross-checked papers we found in our searches with a recent paper by @Havird2020-mj, which also updates the dataset of @Seebacher2015-wi's. We included any papers that were missed between our searches and those of @Havird2020-mj. @Havird2020-mj added 7 new studies (mainly because they were focused on metabolic rates), and our searches differed from theirs by only a single paper [i.e., @Bulgarella2015-yl]. Given the physiological traits we included were broader, we had a substantial increase in additional papers that we added to @Seebacher2015-wi's dataset. More specifically, in addition to the `r length(unique(old_papers$record_num))` papers we included from the @Seebacher2015-wi dataset, we extracted data from an extra `r length(unique(new_papers$record_num))` papers (with a total of `r dim(new_papers)[1]` effects; a `r  (length(unique(new_papers$record_num)) / length(unique(old_papers$record_num)))*100`% increase in the number of published articles). Note that @Seebacher2015-wi included a total of 205 publications, however, not all these contained the necessary statistics we needed to derive effect sizes and associated sampling variances (see below). While we may have missed papers, our goal was to obtain a large representative (and unbiased) sample of acclimation research rather than a comprehensive dataset. As such, our database represents the most up-to-date dataset used by @Seebacher2015-wi to answer questions on physiological rates across ectotherms. 

We split the screening of titles and abstracts for the 1,321 papers found in our search among all authors evenly. To ensure consistency among authors in title and abstracts that should be included, prior to  screening all authors went through a randomly selected set of papers together - agreeing on those that were relevant and those that were not based on our inclusion criteria (see below). Where any authors were uncertain about whether to include a paper in the sub-sample they screened, we conservatively included the paper for full text screening and discussed uncertain papers among authors to come to a decision on whether to include the paper. After title and abstract screening, we were left with a total of 149 papers for full text screening. Papers were included only if they: 1) measured a physiological rate acutely at two temperatures on a sample of animals chronically exposed to the same two temperatures for at least 1 week; and 2) where physiological rates measured were burst and sustained locomotion, metabolic rates (standard, resting, routine and maximal), heart rates, and/or enzyme activities. We provide a PRISMA flow diagram of our extraction process in the *Supplement* (see @fig-prisma).

### *Data Compilation*

We extracted means, standard deviations, and sample sizes for physiological rates at the two test temperatures. If there were more than two test temperatures, we chose only the test temperatures that fell within the most likely natural range of temperatures experienced by the species in question. We extracted these data from text, tables or figures of a given paper. Data were extracted from figures using the R package *metaDigitise* [@Pick2019-mg]. We also recorded the phylum, class, order, genus and species under study and the latitude and longitude of the population that was being studied. For studies that did not provide latitude and longitude for the population, we searched for similar studies by the lab group to identify where the population was likely to have been sourced or derived from when needed. If the population was derived from the wild, we recorded the nearest latitude and longitude of the population to the field collection site. If the animals had been sourced from a commercial supplier, we took the latitude and longitude of the supplier that the paper identified the animals to have originated from. When it was not possible to find latitude and longitude using these methods, we looked up the distribution of the species in question and took the latitude and longitude of the centroid of the species' distributional range. 

### *$Q_{10}$ Based Effect Sizes and Sampling Variances for Means and Variances*

Following @Noble2022-ty we calculated a series of temperature-corrected effect sizes that compared mean physiological rates ($lnRR_{Q_{10}}$) as well as the variability in physiological rates ($lnVR_{Q_{10}}$ and $lnCVR_{Q_{10}}$). These effect sizes are similar to the traditional temperature coefficient ($Q_{10}$), but with formal analytical approximations for their sampling variances. Sampling variances for effect sizes allowed us to make use of traditional meta-analytic modelling approaches. 

#### *Comparing changes in mean physiological rates*

To compare mean physiological rates, we calculated the log $Q_{10}$ response ratio, $lnRR_{Q_{10}}$ [@Noble2022-ty] as follows:

$$
  lnRR_{Q_{10}} = ln\left( \frac{R_{2}}{R_{1}} \right){ \left(\ \frac{10^{\circ}C}{T_{2}-T_{1}} \right) }
$$ {#eq-lnq10}


Where, $R_{1}$ and  $R_{2}$ are mean physiological rates and  $T_{1}$ and  $T_{2}$ are the temperatures that these rates are measured. Log transformation of this ratio makes the effect size normally distributed. @eq-lnq10 is essentially a temperature corrected equivalent to the log response ratio (lnRR) [@Hedges1999-de; @Lajeunesse2011-fq] when the numerator and denominator are measured at different temperatures. This allows one to compare the mean of two temperature treatments directly regardless of the temperatures that these groups have been measured. The sampling variance for @eq-lnq10 can be computed as follows (as described in @Noble2022-ty):

$$
  s_{lnRR_{Q_{10}}} = \left( \frac{SD_{2}^2}{R^2_{2}N_{2}} + \frac{SD_{1}^2}{R^2_{1}N_{1}} \right){ \left(\ \frac{10^{\circ}C}{T_{2}-T_{1}} \right) }^2
$$ {#eq-Vlnq10}

Here, $SD_{1}^2$ and $SD_{2}^2$ are the standard deviations and $N_{1}$ and $N_{2}$ are the sample sizes in group 1 and 2, respectively.

#### *Comparing variance in physiological rates*
@Nakagawa2015-fo proposed analogous effect size estimates to *lnRR* that allow for comparisons of changes in variance between two groups, the log variance ratio (*lnVR*) and the log coefficient of variation (*lnCVR*). *lnVR* and *lnCVR* are ratios that describe the relative difference in trait variability between two groups. We refer readers to @Nakagawa2015-fo for the equations describing *lnVR* and *lnCVR*, but these can easily be extended to their $Q_{10}$ analogues (and associated sampling variance) as follows:

$$
lnVR_{Q_{10}} = ln\left( \frac{SD_{2}}{SD_{1}} \right){ \left(\ \frac{10^{\circ}C}{T_{2}-T_{1}} \right) }
$${#eq-lnq10VR}
$$
s_{lnVR_{Q_{10}}} = \left( \frac{1}{2\left( N_{2}-1 \right)} + \frac{1}{2\left(N_{1} - 1\right)} \right){ \left(\ \frac{10^{\circ}C}{T_{2}-T_{1}} \right) }^2
$$ {#eq-slnq10VR}

 @eq-lnq10VR and @eq-slnq10VR describe the change in physiological rate variance (@eq-lnq10VR) across a 10&deg;C temperature change along with its sampling variance (@eq-slnq10VR). While this is a useful metric, as discussed by @Nakagawa2015-fo there is often a strong mean-variance relationship that needs to be accounted for in analysing changes in variance. As such, we calculated the coefficient of variation, which standardizes changes in variance for changes in means as follows:

$$
lnCVR_{Q_{10}} = ln\left( \frac{\text{CV}_{2}}{\text{CV}_{1}} \right){ \left(\ \frac{10^{\circ}C}{T_{2}-T_{1}} \right) }
$$ {#eq-lnq10CVR}
$$
s_{lnCVR_{Q_{10}}} = \left[ \frac{(\text{SD}_{1})^2}{N_{1}({R}_{1})^2} + \frac{(\text{SD}_{2})^2}{N_{2} ({R}_{2})^2} + \frac{1}{2\left( N_{1}-1 \right)} + \frac{1}{2\left(N_{2} - 1\right)} \right]{ \left(\ \frac{10^{\circ}C}{T_{2}-T_{1}} \right) }^2
$$ {#eq-slncvr}

where $CV$ is the coefficient of variation defined as $SD / R$. We refer to $lnCVR_{Q_{10}}$ as relative variance because variance changes are relative to the mean. 

#### *Calculating acute and acclimation $lnRR_{Q_{10}}$, $lnVR_{Q_{10}}$ and $lnCVR_{Q_{10}}$ estimates*
Using the mean, standard deviation, and sample size for all acute and acclimation treatments of studies in our databases we derived acute and acclimation $lnRR_{Q_{10}}$, $lnVR_{Q_{10}}$ and $lnCVR_{Q_{10}}$ estimates. For all effect sizes the higher acute or acclimation temperature was in the numerator and the lower of the two temperatures in the denominator. As such, positive effect sizes suggest that the mean or variance is larger at the higher of the two temperatures, standardized to 10&deg;C. 

### *Moderator Variables*

We recorded or derived a series of moderator variables from each study that are expected to have an impact on our effect size estimates. These included the duration of acclimation in days and acclimation type ("acclimation" or "acclimatization") given that acclimation responses are expected to depend on how long chronic temperature exposure occurs (longer exposure = better acclimation response) [@Seebacher2015-wi]. We also recorded if the sample of animals were derived from captive or wild stocks, the life-history stage of the animals used ("adult" or "juvenile") and the habitat type ("freshwater", "marine" or "terrestrial") given that @Seebacher2015-wi show that these factors can impact $Q_{10}$ estimates. Physiological rate measures varied widely across the studies but could generally be grouped into discrete trait categories [@Seebacher2015-wi]. As such, using the detailed information on the trait type, and its associated units from a given study, we categorized each effect size into one of 12 trait categories. These categories included measures of whole organism performance measures including cardiac (i.e., 'cardiac') and muscle ('muscle') function, sprint speed ('sprint') and endurance ('endurance') and metabolic rates (i.e., maximal and resting metabolic rate; max MR', 'rest MR', respectively). Studies also quantified various enzymatic reaction rates, including enzymes involved in general metabolic responses (categorized as 'metabolic enzyme'), various parts of the electron transport chain, including ATPase activity ('ATPase'), mitochondrial leak ('mito_leak') and oxidation ('mito_oxidation') as well as antioxidant enzymes ('antiox'). All other traits not falling within these categories were placed into 'other'. 

### *Climate Data*

To understand how climate has impacted species’ physiological acclimation abilities we used the coordinates reported by each study to extract temperature data from terrestrial and aquatic environments. It was unclear whether climate at the locations of captive reared organisms would be representative of a population's climate history - particularly for species reared under captive condition for many generations. Given that we were interested in understanding climate driven effects on acclimation capacity we only used studies on wild populations for climate analyses. 

Monthly average temperature data were extracted from the ERA5 climate model, available from the Copernicus climate data store [@Hersbach2020-hx]. For each population and species in the dataset we extracted a 30-year period (1950-2022) of either surface air temperature at 2 meters (0.01 resolution) for both terrestrial and freshwater taxa, or sea surface temperature for the marine taxa (at 0.25 resolution) using the *ncdf4* R package [vers. `r utils::packageVersion("ncdf4")`, @Pierce2021-lc]. We chose a 2-meter resolution because we believed that it more likely reflects the micro-thermal environment experienced by terrestrial and freshwater ectotherms at those locations. For terrestrial species we also collected soil temperature as for many species this maybe more representative of microhabitat choice compared to air temperature. We fit models using both air and soil temperature and found that the results were qualitatively similar. As such, we only present results for air temperature.

Using the thermal time-series data for each location we summarised various metrics of thermal variability across months and years as well as estimates of thermal predictability (i.e., autocorrelation). To estimate thermal variability, we calculated the coefficient of variation ($\frac{SD}{M}$, where SD = standard deviation in temperature and M = the mean temperature for each year). To estimate thermal predictability, we calculated the auto-regressive time lag across the entire dataset. Theoretical and empirical studies of plasticity evolution have emphasised the importance of both climate variability and predictability in plasticity evolution.

We also extracted climate projections into the future to understand the effects that climate warming will have on physiological rate variance. We used the CanESM2 climate model (2005-2100) under a high emissions scenerio (RCP8.5). 

### *Meta-Analysis*
We analysed our data using multilevel meta-analytic (MLMA) and meta-regression (MLMR) models in R (vers. `r paste0(R.Version()$major, ".", R.Version()$minor)`) using *brms* [vers. `r utils::packageVersion("brms")` @Burkner2017-wg; @Burkner2018-ur; @noauthor_2021-az] and *metafor* [vers. `r utils::packageVersion("metafor")` @Viechtbauer2010-fn].  We fit both Bayesian and frequentist approaches to ensure that our results were consistent, and to create orchard plots more easily [vers. 2.0, @Nakagawa2021-ls; @nakagawaorchard]. In addition, Bayesian methods better protect against type I errors in the presence of complex sources of non-independence [@Nakagawa2021-uf; @Song2021-ba; @Noble2017-mz]. For our Bayesian models, we ran 4 MCMC chains, each with a warm-up of 1000 followed by 4000 sampling iterations keeping every 5 iterations for a total of 3200 samples from the posterior distribution. We used flat Gaussian priors for 'fixed' effects (i.e., $N(0, 10)$) and a student t-distribution for 'random' effects (i.e., $student_{t}(3, 0, 10)$). We checked that all MCMC chains were mixing and had converged (i.e., $R_{hat} = 1$). We compared any competing models using Akaike's Information Criteria (AIC) (if frequentist) or Wantabe Information Criteria (WIC) (if Bayesian). We deemed models with the lowest IC value to be best supported if there was a $\Delta IC$ between the competing models of 2 or more. If two models were within 2 $\Delta IC$ units we went with the most parsimonious model. 

#### *Multi-level Meta-analysis (MLMA) Models*
We first fit multi-level meta-analysis (MLMA) models (i.e., intercept-only models) for both $lnRR_{Q_{10}}$ and $lnCVR_{Q_{10}}$, that included study, species, and phylogeny as random effects to account for non-independence. We also included trait as a random effect to account for trait variation within the data. Our MLMA models allowed us to partition the variation in $lnRR_{Q_{10}}$ and $lnCVR_{Q_{10}}$ among these key sources while accounting for total sampling variance in each. This allowed us to calculate the proportion of total heterogeneity [i.e., $I_{total}^2$; *sensu* @Nakagawa2012-oc; @Noble2022-ty] along with various $I^2$ metrics describing the proportion of variance explained by each random effect level [@Nakagawa2012-oc]. We also present 95% prediction intervals which describe the expected distribution of effects from future studies [@Nakagawa2021-ls; @Noble2022-ty]. 

A phylogeny was derived using the Open Tree of Life (OTL) with the *rotl* package in R [vers. `r utils::packageVersion("rotl")`, @Michonneau2016-if], and plotted using *ggtree* [vers. `r utils::packageVersion("ggtree")`, @Yu2017-wj]. We resolved all polytomies in the tree. Any missing taxa were replaced with closely related species and branch lengths were computed using Grafen's method [using power = 0.7, @Grafen1989-pr]. We used the R packages *ape* [vers. `r utils::packageVersion("ape")`, @Paradis2019-gx] and *phytools* [vers. `r utils::packageVersion("phytools")`, @Revell2012-vq] to prune the tree for individual analyses and calculate phylogenetic covariance (or correlation) matrices used in meta-analytic models.  

#### *Multi-level Meta-regression (MLMR) Models*

After quantifying levels of heterogeneity, we fit a series of multi-level meta-regression (MLMR) models to test our key questions. In all models, we included the same random effects as we used in our MLMA models. Acclimation time varied from `r range(data_wide$acclim_period, na.rm = TRUE)[1]` to `r range(data_wide$acclim_period, na.rm = TRUE)[2]` days (mean (SD) = `r mean(data_wide$acclim_period, na.rm = TRUE)` $\pm$ `r sd(data_wide$acclim_period, na.rm = TRUE)` days), and terrestrial ectotherms were acclimated for a much shorter duration (mean (SD) = `r acclim_time[3,2]` $\pm$ `r acclim_time[3,3]`, n = `r acclim_time[3,4]`) than both freshwater (mean (SD) = `r acclim_time[1,2]` $\pm$ `r acclim_time[1,3]`, n = `r acclim_time[1,4]`) and marine species (mean (SD) = `r acclim_time[2,2]` $\pm$ `r acclim_time[2,3]`, n = `r acclim_time[2,4]`). Rates of acclimation have been shown to be faster for many terrestrial groups compared to aquatic organisms [e.g., amphibians and reptiles have faster rates of acclimation than fishes; See @Einum2023-lz], which would make it more likely that terrestrial ectotherms would show lower post acclimation $lnRR_{Q_{10}}$. To control for these possible differences, acclimation time was mean-centered (mean = 0) and included in all our models. As such, all estimates can be interpreted as values for an average level of acclimation time (i.e., `r mean(data_wide$acclim_period, na.rm = TRUE)` days). 

We first tested the degree to which acute and acclimation $lnRR_{Q_{10}}$ and $lnCVR_{Q_{10}}$ effects varied by habitat type (i.e., terrestrial, freshwater, and marine ecosystems). Models included an interaction between effect type (i.e., acute or acclimation) and habitat. Reduced mean $lnRR_{Q_{10_{acclimation}}}$ relative to $lnRR_{Q_{10_{acute}}}$ indicates that acclimation to thermal environments results in partial compensation of physiological rates (i.e., phenotypic plasticity), whereas no differences between $lnRR_{Q_{10_{acute}}}$ and $lnRR_{Q_{10_{acclimation}}}$ suggests organisms are not capable of physiological plasticity [@Havird2020-mj; @Seebacher2015-wi]. In contrast, a difference in $lnCVR_{Q_{10_{acclimation}}}$ relative to $lnCVR_{Q_{10_{acute}}}$ would imply that changes in between individual variation in physiological rates across 10$^{\circ}$C differ depending on whether acute or acclimation responses are measured. If the interaction between effect type and habitat was not supported, then we fit a model that only contained additive effects of effect type and habitat. Following on from these models, we subset each habitat type and explored how mean $lnRR_{Q_{10}}$ changed across traits. Within each habitat (marine, freshwater, and terrestrial) we fit a series of models that included an interaction between effect type (acute / acclimation) and trait category (as defined above). Variance in effects within trait categories appeared to vary depending on the trait type in question. Comparison of a model with and without heteroscedastic residual variance favored a model with heteroscedastic residual variance across trait categories ($\Delta AIC_{c}$; marine = 58, freshwater = 120, and terrestrial = 12). To ensure models converged we limited to trait categories for each habitat with six or more effect sizes. 

Second, we tested whether different life-stages are more or less likely to acclimate by fitting a model for each habitat type and including an interaction between life-stage ('adult' or 'juvenile') and effect type. We predicted that acclimation responses would be more likely early in development compared to later in development as this pattern has been shown in previous studies [e.g., @moghadam2019heat], but that this should depend on the habitat type given the different constraints faced by different early life stages across major habitat types. 

#### *Modelling how climate change will impact on opportunity for selection*

To understand the consequences of human-induced climate change on the potential to impact the opportunity for selection on physiogical traits we fit a model that included an interaction between acclimation type, habitat type, latitude and longitude. We assumed that any change in $lnCVR_{Q_{10}}$ across latitude and longitude could vary by habitat type (i.e., an interaction between habitat). We used non-linear tensors for latitude and longitude as any response could be complicated by local factors (e.g., altitude). Our model included random effects of species, trait, phylogeny and study. We predicted the expected change in $lnCVR_{Q_{10}}$ for each wild population in our dataset at the specific populations latitude and longitude. To do this, we first converted the predicted $lnCVR_{Q_{10}}$ to a 1$^{\circ}$C change as opoosed to 10$^{\circ}$C as follows:

$$
lnCVR_{Q_{1}} = \frac{lnCVR_{Q_{10}}}{10}
$$ {#eq-lCVRpred}

@eq-lCVRpred turned the expected change across 10$^{\circ}$C to 1$^{\circ}$C. We then multiplied this predicted change by the change in air and sea surface temperatures at the locations of each population (and species) that is expected under high emissions scenerios in 2080. 

### *Publication Bias*

We explored the possibility for publication bias graphically, using funnel plots, and more formally by including in our meta-regression models sampling variance (or sampling standard error) [@Nakagawa2022-gy]. Funnel plot asymmetry may suggest a form of publication bias called the 'file-drawer' effect whereby low-powered studies are less likely to be published. To test whether sampling variance covaried with effect size we included it in a multi-level meta-regression model that acounted for all the random effects (study, species, trait) and fixed effects (acclimation time, type of effect, habitat, trait category and the interaction between habitat type and trait category). 

```{r lnrrq10}
#| label: lnrrq10
#| echo: false
#| cache: true
#| message: false
#| warning: false
#| include: false

#############
## lnRRQ10 ##
#############
##################################################
# Organise the data and prune tree
##################################################
# Subset the data
lnRRQ10_data <- data_long2 %>% filter(grepl("lnRR", name) & !is.na(effect_size) & !is.na(V) & !V == 0 & !is.na(acclim_period)) %>% 
                              mutate(spp = species_full, c_accl_time = acclim_period - mean(acclim_period, na.rm = TRUE))

# Check and prune tree
tree_lnrr <- tree_checks(data = lnRRQ10_data, tree = tree_p0.7, dataCol = "species_full", type = "prune")
tree_checks(data = lnRRQ10_data, tree = tree_lnrr, dataCol = "species_full", type = "check") # Good

# Create the phylo correlation matrix
phylo_cor <- vcv(tree_lnrr, cor = TRUE)
        A <- vcv(tree_lnrr, cor = FALSE) # For bayes, need cov matrix

# Found some other data entry problems from old dataset. Sample sizes are decimals. That's not correct. It has to be an integer. These are not the new data that we entered. Data now checked. Seemed to have resulted in a 'frame shift' in some data. Not sure how that happened, but it's now fixed. 
#hist(lnRRQ10_data$V)

# Studies with big V, why? Check N
lnRRQ10_data %>% filter(V >= 2)

# have a quick look on habitat, development and type. Mostly looks sensible but there is not too much data in terrestrial realm.
sum_life <- lnRRQ10_data %>% group_by(life.hist, type, habitat) %>% summarise(n=n()) %>% arrange(habitat)

##################################################
# Model 1.1: Intercept only model. 
##################################################
rerun = FALSE
if(rerun){
  model1.1 <- metafor::rma.mv(effect_size ~ 1, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor), dfs = "contain", 
                              test = "t", data = lnRRQ10_data) 
  
  model1.1_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  1 + (~1 | record_num) + (1 | gr(species_full, cov = A)) + (1 | spp) + (1|trait), data2 = list(A=A), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data)
  
  # Save model1.1
  saveRDS(model1.1, file = "./output/models/lnRRQ10_1.1")
  saveRDS(model1.1_bayes, file = "./output/models/lnRRQ10_1.1_bayes")
} else{ 
  model1.1 <- readRDS("./output/models/lnRRQ10_1.1")
model1.1_bayes <- readRDS("./output/models/lnRRQ10_1.1_bayes")
}

# Heterogeneity analysis
   w <- with(lnRRQ10_data, 1/V) # weights
  sv <- sum(w*(dim(lnRRQ10_data)[1]-1)) / (sum(w)^2 + sum(w^2))

# extract posterior sds, but square them to turn to variance
  posteriors_1.1 <- posterior_samples(model1.1_bayes, pars = c("^sd", "sigma"))^2
  colnames(posteriors_1.1) <- gsub("__Intercept", "", colnames(posteriors_1.1))
  colnames(posteriors_1.1) <- gsub("sd_", "", colnames(posteriors_1.1))
  
    res <- posteriors_1.1[,"sigma"]
   stdy <- posteriors_1.1[,"record_num"]
  phylo <- posteriors_1.1[,"species_full"]
    spp <- posteriors_1.1[,"spp"]
  trait <- posteriors_1.1[,"trait"]
  total <- phylo + spp + res + sv + stdy + trait
 
  # Calculate I2
     tot_i2 <- (sv / total)*100    ; mean(tot_i2)  ; quantile(tot_i2, c(0.025, 0.975))
   phylo_i2 <- (phylo / total)*100 ; mean(phylo_i2); quantile(phylo_i2, c(0.025, 0.975))
     spp_i2 <- (spp / total)*100   ; mean(spp_i2)  ; quantile(spp_i2, c(0.025, 0.975))
    stdy_i2 <- (stdy / total)*100  ; mean(stdy_i2) ; quantile(stdy_i2, c(0.025, 0.975))
   trait_i2 <- (trait / total)*100 ; mean(trait_i2); quantile(trait_i2, c(0.025, 0.975))
     res_i2 <- (res / total)*100   ; mean(res_i2)  ; quantile(res_i2, c(0.025, 0.975))
  
  # Table
     i2_lnrr <- data.frame(name = c("Phylogeny", "Species", "Study", "Trait"),
                           est = c(mean(phylo_i2),mean(spp_i2), mean(stdy_i2), mean(trait_i2)),
                           lci = c(quantile(phylo_i2, c(0.025, 0.975))[1], quantile(spp_i2, c(0.025, 0.975))[1],
                                   quantile(stdy_i2, c(0.025, 0.975))[1], quantile(trait_i2, c(0.025, 0.975))[1]),
                           uci = c(quantile(phylo_i2, c(0.025, 0.975))[2], quantile(spp_i2, c(0.025, 0.975))[2],
                                   quantile(stdy_i2, c(0.025, 0.975))[2], quantile(trait_i2, c(0.025, 0.975))[2]))
     
###################################################
# Model 1.2: Model controlling for acclimation time, 
# type and habitat assuming type can vary by habitat
###################################################

if(rerun){
  # More realistic model with 
  model1.2 <- metafor::rma.mv(effect_size ~  c_accl_time + type + habitat + type:habitat, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor), dfs = "contain", 
                              test = "t", data = lnRRQ10_data)

  
   model1.2_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + type + habitat + type:habitat + (~1 | record_num) + (1 | gr(species_full, cov = A)) + (1 | spp) + (1|trait), data2 = list(A=A), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data)
                                  
  # Save model1.2
  saveRDS(model1.2, file = "./output/models/lnRRQ10_1.2")
  saveRDS(model1.2_bayes, file = "./output/models/lnRRQ10_1.2_bayes")

  } else{
        model1.2 <- readRDS("./output/models/lnRRQ10_1.2")
  model1.2_bayes <- readRDS("./output/models/lnRRQ10_1.2_bayes")
}

####################################################
## Model 1.2: Bayesian Contrasts
###################################################
  posteriors_1.2 <- posterior_samples(model1.2_bayes, pars = "^b")
  f_acute  <- posteriors_1.2[,"b_Intercept"]; pmcmc(f_acute)
  f_acclim <- posteriors_1.2[,"b_Intercept"] + posteriors_1.2[,"b_typeacclim"]
  m_acute  <- posteriors_1.2[,"b_Intercept"] + posteriors_1.2[,"b_habitatm"]
  m_acclim <- posteriors_1.2[,"b_Intercept"] + posteriors_1.2[,"b_habitatm"] + posteriors_1.2[,"b_typeacclim"] + posteriors_1.2[,"b_typeacclim:habitatm"]
  t_acute  <- posteriors_1.2[,"b_Intercept"] + posteriors_1.2[,"b_habitatt"]
  t_acclim <- posteriors_1.2[,"b_Intercept"] + posteriors_1.2[,"b_habitatt"] + posteriors_1.2[,"b_typeacclim"] + posteriors_1.2[,"b_typeacclim:habitatt"]

# Q10 values for each category. Effect sizes are quite small really
   f_acute_Q10 <- exp(f_acute) ; mean(f_acute_Q10); quantile(f_acute_Q10, c(0.025, 0.975))
  f_acclim_Q10 <- exp(f_acclim); mean(f_acclim_Q10); quantile(f_acclim_Q10, c(0.025, 0.975))
   m_acute_Q10 <- exp(m_acute) ; mean(m_acute_Q10); quantile(m_acute_Q10, c(0.025, 0.975))
  m_acclim_Q10 <- exp(m_acclim); mean(m_acclim_Q10); quantile(m_acclim_Q10, c(0.025, 0.975))
   t_acute_Q10 <- exp(t_acute) ; mean(t_acute_Q10); quantile(t_acute_Q10, c(0.025, 0.975))
  t_acclim_Q10 <- exp(t_acclim); mean(t_acclim_Q10); quantile(t_acclim_Q10, c(0.025, 0.975))

# % change in mean acclimation relative to acute. Note that this is the change in two Q10 contrasts not the % difference between low and high temp (i.e., lnRR)
  # Calculate the mean lnRR for acclimation and acute, then calculate thir difference and make the relative change relative to acute to talk about % reduction in lnRRQ10 in relation to acute.
  change_f <- ((f_acclim - f_acute) / f_acute)*100; quantile(change_f, c(0.025, 0.975)) # 17% reductino in lnRRQ10
  change_m <- ((m_acclim - m_acute) / m_acute)*100; quantile(change_m, c(0.025, 0.975)) # 16% reuction in lnRRQ10
  change_t <- ((t_acclim - t_acute) / t_acute)*100; quantile(change_t, c(0.025, 0.975))
  avg_change <- (change_f + change_m + change_t) / 3; quantile(avg_change, c(0.025, 0.975)) # Could use weighted mean, but for now this seems fine.

####################################################
# Model 1.3's: Trait type varied by acclimation type
# but data is separated by habitat to simplify
####################################################
# Filter to different habitats
   lnRRQ10_data_m <- lnRRQ10_data %>% filter(habitat == "m") 
   lnRRQ10_data_f <- lnRRQ10_data %>% filter(habitat == "f") 
   lnRRQ10_data_t <- lnRRQ10_data %>% filter(habitat == "t")
  
    # Filter out antioxidant and NAs. For terrestrial, need to filter out endurance and max_MR because only 3 effect sizes
  lnRRQ10_data_m <- lnRRQ10_data_m %>% filter(!trait_category =="antiox") %>% filter(!is.na(c_accl_time))
  lnRRQ10_data_f <- lnRRQ10_data_f %>% filter(!is.na(c_accl_time))
  lnRRQ10_data_t <- lnRRQ10_data_t %>% filter(!is.na(c_accl_time)) %>% filter(!trait_category %in% c("endurance", "max_MR", "other"))
  
  # Prune tree
   tree_m <- tree_checks(lnRRQ10_data_m, tree = tree_lnrr, dataCol = "species_full", type = "prune")
   tree_f <- tree_checks(lnRRQ10_data_f, tree = tree_lnrr, dataCol = "species_full", type = "prune")
   tree_t <- tree_checks(lnRRQ10_data_t, tree = tree_lnrr, dataCol = "species_full", type = "prune")
   
   # cor matrices
   m_phylo <- vcv(tree_m, corr = TRUE)
       A_m <- vcv(tree_m, corr = FALSE)
   f_phylo <- vcv(tree_f, corr = TRUE)
       A_f <- vcv(tree_f, corr = FALSE)
   t_phylo <- vcv(tree_t, corr = TRUE)
       A_t <- vcv(tree_t, corr = FALSE)
    
if(rerun){
   # More realistic model with traits in marine species. Remove antioxidants because there are just too few effects
   model1.3_m <- metafor::rma.mv(effect_size ~  c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = m_phylo), dfs = "contain", 
                              test = "t", 
                              data = lnRRQ10_data_m)
  
  model1.3_m_het <- metafor::rma.mv(effect_size ~  c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | spp,
                                            ~1 | trait,
                                            ~1 + trait_category | obs),
                              R = list(species_full = m_phylo), 
                              struct = "HCS", rho = 0, dfs = "contain", 
                              test = "t", data = lnRRQ10_data_m)
  
  # Check k is the same for both models (yes) and check which model is best supported
    AICc1.3_m     <- AIC(model1.3_m) + AICc_correction(model1.3_m)
    AICc1.3_m_het <- AIC(model1.3_m_het) + AICc_correction(model1.3_m_het)
    # Clear support for this model. We'll go with this.
    AICc1.3_m - AICc1.3_m_het
  
  orchard_plot(model1.3_m_het, mod = "trait_category", at = list(type = c("acclim", "acute")), by = "type", xlab = TeX("$lnRR_{Q_{10}}$"), group = "spp", angle = 0)
  
  # Cannot model heterogeneous variance across traits if use sigma + TRUE, so just use obs.
   model1.3_m_bayes <- brms::brm(effect_size | se(sqrt(V)) ~  c_accl_time + type + trait_category + type:trait_category + (~1 | record_num) + (1 | gr(species_full, cov = A_m)) + (1 | spp) +(1|trait) + (1 + trait_category |gr(obs, cor = FALSE)),  data2 = list(A_m=A_m), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data_m)
  
    # More realistic model with traits in freshwater species
  model1.3_f <- metafor::rma.mv(effect_size ~  c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full =f_phylo), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_f)
  
  # Heteroscedastic variance model for freshwater
  model1.3_f_het <- metafor::rma.mv(effect_size ~  c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | spp,
                                            ~1 | trait,
                                            ~1 + trait_category | obs),
                              R = list(species_full =f_phylo), struct = "HCS", rho = 0, dfs = "contain", 
                              test = "t", data = lnRRQ10_data_f, method = "REML", control=list(iter.max=1000, rel.tol=1e-8))
  
  ## Check support for two models
  AICc_model1.3_f_het <- AIC(model1.3_f_het) + AICc_correction(model1.3_f_het) # Clearly better supported.
      AICc_model1.3_f <- AIC(model1.3_f) + AICc_correction(model1.3_f)
  delat_AICc_model1.3_f <- AICc_model1.3_f - AICc_model1.3_f_het
  
  # Run the Bayesian equivalent of the top supported model. 
   model1.3_f_bayes <- brms::brm(effect_size | se(sqrt(V)) ~  c_accl_time + type + trait_category + type:trait_category + (~1 | record_num) + (1 | gr(species_full, cov = A_f)) + (1 | spp) + (1|trait) + (1+trait_category|gr(obs, cor = FALSE)), data2 = list(A_f=A_f), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data_f)
   
    # More realistic model with traits in terrestrial species
  model1.3_t <- metafor::rma.mv(effect_size ~  c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full =t_phylo), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_t)
  
  # Heteroscedastic variance model for terrestrial
  model1.3_t_het <- metafor::rma.mv(effect_size ~  c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | spp,
                                            ~1 | trait,
                                            ~1 + trait_category | obs),
                              R = list(species_full =t_phylo), struct = "HCS", rho = 0, dfs = "contain", 
                              test = "t", data = lnRRQ10_data_t)
  
  # Check which model is better
    AICc_model1.3_t     <- AIC(model1.3_t) + AICc_correction(model1.3_t)
    AICc_model1.3_t_het <- AIC(model1.3_t_het) + AICc_correction(model1.3_t_het)
  
  #  Delta
    AICc_model1.3_t - AICc_model1.3_t_het
    
    
  # Bayesian model
   model1.3_t_bayes <- brms::brm(effect_size | se(sqrt(V)) ~  c_accl_time + type + trait_category + type:trait_category + (~1 | record_num) + (1 | gr(species_full, cov = A_t)) + (1 | spp) + (1 | trait) + (1 + trait_category | gr(obs, cor = FALSE)), data2 = list(A_t=A_t), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 8, thin = 5, iter = 3000, warmup = 1000, cores = 8, data = lnRRQ10_data_t)
                      
    # Save models
  saveRDS(model1.3_m, file = "./output/models/lnRRQ10_1.3m")
  saveRDS(model1.3_m_het, file = "./output/models/lnRRQ10_1.3m_het")
  saveRDS(model1.3_m_bayes, file = "./output/models/lnRRQ10_1.3_bayes_m")
  
  saveRDS(model1.3_f, file = "./output/models/lnRRQ10_1.3f")
  saveRDS(model1.3_f_het, file = "./output/models/lnRRQ10_1.3f_het")
  saveRDS(model1.3_f_bayes, file = "./output/models/lnRRQ10_1.3_bayes_f")
  
  saveRDS(model1.3_t, file = "./output/models/lnRRQ10_1.3t")
  saveRDS(model1.3_t_het, file = "./output/models/lnRRQ10_1.3t_het")
  saveRDS(model1.3_t_bayes, file = "./output/models/lnRRQ10_1.3_bayes_t")

  } else{
        model1.3_m <- readRDS("./output/models/lnRRQ10_1.3m")
    model1.3_m_het <- readRDS("./output/models/lnRRQ10_1.3m_het")
  model1.3_m_bayes <- readRDS("./output/models/lnRRQ10_1.3_bayes_m")
        model1.3_f <- readRDS("./output/models/lnRRQ10_1.3f")
    model1.3_f_het <- readRDS("./output/models/lnRRQ10_1.3f_het")
  model1.3_f_bayes <- readRDS("./output/models/lnRRQ10_1.3_bayes_f")
        model1.3_t <- readRDS("./output/models/lnRRQ10_1.3t")
    model1.3_t_het <- readRDS("./output/models/lnRRQ10_1.3t_het")
  model1.3_t_bayes <- readRDS("./output/models/lnRRQ10_1.3_bayes_t")
}

###########################################################
## Model 1.4 - whether chance between q10 depends on life stage and habita
###########################################################
rerun = FALSE
if(rerun){
  # More realistic model with 
  model1.4 <- metafor::rma.mv(effect_size ~  c_accl_time + type*habitat*life.hist, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor), dfs = "contain", 
                              test = "t", data = lnRRQ10_data)

  
   model1.4_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + type*habitat*life.hist + (~1 | record_num) + (1 | gr(species_full, cov = A)) + (1 | spp) + (1|trait), data2 = list(A=A), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data)
                                  
  # Save model1.4
  saveRDS(model1.4, file = "./output/models/lnRRQ10_1.4")
  saveRDS(model1.4_bayes, file = "./output/models/lnRRQ10_1.4_bayes")

  } else{
        model1.4 <- readRDS("./output/models/lnRRQ10_1.4")
  model1.4_bayes <- readRDS("./output/models/lnRRQ10_1.4_bayes")
}
 
#######################################################################
# Bayesian posteriors from model 1.4
#######################################################################
 # Create the data we want to make predcitions for. Just more intuitive
  newdata <- data.frame( c_accl_time = 0, 
                                type = as.factor(rep(c("acute", "acclim"))), 
                             habitat = as.factor(rep(c("m", "f", "t"), each = 4)), 
                           life.hist = as.factor(c("j", "a", "a", "j")))
  newdata$type  <- relevel(newdata$type, ref = "acute")

# Calculate the design matrix using this new data. Need to be careful here to check that the levels are set up the same as the posterior.
  X <- model.matrix(~c_accl_time + type*habitat*life.hist, data = newdata) 

# Extract posteriors
  posteriors_1_4 <- posterior_samples(model1.4_bayes, pars = "^b")

# Now we can do all the calculations in one shot.
         pred <- apply(t(posteriors_1_4), 2, function(x) as.matrix(X)%*%x)
     sum_pred <- apply(pred, 1, function(x) mean(x))
  sum_predL95 <- apply(pred, 1, function(x) quantile(x, 0.025))
  sum_predU95 <- apply(pred, 1, function(x) quantile(x, 0.975))

# Create a summary dataset. 
  newdata <- cbind(newdata, est = sum_pred, L = sum_predL95, u = sum_predU95)  

# Now, lets calculate the contrasts between acute and acclim for a and j within each habitat. We need to use pred for that because it's the entire posterior distribution
    # Marine 
        m_adult <- pred[2,] - pred[3,] # Posterior contrast between acclimation and acute effects for adult, marine species
        m_jeuv <-  pred[4,] - pred[1,] # Posterior contrast between acclimation and acute effects for j, marine species
    # Freshwater
        f_ad <- 4
        f_adult <- pred[2+f_ad,] - pred[3+f_ad,] # Posterior contrast between acclimation and acute effects for adult, freshwater species
        f_jeuv <-  pred[4+f_ad,] - pred[1+f_ad,] # Posterior contrast between acclimation and acute effects for j, freshwater species
    # Terrestrial
        t_ad <- 8
        t_adult <- pred[2+t_ad,] - pred[3+t_ad,] # Posterior contrast between acclimation and acute effects for adult, terrestrial species
        t_jeuv <-  pred[4+t_ad,] - pred[1+t_ad,] # Posterior contrast between acclimation and acute effects for j, terrestrial species

# Now, lets calculate the contrasts between acute a and j as well as acclim a and j within each habitat. We need to use pred for that because it's the entire posterior distribution
    # Marine 
         m_acute <-  pred[1,] - pred[3,] # Contrasts acute a and acute j values for marine species
        m_acclim <-  pred[4,] - pred[2,] # Contrasts acclim a and acute j values for marine species
    # Freshwater
            f_ad <- 4
         f_acute <- pred[1+f_ad,] - pred[3+f_ad,] # Contrasts acute a and acute j values for freshwater species
        f_acclim <-  pred[4+f_ad,] - pred[2+f_ad,] # Contrasts acclim a and acute j values for freshwater species
    # Terrestrial
            t_ad <- 8
         t_acute <- pred[1+t_ad,] - pred[3+t_ad,] # Contrasts acute a and acute j values for terrestrial species
        t_acclim <-  pred[4+t_ad,] - pred[2+t_ad,]  # Contrasts acclim a and acute j values for terrestrial species

  # Acute differences between a and j across all habitats
     acute_all <- c(m_acute, f_acute, t_acute); mean(acute_all); quantile(acute_all, c(0.025, 0.975)); pmcmc(acute_all)
    acclim_all <- c(m_acclim, f_acclim, t_acclim)

# Now lets do a quick. Note that I fixed up some design matrix issues which made acclim the ref level, which was wrong. These two lines of code should roughly match
#  mod_results(model1.4, mod = "type", at = list(c_accl_time = 0, habitat = "t"), group = "record_num",  by = "life.hist", data = lnRRQ10_data)
#  newdata %>% arrange(habitat, life.hist, type) %>% filter(habitat == "t")

####################################################
# Sensitivity analysis -- Do Acute Q10's (hot / cold) differ?
####################################################
 # Goal here is to test the assumption that acute Q10's are different or not
 lnRRQ10_data_acute <-  lnRRQ10_data %>% filter(grepl("acute", name))

 if(rerun){ 
    model1.s1 <- metafor::rma.mv(effect_size ~  c_accl_time + name, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_acute)
    saveRDS(model1.s1, file = "./output/models/model1.s1")
} else{
      model1.s1 <-  readRDS(file = "./output/models/model1.s1")
}

```

## **Results**

The final dataset included a total of `r f <- taxa_sum |> dplyr::filter(habitat == "f") |> dplyr::summarise(spp = sum(spp), k = sum(n)); f[1,1]` freshwater (fishes = `r taxa_sum |> dplyr::filter(habitat == "f" & class == "Actinopterygii") |> dplyr::summarise(sp = sum(spp))`, Molluscs = `r taxa_sum |> dplyr::filter(habitat == "f" & phylum == "Mollusca") |> dplyr::summarise(sp = sum(spp))`, Amphibians = `r taxa_sum |> dplyr::filter(habitat == "f" & class == "Amphibia") |> dplyr::summarise(sp = sum(spp))`, Reptiles = `r taxa_sum |> dplyr::filter(habitat == "f" & class == "Reptilia") |> dplyr::summarise(sp = sum(spp))`, Arthropods = `r taxa_sum |> dplyr::filter(habitat == "f" & phylum == "Arthropoda") |> dplyr::summarise(sp = sum(spp))`, and a single Crustacean and Nematode species), `r m <- taxa_sum |> dplyr::filter(habitat == "m") |> dplyr::summarise(spp = sum(spp), k = sum(n)); m[1,1]` marine (fishes = `r taxa_sum |> dplyr::filter(habitat == "m" & class %in% c("Actinopterygii", "Agnatha","Chondrichthyes")) |> dplyr::summarise(sp = sum(spp))`, Annelids = `r taxa_sum |> dplyr::filter(habitat == "m" & phylum == "Annelida") |> dplyr::summarise(sp = sum(spp))`, Molluscs = `r taxa_sum |> dplyr::filter(habitat == "m" & phylum == "Mollusca") |> dplyr::summarise(sp = sum(spp))`, Echinoderms = `r taxa_sum |> dplyr::filter(habitat == "m" & phylum == "Echinodermata") |> dplyr::summarise(sp = sum(spp))`, Reptiles = `r taxa_sum |> dplyr::filter(habitat == "m" & class == "Reptilia") |> dplyr::summarise(sp = sum(spp))`, Arthropods = `r taxa_sum |> dplyr::filter(habitat == "m" & phylum == "Arthropoda") |> dplyr::summarise(sp = sum(spp))`, and a single Crustacean and Cnidarian species), and `r t <- taxa_sum |> dplyr::filter(habitat == "t") |> dplyr::summarise(spp = sum(spp), k = sum(n)); t[1,1]` terrestrial species (Annelids = `r taxa_sum |> dplyr::filter(habitat == "t" & phylum == "Annelida") |> dplyr::summarise(sp = sum(spp))`, Molluscs = `r taxa_sum |> dplyr::filter(habitat == "t" & phylum == "Mollusca") |> dplyr::summarise(sp = sum(spp))`, Arthropods = `r taxa_sum |> dplyr::filter(habitat == "t" & phylum == "Arthropoda") |> dplyr::summarise(sp = sum(spp))`, Reptiles = `r taxa_sum |> dplyr::filter(habitat == "t" & class == "Reptilia") |> dplyr::summarise(sp = sum(spp))` and Amphibians = `r taxa_sum |> dplyr::filter(habitat == "t" & class == "Amphibia") |> dplyr::summarise(sp = sum(spp))` along with a single Tardigrade species) (@fig-1 A). We had more data on acute thermal responses (n = `r trimmed <- data_long2 |> dplyr::filter(grepl("lnRR", name) & !is.na(effect_size) & !is.na(V) & !V == 0); sum1 = trimmed |> dplyr::group_by(name, type) |> dplyr::summarise(n = dplyr::n()) |> dplyr::filter(type =="acute"); sum(sum1$n)`) compared to thermal responses after an acclimation period (n = `r sum2 <- trimmed |> dplyr::group_by(name, type) |> dplyr::summarise(n = dplyr::n()) |> dplyr::filter(type =="acclim"); sum2$n`) because both acclimation temperatures had separate acute responses (@fig-1). While the two acute $lnRR_{Q_{10}}$ effect sizes did differ significantly from each other, on average (Acute responses were higher for animals acclimated to high temperatures -- $\beta$ = `r model1.s1$b[3]`, 95% CI: `r model1.s1$ci.lb[3]` to `r model1.s1$ci.ub[3]`, $p_{MCMC}$ = `r p_value(model1.s1$pval[3])`), they were in the same direction and only differed by ~10%. As such, we averaged the two acute $lnRR_{Q_{10}}$ effect sizes in subsequent analyses.

Most of the effect size estimates came from measurements of metabolic rates (both resting and maximal -- $N_{species}$ = `r mr <- traits_all |> dplyr::filter(trait_category %in% c("rest_MR", "max_MR")); sum(mr[,"spp_n"])`, $N_{effects}$ = `r sum(mr[,"k"])`, considering acute and acclimation effects together), metabolic enzymes ($N_{species}$ = `r me <- traits_all |> dplyr::filter(trait_category %in% c("metabolic_enzyme", "ATPase")); sum(me[,"spp_n"])`, $N_{effects}$ = `r me <- traits_all |> dplyr::filter(trait_category %in% c("metabolic_enzyme", "ATPase")); sum(me[,"k"])`) and whole-organism performance traits (i.e., measures of speed and endurance -- $N_{species}$ = `r per <- traits_all |> dplyr::filter(trait_category %in% c("sprint", "endurance")); sum(per[,"spp_n"])`, $N_{effects}$ = `r per <- traits_all |> dplyr::filter(trait_category %in% c("sprint", "endurance")); sum(per[,"k"])`). 

### *Terrestrial and aquatic ectotherms differ in their capacity to acclimate but acclimation does not depend on life-history stage*

Overall, $lnRR_{Q_{10_{acclimation}}}$ decreased from $lnRR_{Q_{10_{acute}}}$ by only `r abs(mean(avg_change))`% across all habitats (95%CI: `r quantile(avg_change, c(0.025, 0.975))[1]` to `r quantile(avg_change, c(0.025, 0.975))[2]`%). Ectotherms in marine and freshwater environments showed partial compensation of physiological rates ([@fig-1]B) amounting to reduced $lnRR_{Q_{10_{acclimation}}}$ of `r abs(mean(change_f))`% (95% CI: `r quantile(change_f, c(0.025, 0.975))[1]` to `r quantile(change_f, c(0.025, 0.975))[2]`) in freshwater and `r abs(mean(change_m))`% (95% CI: `r quantile(change_m, c(0.025, 0.975))[1]` to `r quantile(change_m, c(0.025, 0.975))[2]`) in marine environments. In contrast, terrestrial ectotherms showed no acclimation (possibly even inverse acclimation) -- showing a `r abs(mean(change_t))`% increase in $lnRR_{Q_{10_{acclimation}}}$ (95% CI: `r quantile(change_t, c(0.025, 0.975))[1]` to `r quantile(change_t, c(0.025, 0.975))[2]`, [@fig-1]B). Considering acute responses of animals acclimated to high temperatures are generally slightly elevated compared to cold acclimated animals (~7%; $\beta$ = `r model1.s1$b[3]`, 95% CI: `r model1.s1$ci.lb[3]` to `r model1.s1$ci.ub[3]`, p `r p_value(model1.s1$pval[3])`), acclimatization is not likely going to provide adaptive benefits under climate change.

Nonetheless, effect heterogeneity was high (only `r mean(tot_i2)`% of the variance was the result of sampling variability, 95% CI: `r quantile(tot_i2, 0.025)[1]` to `r quantile(tot_i2, 0.975)[1]`%), with most variance being explained by the specific study and type of trait (Study: `r mean(stdy_i2)`% , 95% CI: `r quantile(stdy_i2, 0.025)[1]` to `r quantile(stdy_i2, 0.975)[1]`%; Trait Type: `r mean(trait_i2)`% , 95% CI: `r quantile(trait_i2, 0.025)[1]` to `r quantile(trait_i2, 0.975)[1]`%). Evolutionary relationships among taxa and species ecology explained little variation in acute and acclimation repsonses (Species: `r mean(spp_i2)`% , 95% CI: `r quantile(spp_i2, 0.025)[1]` to `r quantile(spp_i2, 0.975)[1]`%; Phylogeny: `r mean(phylo_i2)`% , 95% CI: `r quantile(phylo_i2, 0.025)[1]` to `r quantile(phylo_i2, 0.975)[1]`%).

Different trait categories showed different accclimation responses across habitat types, however, they mirrored patterns seen overall (see Supplement; @fig-2). Acclimation capacity also did not vary by life-stage given that there were no differences between $lnRR_{Q_{10_{acclimation}}}$ and $lnRR_{Q_{10_{acute}}}$ between adult and juveniles (@fig-cvrlh A-C) (Adult-Juvenile (Acute): `r mean(acute_all)`, 95% CI: `r quantile(acute_all, 0.025)[1]` to `r quantile(acute_all, 0.975)[1]`, $p_{MCMC}$ = `r pmcmc(acute_all)`; Adult-Juvenile (Acclimation): `r mean(acclim_all)`, 95% CI: `r quantile(acclim_all, 0.025)[1]` to `r quantile(acclim_all, 0.975)[1]`, $p_{MCMC}$ = `r pmcmc(acclim_all)`).

```{r, lncvrq10}
#| label: lncvrq10
#| echo: false
#| warning: false
#| error: false
#| include: false
#| cache: true

#############
  ## lnCVRQ10
#############
##################################################
  # Organise the data and prune tree
#################################################
  lnCVRQ10_data <- data_long2 %>% filter(grepl("lnCVR", name) & !is.na(effect_size) & !is.na(V) & !V == 0 & !is.na(acclim_period)) %>% 
                              mutate(spp = species_full, c_accl_time = acclim_period - mean(acclim_period, na.rm = TRUE))

# Check and prune tree
  tree_lncvr <- tree_checks(data = lnCVRQ10_data, tree = tree_p0.7, dataCol = "species_full", type = "prune")
  tree_checks(data = lnCVRQ10_data, tree = tree_lncvr, dataCol = "species_full", type = "check") # Good

# Create the phylo correlation matrix
  phylo_cor_CVR <- vcv(tree_lncvr, cor = TRUE)
          A_CVR <- vcv(tree_lncvr, cor = FALSE) # For bayes, need cov matrix

# Found some other data entry problems from old dataset. Sample sizes are decimals. That's not correct. It has to be an integer. Need to check. These are not the new data that we entered. 
  #hist(lnCVRQ10_data$V)

# Studies with big V, why? Check N
  lnCVRQ10_data %>% filter(V >= 2)

###################################################
  # Model 2.1: Intercept only model.
  # Used for heterogeneity analysis
###################################################
rerun = FALSE
if(rerun){
  model2.1 <- metafor::rma.mv(effect_size ~ 1, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_CVR), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data) 
  
  model2.1_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  1 + (~1 | record_num) + (1 | gr(species_full, cov = A_CVR)) + (1 | spp) + (1|trait), data2 = list(A_CVR=A_CVR), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnCVRQ10_data)
  
  # Save model1.1
  saveRDS(model2.1, file = "./output/models/lnCVRQ10_2.1")
  saveRDS(model2.1_bayes, file = "./output/models/lnCVRQ10_2.1_bayes")
} else{ 
        model2.1 <- readRDS("./output/models/lnCVRQ10_2.1")
  model2.1_bayes <- readRDS("./output/models/lnCVRQ10_2.1_bayes")
}

# Heterogeneity analysis
   w_cvr <- with(lnCVRQ10_data, 1/V) # weights
  sv_cvr <- sum(w_cvr*(dim(lnCVRQ10_data)[1]-1)) / (sum(w_cvr)^2 + sum(w_cvr^2))

# extract posterior sds, but square them to turn to variance
  posteriors_2.1 <- posterior_samples(model2.1_bayes, pars = c("^sd", "sigma"))^2
  colnames(posteriors_2.1) <- gsub("__Intercept", "", colnames(posteriors_2.1))
  colnames(posteriors_2.1) <- gsub("sd_", "", colnames(posteriors_2.1))
  
    res_cvr <- posteriors_2.1[,"sigma"]
   stdy_cvr <- posteriors_2.1[,"record_num"]
  phylo_cvr <- posteriors_2.1[,"species_full"]
    spp_cvr <- posteriors_2.1[,"spp"]
  trait_cvr <- posteriors_2.1[,"trait"]
  total_cvr <- phylo_cvr + spp_cvr + res_cvr + sv_cvr + stdy_cvr + trait_cvr
 
  # Calculate I2
     tot_i2_cvr <- (sv_cvr / total_cvr)*100    ; mean(tot_i2_cvr)  ; quantile(tot_i2_cvr, c(0.025, 0.975))
   phylo_i2_cvr <- (phylo_cvr / total_cvr)*100 ; mean(phylo_i2_cvr); quantile(phylo_i2_cvr, c(0.025, 0.975))
     spp_i2_cvr <- (spp_cvr / total_cvr)*100   ; mean(spp_i2_cvr)  ; quantile(spp_i2_cvr, c(0.025, 0.975))
    stdy_i2_cvr <- (stdy_cvr / total_cvr)*100  ; mean(stdy_i2_cvr) ; quantile(stdy_i2_cvr, c(0.025, 0.975))
   trait_i2_cvr <- (trait_cvr / total_cvr)*100 ; mean(trait_i2_cvr); quantile(trait_i2_cvr, c(0.025, 0.975))
     res_i2_cvr <- (res_cvr / total_cvr)*100   ; mean(res_i2_cvr)  ; quantile(res_i2_cvr, c(0.025, 0.975))
  
  # Table
     i2_lncvr <- data.frame(name = c("Phylogeny", "Species", "Study", "Trait"),
                           est = c(mean(phylo_i2_cvr),mean(spp_i2_cvr), mean(stdy_i2_cvr), mean(trait_i2_cvr)),
                           lci = c(quantile(phylo_i2_cvr, c(0.025, 0.975))[1], quantile(spp_i2_cvr, c(0.025, 0.975))[1],
                                   quantile(stdy_i2_cvr, c(0.025, 0.975))[1], quantile(trait_i2_cvr, c(0.025, 0.975))[1]),
                           uci = c(quantile(phylo_i2_cvr, c(0.025, 0.975))[2], quantile(spp_i2_cvr, c(0.025, 0.975))[2],
                                   quantile(stdy_i2_cvr, c(0.025, 0.975))[2], quantile(trait_i2_cvr, c(0.025, 0.975))[2]))  
  
###################################################
  # Model 2.2: Model controlling for acclimation time, 
  # type and habitat assuming type can vary by habitat
###################################################

if(rerun){
  # More realistic model 
  model2.2 <- metafor::rma.mv(effect_size ~  c_accl_time + type + habitat + type:habitat, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_CVR), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data)
  
   model2.2_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + type + habitat + type:habitat + (~1 | record_num) + (1 | gr(species_full, cov = A_CVR)) + (1 | spp) + (1|trait), data2 = list(A_CVR=A_CVR), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnCVRQ10_data)
                                  
  # Save model1.2
  saveRDS(model2.2, file = "./output/models/lnCVRQ10_2.2")
  saveRDS(model2.2_bayes, file = "./output/models/lnCVRQ10_2.2_bayes")

  } else{
        model2.2 <- readRDS("./output/models/lnCVRQ10_2.2")
  model2.2_bayes <- readRDS("./output/models/lnCVRQ10_2.2_bayes")
}

######################################################
  # Bayesian Contrasts
######################################################

  posteriors_2.2 <- posterior_samples(model2.2_bayes, pars = "^b")
  f_acute_cvr  <- posteriors_2.2[,"b_Intercept"]; pmcmc(f_acute_cvr)
  f_acclim_cvr <- posteriors_2.2[,"b_Intercept"] + posteriors_2.2[,"b_typeacclim"]
  m_acute_cvr  <- posteriors_2.2[,"b_Intercept"] + posteriors_2.2[,"b_habitatm"]
  m_acclim_cvr <- posteriors_2.2[,"b_Intercept"] + posteriors_2.2[,"b_habitatm"] + posteriors_2.2[,"b_typeacclim"] + posteriors_2.2[,"b_typeacclim:habitatm"]
  t_acute_cvr  <- posteriors_2.2[,"b_Intercept"] + posteriors_2.2[,"b_habitatt"]
  t_acclim_cvr <- posteriors_2.2[,"b_Intercept"] + posteriors_2.2[,"b_habitatt"] + posteriors_2.2[,"b_typeacclim"] + posteriors_2.2[,"b_typeacclim:habitatt"]

# We'll take the marginalised mean for each type as there is no difference between acclimation and acute really except for in freshwater, but this effect size is so tiny. It's a 10% reduction at high temps and acclim is only a 2% reduction in variance at high temps.
  # First get sample sizes
    N <- lnCVRQ10_data %>% group_by(habitat, type) %>% summarise(n=n())
  
  # Calculated weighted mean by sample size. 
    f_cvr_mean <- (f_acute_cvr * N[1,"n"][[1]] + f_acclim_cvr * N[2,"n"][[1]]) / sum(N[1:2, "n"]); pmcmc(f_cvr_mean)
    m_cvr_mean <- (m_acute_cvr * N[3,"n"][[1]] + m_acclim_cvr * N[3,"n"][[1]]) / sum(N[3:4, "n"]); pmcmc(m_cvr_mean)
    t_cvr_mean <- (t_acute_cvr * N[5,"n"][[1]] + t_acclim_cvr * N[6,"n"][[1]]) / sum(N[5:6, "n"]); pmcmc(t_cvr_mean)
  
  # Lets now convert these to a %
    f_cvr_mean_ef  <- abs((exp(f_cvr_mean) - 1)*100) # ~8.4% reduction
    m_cvr_mean_ef  <- abs((exp(m_cvr_mean) - 1)*100) # ~15% reduction
    t_cvr_mean_ef  <- abs((exp(t_cvr_mean) - 1)*100) # ~30% reduction

###################################################
  # Model 2.3: Model controlling for acclimation time, 
  # type and trait category assuming type can vary by habitat
###################################################

if(rerun){
  # More realistic model 
  model2.3 <- metafor::rma.mv(effect_size ~  c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_CVR), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data)
  
   model2.3_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + type + trait_category + type:trait_category + (~1 | record_num) + (1 | gr(species_full, cov = A_CVR)) + (1 | spp) + (1|trait), data2 = list(A_CVR=A_CVR), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnCVRQ10_data)
                                  
  # Save model1.2
  saveRDS(model2.3, file = "./output/models/lnCVRQ10_2.3")
  saveRDS(model2.3_bayes, file = "./output/models/lnCVRQ10_2.3_bayes")


  # We can also run subsets for each habitat
   tree_m_cvr <- tree_checks(lnCVRQ10_data %>% filter(habitat == "m"), tree = tree_lnrr, dataCol = "species_full", type = "prune")
   tree_f_cvr <- tree_checks(lnCVRQ10_data %>% filter(habitat == "f"), tree = tree_lnrr, dataCol = "species_full", type = "prune")
   tree_t_cvr <- tree_checks(lnCVRQ10_data %>% filter(habitat == "t"), tree = tree_lnrr, dataCol = "species_full", type = "prune")
   
   # cor matrices
   m_phylo_cvr <- vcv(tree_m_cvr, corr = TRUE)
       A_m_cvr <- vcv(tree_m_cvr, corr = FALSE)
   f_phylo_cvr <- vcv(tree_f_cvr, corr = TRUE)
       A_f_cvr <- vcv(tree_f_cvr, corr = FALSE)
   t_phylo_cvr <- vcv(tree_t_cvr, corr = TRUE)
       A_t_cvr <- vcv(tree_t_cvr, corr = FALSE)

  model2.3f <- metafor::rma.mv(effect_size ~  c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = f_phylo_cvr), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data  %>% filter(habitat == "f"))

  saveRDS(model2.3f, file = "./output/models/lnCVRQ10_model2.3f")

  model2.3m <- metafor::rma.mv(effect_size ~  c_accl_time + type + trait_category + type:trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = m_phylo_cvr), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data  %>% filter(habitat == "m"))
  saveRDS(model2.3m, file = "./output/models/lnCVRQ10_model2.3m")

  # NOte that we need to drop interaction for terestrial as it's not able to estimate. 
  model2.3t <- metafor::rma.mv(effect_size ~  c_accl_time + type + trait_category, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = t_phylo_cvr), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data  %>% filter(habitat == "t"))
  saveRDS(model2.3t, file = "./output/models/lnCVRQ10_model2.3t")

  } else{
        model2.3 <- readRDS("./output/models/lnCVRQ10_2.3")
        model2.3f <- readRDS("./output/models/lnCVRQ10_model2.3f")
        model2.3m <- readRDS("./output/models/lnCVRQ10_model2.3m")
        model2.3t <- readRDS("./output/models/lnCVRQ10_model2.3t")
  model2.3_bayes <- readRDS("./output/models/lnCVRQ10_2.3_bayes")
}

###################################################
  # Model 2.4: Model controlling for acclimation time, 
  # type and life history stage assuming type can vary by habitat
###################################################

if(rerun){
  # More realistic model 
  model2.4 <- metafor::rma.mv(effect_size ~  c_accl_time + type*habitat*life.hist, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_CVR), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data)
  
   model2.4_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + type*habitat*life.hist + (~1 | record_num) + (1 | gr(species_full, cov = A_CVR)) + (1 | spp) + (1|trait), data2 = list(A_CVR=A_CVR), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnCVRQ10_data)
                                  
  # Save model
  saveRDS(model2.4, file = "./output/models/lnCVRQ10_2.4")
  saveRDS(model2.4_bayes, file = "./output/models/lnCVRQ10_2.4_bayes")

  } else{
        model2.4 <- readRDS("./output/models/lnCVRQ10_2.4")
  model2.4_bayes <- readRDS("./output/models/lnCVRQ10_2.4_bayes")
}

```

```{r, fig-1}
#| label: fig-1
#| fig-cap: "Taxonomic distribution of acute and acclimation $Q_{10}$ estimates across major habitats. **A)** Phylogenetic distribution of taxa contained within the data. The total number of acute and acclimation type Q10 effect sizes are highlighted as well as whether the taxa is marine, freshwater or terrestrial. Silouettes are representative taxa of major clades within the tree. **B)** Acute and Acclimation $lnRR_{Q_{10}}$ across marine, freshwater, and terrestrial environments. **C)** $lnCVR_{Q_{10}}$ across traits for marine, freshwater and terrestrial systems. Note there were no differences between acute and acclimation $Q_{10}$ types. k = total number of effect size estimates while the numbers in brackets indicate the number of species."
#| warning: false
#| echo: false


# Load and plot Figure 1. Note that this figure was derived using 3 separate code chunks described below. Figures were exported, imported into Adobe Illustrator for minor formatting changes and grid organisation. 
  fig1 <- image_read("./output/figures/fig1_final.png")
  fig1
##################
  # Figure 1a plot
##################
   # Map data to tree. Just one variable for now
      d <- ggtree(tree, layout="circular") %<+% tree_data 

      # Plot the tree
      scales1 <- c("#053061", "#D1E5F0", "#67001F")
      scales2 <- c("#053061", "#E7E0DB", "#67001F")
      p1 <- d + 
            #geom_tiplab(size=2, offset = 10) + 
            geom_tippoint(aes(color=habitat), size = 2) +
            labs(color = "Habitat") + 
            scale_colour_manual(values = scales1)
      
      # Create the data matrix that can be used to plot data as a heatmap around the phylogeny
      matrix_data <- as.data.frame(data_wide %>%
                  mutate(trait_category = ifelse(trait_category %in% 
                                                   c("ATPase", "mito_leak", "mito_oxidation"), "Mito. Function", trait_category)) %>%
                  mutate(trait_category = ifelse(trait_category %in% c("endurance", "sprint"), "Performance", trait_category))    %>%
                  mutate(trait_category = ifelse(trait_category %in% c("muscle", "cardiac"), "Muscle Function", trait_category))  %>%
                  mutate(trait_category = ifelse(trait_category %in% c("rest_MR", "max_MR"), "Metabolic Rate", trait_category))   %>%
                  group_by(species_full, trait_category)   %>% 
                  summarise(n = n())                       %>% 
                  spread(trait_category, n, fill = 0))
      
      row.names(matrix_data) <- matrix_data$species_full
      matrix_data <- matrix_data[,c(2:8)]
      
      colnames(matrix_data)[c(1,3,6)] <- c("Antioxidants", "Metabolic Enzymes", "Other")
      
      # Alternatively, summarise total effect sizes per species for acute and acclimation
      matrix_data2 <- data_long %>% filter(grepl("lnRR_Q10", name)) %>% 
                      group_by(species_full, type) %>% 
                      summarise(n = n()) %>% 
                      spread(type, n, fill = 0) %>% data.frame()
                     # mutate(acclim = as.character(cut(acclim, breaks = c(0,15, 20, 25, 30, 40, 50))),
                      #        acute = as.character(cut(acute, breaks = c(0,15, 20, 25, 30, 40, 50)))) 
                      
      row.names(matrix_data2) <- matrix_data2$species_full
      matrix_data2 <- matrix_data2[,2:3]
      
      
      # Plot a heatmap of N for each trait around the phylogeny.
   phylo <-   gheatmap(p1, data.matrix(matrix_data2), offset = 0,  colnames = FALSE, 
               colnames_position="bottom", legend_title = "N", 
               colnames_angle=360, colnames_offset_y = 0, colnames_offset_x = -1.5, 
               hjust=0, font.size=3, width = 0.35) + 
                scale_fill_viridis(alpha = 0.6) + labs(fill="# of Effects")
   
ggsave(filename = "fig1a_unedited.pdf", path = "./output/figures/", phylo, device = "pdf", width = 10, height = 9, units = "in")

##################
  # Figure 1b plot
##################
col <- c("#0871B9", "#F3B40D", "#1BB908")

  k_lnrr <- manual_extract(model1.2, mod = "habitat", group = "record_num", exclude = NULL)

p1.2 <- orchaRd::orchard_plot(model1.2, mod = "habitat", group  = "record_num", at = list(type = c("acute", "acclim")), by = "type", weights = "prop", xlab = TeX("$lnRR_{Q_{10}}$"), angle = 45, legend.pos = "top.left", trunk.size = 8, branch.size = 2) + scale_x_discrete(labels = c("T" = "Terrestrial","M" = "Marine" ,"F" = "Freshwater")) +
  theme(legend.direction = "vertical") +
  
  annotate("text", x = 1.5, y = 0, 
         label =TeX(paste0("$\\beta = $", round(model1.2$b[3], 2), "[", round(model1.2$ci.lb[3], 2)," to ", round(model1.2$ci.ub[3], 2), "] ")), hjust = 0, size = 6) + 
  annotate("text", x = 1.20, y = 1.4, 
         label =paste0(round(mean(change_f), 3), "%"), hjust = 0, size = 6) + labs(shape = "Type") +
  annotate("text", x = 1.20, y = -0.8, label = "P < 0.001", hjust = 0, size = 6) + 
  
  annotate("text", x = 2.5, y = 0, 
         label =TeX(paste0("$\\beta = $", round(mean(m_acclim - m_acute), 2), "[", round(quantile(m_acclim - m_acute, 0.025), 2)," to ", round(quantile(m_acclim - m_acute, 0.975),2), "] ")), hjust = 0, size = 6) + 
  annotate("text", x = 2.20, y = 1.4, 
         label =paste0(round(mean(change_m), 3), "%"), hjust = 0, size = 6) +
  annotate("text", x = 2.20, y = -0.8, label = "P = 0.01", hjust = 0, size = 6) +
  
  annotate("text", x = 3.5, y = 0, 
         label =TeX(paste0("$\\beta = $", round(mean(t_acclim - t_acute), 2), "[", round(quantile(t_acclim - t_acute, 0.025), 2)," to ", round(quantile(t_acclim - t_acute, 0.975),2), "] ")), hjust = 0, size = 6) + 
  annotate("text", x = 3.20, y = 1.4, 
         label =paste0(round(mean(change_t), 3), "%"), hjust = 0, size = 6) +
  annotate("text", x = 3.20, y = -0.8, label = "P = 0.36", hjust = 0, size = 6) + 
  
  scale_fill_manual(values = c(col)) + ylim(-0.8, 2) +  annotate("text", label= paste0("k = ", k_lnrr$k, " (", k_lnrr$sdy, ")"), x = c(0.8, 1.8, 2.8), y = 1.7, size = 5)
    
  p1.2 <- p1.2 + theme_classic() + theme(axis.title  = element_text(size = 24),
        axis.text = element_text(size = 15), legend.title = element_text(size = 15),
                               legend.text = element_text(size = 15),
                               title = element_text(size = 24))


  ggsave(p1.2, filename = "./output/figures/fig1.png", width = 9.1, height = 9.2, device = "png")
   
##################
  # Figure 1c plot
################## 
  # Clear from the model that there really is no difference between the change in variance for acute or acclimation CVR. But, there is a clear reduction in between individual variance for terrestrial species. As temperature get hotter then the variance in physiological rates decreases. This is not true of aquatic systems. 

  k_cvr <- manual_extract(model2.2, mod = "habitat", group = "record_num", exclude = NULL)

  x1 = 1.4
  x2 = 2.4
  x3 = 3.4

  p2 <- orchard_plot(model2.2, xlab = TeX("$lnCVR_{Q_{10}}$"), mod = "habitat", group  = "record_num", weights = "prop", angle = 45, trunk.size = 8, branch.size = 2, k.pos = "none") +
              scale_x_discrete(labels = c("T" = "Terrestrial","M" = "Marine" ,"F" = "Freshwater")) + 
  
  annotate("text", x = x1, y = -2, 
           label =TeX(paste0("$\\mu = $", round(mean(f_cvr_mean), 3), "[", round(quantile(f_cvr_mean, 0.025), 2)," to ", round(quantile(f_cvr_mean, 0.975),2), "] ")), hjust = 0, size = 6) + 
  annotate("text", x = x1-0.15, y = -1.5, label = paste0("P = ", round(pmcmc(f_cvr_mean), digit = 2)), hjust = 0, size = 6) + 
  annotate("text", x = x1-0.15, y = 1, 
           label =paste0(round(mean(exp(f_cvr_mean)-1)*100, 2), "%"), hjust = 0, size = 6) + 
  
  annotate("text", x = x2, y = -2, 
           label =TeX(paste0("$\\mu = $", round(mean(m_cvr_mean), 3), "[", round(quantile(m_cvr_mean, 0.025), 2)," to ", round(quantile(m_cvr_mean, 0.975),2), "] ")), hjust = 0, size = 6) + 
  annotate("text", x = x2-0.15, y = -1.5, label = paste0("P = ", round(pmcmc(m_cvr_mean), digit = 2)), hjust = 0, size = 6) +
  annotate("text", x = x2-0.15, y = 1, 
           label =paste0(round(mean(exp(m_cvr_mean)-1)*100, 2), "%"), hjust = 0, size = 6) + 
  
  annotate("text", x = x3, y = -2, 
           label =TeX(paste0("$\\mu = $", round(mean(t_cvr_mean), 3), "[", round(quantile(t_cvr_mean, 0.025), 2)," to ", round(quantile(t_cvr_mean, 0.975),2), "] ")), hjust = 0, size = 6) + 
  annotate("text", x = x3-0.15, y = 1, 
           label =paste0(round(mean(exp(t_cvr_mean)-1)*100, 2), "%"), hjust = 0, size = 6) + labs(shape = "Type") +
    annotate("text", x = x3-0.15, y = -1.5, label = paste0("P = ", round(pmcmc(t_cvr_mean), digit = 3)), hjust = 0, size = 6) + scale_fill_manual(values = c(col)) + ylim(-2, 2) + 
    annotate("text", label= paste0("k = ", k_cvr$k, " (", k_cvr$sdy, ")"), x = c(0.8, 1.8, 2.8), y = 1.3, size = 5) 
   
  p2 <- p2 + theme_classic() + theme(axis.title  = element_text(size = 24),
                                       axis.text = element_text(size = 15),
                                       legend.title = element_text(size = 15),
                               legend.text = element_text(size = 15),
                               title = element_text(size = 24))
   
  ggsave(p2, filename = "./output/figures/fig2.png", width = 9.3, height = 8.8)

```

### *Reduced variation in physiological rates in terrestrial and marine ectotherms*

Relative variance in physiological rates, as captured by $lnCVR_{Q_{10}}$, showed a decrease across all habitat types but was especially pronouced in terrestrial and marine ectotherms. Overall, there was a `r mean(t_cvr_mean_ef)`% (95% CI: `r quantile(t_cvr_mean_ef, 0.025)[1]` to `r quantile(t_cvr_mean_ef, 0.975)[1]`, $p_{MCMC}$ = `r pmcmc(t_cvr_mean)`) reduction in relative physiologcial rate variance for terrestrial ectotherms and a `r mean(m_cvr_mean_ef)`% (95% CI: `r quantile(m_cvr_mean_ef, 0.025)[1]` to `r quantile(m_cvr_mean_ef, 0.975)[1]`, $p_{MCMC}$ = `r pmcmc(m_cvr_mean)`) reduction in relative variation for marine ectotherms when temperatures increase by 10$^\circ$C. In contrast, freshwater ectotherms exhibited a much smaller reduction in relative physiological rate variance at high temperatures (`r mean(f_cvr_mean_ef)`%, 95% CI: `r quantile(f_cvr_mean_ef, 0.025)[1]` to `r quantile(f_cvr_mean_ef, 0.975)[1]`, $p_{MCMC}$ = `r pmcmc(f_cvr_mean)`). 

The total proportion of heterogeneity in $lnCVR_{Q_{10}}$ was lower compared to $lnRR_{Q_{10}}$ ($I^2_{sv}$ = `r mean(tot_i2_cvr)`, 95% CI: `r quantile(tot_i2_cvr, 0.025)` to `r quantile(tot_i2_cvr, 0.975)`), with most variation being driven by between study and trait differences (see Supplement;  @fig-s3). Each life-history stage exhibited the same pattern of variance change in each of the habitats (@fig-cvrlh). While traits did differ in whether they exhibited a reduction in variation in physiological rates at high temperatures reduced variance was prominant for resting metabolic rates and sprint speed (@fig-cvrtrait). 

```{r, fig-cvrlh}
#| label: fig-cvrlh
#| fig-cap: "Estimated mean acclimation and acute $lnRR_{Q_{10}}$ (A-C) and $lnCVR_{Q_{10}}$ (D-F) for adult and juevenile life-history stages for Marine (A & D), Freshwater (B & E) and Terrestrial (C & F) ectotherms. k = total number of effect size estimates while the numbers in brackets indicate the number of species. Thick bars indicate 95% confidence intervals and thin bars indicate 95% prediction intervals. Raw data for both adult and jeunvile life-history stages also presented but point are not separated by type for ease of presentation."
#| echo: false
#| warning: false

add_theme  <- function(){theme(axis.title  = element_text(size = 24),
                               axis.text.y = element_text(size = 15),
                               axis.text.x = element_text(size = 15),
                              legend.title = element_text(size = 15),
                               legend.text = element_text(size = 15),
                               title = element_text(size = 24))}
branch.size = 2
trunk.size = 5

p1 <- orchard_plot(model1.4, mod = "type", at = list(c_accl_time = 0, habitat = "m"), group = "record_num", xlab = TeX("$lnRR_{Q_{10}}$"), condition.lab = "Life Stage", by = "life.hist",  g = FALSE, k = FALSE, legend.pos = "top.left", angle = 45, branch.size = branch.size, trunk.size = trunk.size) + labs(title = "Marine") + add_theme() + ylim(-1, 1.8)

p2 <- orchard_plot(model1.4, mod = "type", at = list(c_accl_time = 0, habitat = "f"), group = "record_num", xlab = TeX("$lnRR_{Q_{10}}$"), condition.lab = "Life Stage", by = "life.hist",  g = FALSE, k = FALSE, branch.size = branch.size, trunk.size = trunk.size, angle = 45,)+ labs(title = "Freshwater")  + add_theme() + theme(legend.position = "none", axis.text.y = element_blank()) + ylim(-1, 1.8)

p3 <- orchard_plot(model1.4, mod = "type", at = list(c_accl_time = 0, habitat = "t"), group = "record_num", xlab = TeX("$lnRR_{Q_{10}}$"), condition.lab = "Life Stage", by = "life.hist",  g = FALSE, k = FALSE, branch.size = branch.size, trunk.size = trunk.size, angle = 45)+ labs(title = "Terrestrial") + add_theme() + theme(legend.position = "none", axis.text.y = element_blank()) +  ylim(-1, 1.8)

p1_cvr <- orchard_plot(model2.4, mod = "type", at = list(c_accl_time = 0, habitat = "m"), group = "record_num", xlab = TeX("$lnCVR_{Q_{10}}$"), condition.lab = "Life Stage", by = "life.hist",  g = FALSE, k = FALSE, legend.pos = "top.left", angle = 45, branch.size = branch.size, trunk.size = trunk.size) + ylim(c(-2, 2.2)) + add_theme() + ylim(-2.5, 2.5)

p2_cvr <- orchard_plot(model2.4, mod = "type", at = list(c_accl_time = 0, habitat = "f"), group = "record_num", xlab = TeX("$lnCVR_{Q_{10}}$"), condition.lab = "Life Stage", by = "life.hist",  g = FALSE, k = FALSE, branch.size = branch.size, trunk.size = trunk.size)  + add_theme() + theme(legend.position = "none", axis.text.y = element_blank()) + ylim(-2.5, 2.5)

p3_cvr <- orchard_plot(model2.4, mod = "type", at = list(c_accl_time = 0, habitat = "t"), group = "record_num", xlab = TeX("$lnCVR_{Q_{10}}$"), condition.lab = "Life Stage", by = "life.hist",  g = FALSE, k = FALSE, branch.size = branch.size, trunk.size = trunk.size)+ add_theme() + theme(legend.position = "none", axis.text.y = element_blank()) + ylim(-2.5, 2.5)

fig4 <-(p1 | p2 | p3) / (p1_cvr | p2_cvr | p3_cvr) + plot_annotation(tag_levels = "A", tag_suffix = ")")
ggsave(fig4, filename = "./output/figures/fig4_lh.pdf", width = 19, height = 12, device = "pdf")

fig4 <- magick::image_read("./output/figures/fig4_lh.pdf")
fig4
```

```{r, wildlnRR10}
#| label: wildlnRR10
#| cache: true
#| include: false
#| echo: false
#| warning: false
#| 
#######################################
  ## lnRRQ10 from Wild Populations ##
#######################################
##################################################
  # Organise the data and prune tree
##################################################

# Bring in Climate data
climate <- read.csv("./output/climate_data/ERA5_air_and_SST_timeseries.csv")

# Create a match column.
climate2 <- climate %>% mutate(match = interaction(Species, Latitude, Longitude)) %>% dplyr::select(Species, Latitude, Longitude, match, cv, sd, mean, acf_lag1, acf_all)

# Subset the data
lnRRQ10_data_wild <- data_long2 %>% filter(grepl("lnRR", name) & !is.na(effect_size) & !is.na(V) & !V == 0 & !is.na(acclim_period) & source == "w") %>% 
                              mutate(spp = species_full, c_accl_time = acclim_period - mean(acclim_period, na.rm = TRUE), match = interaction(spp, lat, long))

# Now, join climate data to full data. This will give us all the climate variability data for each site across time
lnRRQ10_data_wild <- left_join(lnRRQ10_data_wild, climate2, by = "match")

# Check and prune tree
tree_lnrr_wild <- tree_checks(data = lnRRQ10_data_wild, tree = tree_p0.7, dataCol = "species_full", type = "prune")
tree_checks(data = lnRRQ10_data_wild, tree = tree_lnrr, dataCol = "species_full", type = "check") # Good

# Create the phylo correlation matrix
phylo_cor_wild <- vcv(tree_lnrr_wild, cor = TRUE)
        A_wild <- vcv(tree_lnrr_wild, cor = FALSE) # For bayes, need cov matrix

# Scale data
        lnRRQ10_data_wild <- lnRRQ10_data_wild %>% mutate(cv_c = scale(cv),
                                                          acf_all_c = scale(acf_all))

###################################################
  # Model 3.2: Model controlling for acclimation time, 
  # type and habitat assuming type can vary by habitat
###################################################
rerun = FALSE
if(rerun){
  # More realistic model with 
  model3.2          <- metafor::rma.mv(effect_size ~ c_accl_time + type + habitat + type:habitat, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild)
  
   model3.2_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + type + habitat + type:habitat + (~1 | record_num) + (1 | gr(species_full, cov = A_wild)) + (1 | spp) + (1|trait), data2 = list(A_wild=A_wild), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data_wild)
                                  
  # Save model3.2
  saveRDS(model3.2, file = "./output/models/lnRRQ10_3.2")
  saveRDS(model3.2_bayes, file = "./output/models/lnRRQ10_3.2_bayes")

  } else{
        model3.2 <- readRDS("./output/models/lnRRQ10_3.2")
  model3.2_bayes <- readRDS("./output/models/lnRRQ10_3.2_bayes")
}

####################################################
  ## Model 3.2: Bayesian Contrasts
###################################################
  posteriors_3.2 <- posterior_samples(model3.2_bayes, pars = "^b")
  f_acute_wild  <- posteriors_3.2[,"b_Intercept"]
  f_acclim_wild <- posteriors_3.2[,"b_Intercept"] + posteriors_3.2[,"b_typeacclim"]
  m_acute_wild  <- posteriors_3.2[,"b_Intercept"] + posteriors_3.2[,"b_habitatm"]
  m_acclim_wild <- posteriors_3.2[,"b_Intercept"] + posteriors_3.2[,"b_habitatm"] + posteriors_3.2[,"b_typeacclim"] + posteriors_3.2[,"b_typeacclim:habitatm"]
  t_acute_wild  <- posteriors_3.2[,"b_Intercept"] + posteriors_3.2[,"b_habitatt"]
  t_acclim_wild <- posteriors_3.2[,"b_Intercept"] + posteriors_3.2[,"b_habitatt"] + posteriors_3.2[,"b_typeacclim"] + posteriors_3.2[,"b_typeacclim:habitatt"]

# Q10 values for each category. Effect sizes are quite small really
   f_acute_Q10_wild <- exp(f_acute_wild) ; mean(f_acute_Q10_wild)
  f_acclim_Q10_wild <- exp(f_acclim_wild); mean(f_acclim_Q10_wild)
   m_acute_Q10_wild <- exp(m_acute_wild) ; mean(f_acute_Q10_wild)
  m_acclim_Q10_wild <- exp(m_acclim_wild); mean(f_acclim_Q10_wild)
   t_acute_Q10_wild <- exp(t_acute_wild) ; mean(t_acute_Q10_wild)
  t_acclim_Q10_wild <- exp(t_acclim_wild); mean(t_acclim_Q10_wild)

# % change in acclimation on log scale; relative to the acute measurements
  change_f_wild <- ((f_acclim_wild - f_acute_wild) / f_acute_wild) *100; quantile(change_f_wild, c(0.025, 0.975))
  change_m_wild <- ((m_acclim_wild - m_acute_wild) / m_acute_wild) *100; quantile(change_m_wild, c(0.025, 0.975))
  change_t_wild <- ((t_acclim_wild - t_acute_wild) / t_acute_wild) *100; quantile(change_t_wild, c(0.025, 0.975))

####################################################
  # Model 3.3: Model environmental variability by acute 
  #  acclim 
####################################################
  rerun = FALSE
if(rerun){
  # More realistic model with 
  model3.3          <- metafor::rma.mv(effect_size ~ c_accl_time + cv_c + type + type:cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild)
  
   model3.3_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + cv_c + type + type:cv_c + (~1 | record_num) + (1 | gr(species_full, cov = A_wild)) + (1 | spp) + (1|trait), data2 = list(A_wild=A_wild), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data_wild)
                                  
  # Save model3.3
  saveRDS(model3.3, file = "./output/models/lnRRQ10_3.3")
  saveRDS(model3.3_bayes, file = "./output/models/lnRRQ10_3.3_bayes")

  } else{
        model3.3 <- readRDS("./output/models/lnRRQ10_3.3")
  model3.3_bayes <- readRDS("./output/models/lnRRQ10_3.3_bayes")
}
  
################################################################
  # Model 3.4: Environmental autocorrelation model by acute/acclim
################################################################
if(rerun){
  # More realistic model with 
  model3.4          <- metafor::rma.mv(effect_size ~ c_accl_time + acf_all_c + type + type:acf_all_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild)
  
   model3.4_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + acf_all_c + type + type:acf_all_c + (~1 | record_num) + (1 | gr(species_full, cov = A_wild)) + (1 | spp) + (1|trait), data2 = list(A_wild=A_wild), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data_wild)
                                  
  # Save model3.3
  saveRDS(model3.4, file = "./output/models/lnRRQ10_3.4")
  saveRDS(model3.4_bayes, file = "./output/models/lnRRQ10_3.4_bayes")

  } else{
        model3.4 <- readRDS("./output/models/lnRRQ10_3.4")
  model3.4_bayes <- readRDS("./output/models/lnRRQ10_3.4_bayes")
}
  
################################################################
  # Model 3.5: Environmental variability  model
################################################################
if(rerun){
  # More realistic model with 
  model3.5          <- metafor::rma.mv(effect_size ~ c_accl_time + cv_c + type, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild)
  
   model3.5_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + cv_c + type + (~1 | record_num) + (1 | gr(species_full, cov = A_wild)) + (1 | spp) + (1|trait) + (1|obs), data2 = list(A_wild=A_wild), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data_wild)
                                  
  # Save model3.5
  saveRDS(model3.5, file = "./output/models/lnRRQ10_3.5")
  saveRDS(model3.5_bayes, file = "./output/models/lnRRQ10_3.5_bayes")

  } else{
        model3.5 <- readRDS("./output/models/lnRRQ10_3.5")
  model3.5_bayes <- readRDS("./output/models/lnRRQ10_3.5_bayes")
}
  
################################################################
  # Model 3.6: Environmental autocorrelation model
################################################################
if(rerun){
  # More realistic model with 
  model3.6          <- metafor::rma.mv(effect_size ~ c_accl_time + acf_all_c + type, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild)
  
   model3.6_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + acf_all_c + type + (~1 | record_num) + (1 | gr(species_full, cov = A_wild)) + (1 | spp) + (1|trait), data2 = list(A_wild=A_wild), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnRRQ10_data_wild)
                                  
  # Save model3.6
  saveRDS(model3.6, file = "./output/models/lnRRQ10_3.6")
  saveRDS(model3.6_bayes, file = "./output/models/lnRRQ10_3.6_bayes")

  } else{
        model3.6 <- readRDS("./output/models/lnRRQ10_3.6")
  model3.6_bayes <- readRDS("./output/models/lnRRQ10_3.6_bayes")
}
  
################################################################
  # Model 3.7: Environmental variability and autocorrelation model
################################################################
  
if(rerun){
  # More realistic model with 
  model3.7          <- metafor::rma.mv(effect_size ~ c_accl_time + acf_all_c + cv_c + type, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild)
  
   model3.7_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + acf_all_c + cv_c + type + (~1 | record_num) + (1 | gr(species_full, cov = A_wild)) + (1 | spp) + (1|trait), data2 = list(A_wild=A_wild), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data_wild)
                                  
  # Save model3.7
  saveRDS(model3.7, file = "./output/models/lnRRQ10_3.7")
  saveRDS(model3.7_bayes, file = "./output/models/lnRRQ10_3.7_bayes")

  } else{
        model3.7 <- readRDS("./output/models/lnRRQ10_3.7")
  model3.7_bayes <- readRDS("./output/models/lnRRQ10_3.7_bayes")
}
  
############################################################################################
# Model 3.8: Acclimatization lnRRQ10 only. Test if environmental predictability explains 
# differently in each habitat
############################################################################################  
  lnRRQ10_data_wild_acclim <- lnRRQ10_data_wild %>%  filter(type == "acclim")
  
  # Create the phylo correlation matrix
  
  # Check and prune tree
tree_lnrr_wild_acclim <- tree_checks(data = lnRRQ10_data_wild_acclim, tree = tree_p0.7, dataCol = "species_full", type = "prune")
tree_checks(data = lnRRQ10_data_wild_acclim, tree = tree_lnrr_wild_acclim, dataCol = "species_full", type = "check")

phylo_cor_wild_acclim <- vcv(tree_lnrr_wild_acclim, cor = TRUE)
        A_wild_acclim <- vcv(tree_lnrr_wild_acclim, cor = FALSE) # For bayes, need cov matrix
  
if(rerun){
  # More realistic model with 
  model3.8  <- metafor::rma.mv(effect_size ~ c_accl_time + acf_all_c + habitat + habitat:acf_all_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim)
  
   model3.8_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + acf_all_c + habitat + habitat:acf_all_c + (~1 | record_num) + (1 | gr(species_full, cov = A_wild_acclim)) + (1 | spp) + (1|trait), data2 = list(A_wild_acclim=A_wild_acclim), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data_wild_acclim)
                                  
  # Save model3.8
  saveRDS(model3.8, file = "./output/models/lnRRQ10_3.8")
  saveRDS(model3.8_bayes, file = "./output/models/lnRRQ10_3.8_bayes")

  } else{
        model3.8 <- readRDS("./output/models/lnRRQ10_3.8")
  model3.8_bayes <- readRDS("./output/models/lnRRQ10_3.8_bayes")
}

#################################################
### Bayesian Slopes from Model 3.8
#################################################
 posteriors3.8 <- posterior_samples(model3.8_bayes, "^b") 
        
    slope_f_3.8 <- posteriors3.8[,"b_acf_all_c"]; pmcmc(slope_f_3.8); quantile(slope_f_3.8, c(0.025, 0.975))
    slope_m_3.8 <- posteriors3.8[,"b_acf_all_c"] + posteriors3.8[,"b_acf_all_c:habitatm"]; pmcmc(slope_m_3.8); quantile(slope_m_3.8, c(0.025, 0.975))
    slope_t_3.8 <- posteriors3.8[,"b_acf_all_c"] + posteriors3.8[,"b_acf_all_c:habitatt"]; pmcmc(slope_t_3.8); quantile(slope_t_3.8, c(0.025, 0.975))
    
############################################################################################
# Model 3.9: Acclimatization lnRRQ10 only. Test if environmental variance explains 
# differently in each habitat
############################################################################################          
        
if(rerun){
  # More realistic model with 
  model3.9  <- metafor::rma.mv(effect_size ~ c_accl_time + cv_c + habitat + habitat:cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim)
  
   model3.9_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + cv_c + habitat + habitat:cv_c + (~1 | record_num) + (1 | gr(species_full, cov = A_wild_acclim)) + (1 | spp) + (1|trait), data2 = list(A_wild_acclim=A_wild_acclim), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnRRQ10_data_wild_acclim)
                                  
  # Save model3.8
  saveRDS(model3.9, file = "./output/models/lnRRQ10_3.9")
  saveRDS(model3.9_bayes, file = "./output/models/lnRRQ10_3.9_bayes")

  } else{
        model3.9 <- readRDS("./output/models/lnRRQ10_3.9")
  model3.9_bayes <- readRDS("./output/models/lnRRQ10_3.9_bayes")
}

#################################################
### Bayesian Slopes from Model 3.9
#################################################
 posteriors <- posterior_samples(model3.9_bayes, "^b") 
        
    slope_f <-     posteriors[,"b_cv_c"]; pmcmc(slope_f); mean(slope_f); quantile(slope_f, c(0.025, 0.975))
    slope_m <-     posteriors[,"b_cv_c"] + posteriors[,"b_cv_c:habitatm"]; pmcmc(slope_m); quantile(slope_m, c(0.025, 0.975))
    slope_t <-     posteriors[,"b_cv_c"] + posteriors[,"b_cv_c:habitatt"]; pmcmc(slope_t); quantile(slope_t, c(0.025, 0.975))
   
##################################################
    # Model 3.8, 3.9 and 3.10 - Habitat subset
##################################################
    # Subset data to habitat
    lnRRQ10_data_wild_acclim_t <- lnRRQ10_data_wild_acclim %>% filter(habitat == "t")
    lnRRQ10_data_wild_acclim_f <- lnRRQ10_data_wild_acclim %>% filter(habitat == "f")
    lnRRQ10_data_wild_acclim_m <- lnRRQ10_data_wild_acclim %>% filter(habitat == "m")

if(rerun){
    # Terrestrial Models
    model3.8_t  <- metafor::rma.mv(effect_size ~ c_accl_time + acf_all_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_t)
    saveRDS(model3.8_t, "./output/models/model3.8_t")

    model3.9_t  <- metafor::rma.mv(effect_size ~ c_accl_time + cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_t)
    saveRDS(model3.9_t, "./output/models/model3.9_t")
                   
        # Model just quickly tests if we are missing an important interaction. It may not necessarily be just about the variability. We could have variable sites, but a variance site that has some predictability vs a variable site without predictability are two different things. We want predictability AND variance
    model3.10_t  <- metafor::rma.mv(effect_size ~ c_accl_time + cv_c + acf_all_c + acf_all_c:cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_t)
     saveRDS(model3.10_t, "./output/models/model3.10_t")
    # Freshwater Models
    model3.8_f  <- metafor::rma.mv(effect_size ~ c_accl_time + acf_all_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_f)
    saveRDS(model3.8_f, "./output/models/model3.8_f")
    
    model3.9_f  <- metafor::rma.mv(effect_size ~ c_accl_time + cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_f)

    saveRDS(model3.9_f, "./output/models/model3.9_f")

       # Model just quickly tests if we are missing an important interaction. It may not necessarily be just about the variability. We could have variable sites, but a variance site that has some predictability vs a variable site without predictability are two different things. We want predictability AND variance 
    
     model3.10_f  <- metafor::rma.mv(effect_size ~ c_accl_time + cv_c + acf_all_c + acf_all_c:cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_f)
      saveRDS(model3.10_f, "./output/models/model3.10_f")
    # Marine Models
      model3.8_m  <- metafor::rma.mv(effect_size ~ c_accl_time + acf_all_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_m)
        saveRDS(model3.8_m, "./output/models/model3.8_m")

    model3.9_m  <- metafor::rma.mv(effect_size ~ c_accl_time + cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_m)
    saveRDS(model3.9_m, "./output/models/model3.9_m")
    # Model just quickly tests if we are missing an important interaction. It may not necessarily be just about the variability. We could have variable sites, but a variance site that has some predictability vs a variable site without predictability are two different things. We want predictability AND variance
    
    model3.10_m  <- metafor::rma.mv(effect_size ~ c_accl_time + cv_c + acf_all_c + acf_all_c:cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnRRQ10_data_wild_acclim_m)
    saveRDS(model3.10_m, "./output/models/model3.10_m")
  } else {
     model3.8_t <- readRDS("./output/models/model3.8_t")
     model3.9_t <- readRDS("./output/models/model3.9_t")
    model3.10_t <- readRDS("./output/models/model3.10_t")
     model3.8_f <- readRDS("./output/models/model3.8_f")
     model3.9_f <- readRDS("./output/models/model3.9_f")
    model3.10_f <- readRDS("./output/models/model3.10_f")
     model3.9_m <- readRDS("./output/models/model3.9_m")
    model3.10_m <- readRDS("./output/models/model3.10_m")
     model3.8_m <- readRDS("./output/models/model3.8_m")
}

       r2_t <- r2_ml(model3.9_t)[1]    
```

```{r wildlncvr}
#| label: wildlncvr
#| cache: true
#| include: false
#| echo: false
#| warning: false
#| 
#######################################
  ## lnCVRQ10 from Wild Populations ##
#######################################
##################################################
  # Organise the data and prune tree
##################################################

# Bring in  historial climate data
climate <- read.csv("./output/climate_data/ERA5_air_and_SST_timeseries.csv")

# Create a match column.
climate2 <- climate %>% mutate(match = interaction(Species, Latitude, Longitude)) %>% dplyr::select(Species, Latitude, Longitude, match, cv, sd, mean, acf_lag1, acf_all)

# Populations and species?
pop_spp_w <- climate2[complete.cases(climate2),]

# Subset the data
lnCVRQ10_data_wild <- data_long2 %>% filter(grepl("lnCVR", name) & !is.na(effect_size) & !is.na(V) & !V == 0 & !is.na(acclim_period) & source == "w") %>% 
                              mutate(spp = species_full, 
                                     c_accl_time = acclim_period - mean(acclim_period, na.rm = TRUE), 
                                     match = interaction(spp, lat, long))

# Now, join climate data to full data. This will give us all the climate variability data for each site across time
lnCVRQ10_data_wild <- left_join(lnCVRQ10_data_wild, climate2, by = "match")

# Look at the environment details across different habitats. Seems very similar. *** Check with ALEX ***
  lnCVRQ10_data_wild  %>% group_by(habitat) %>% summarise(mean(cv), mean(acf_all))

# Check and prune tree
tree_lncvr_wild <- tree_checks(data = lnCVRQ10_data_wild, tree = tree_p0.7, dataCol = "species_full", type = "prune")
tree_checks(data = lnCVRQ10_data_wild, tree = tree_lncvr_wild, dataCol = "species_full", type = "check") # Good

# Create the phylo correlation matrix
phylo_cor_wild_cvr <- vcv(tree_lncvr_wild, cor = TRUE)
        A_wild_cvr <- vcv(tree_lncvr_wild, cor = FALSE) # For bayes, need cov matrix

# Scale environment variables
    lnCVRQ10_data_wild <- lnCVRQ10_data_wild %>% mutate(     cv_c = scale(cv),
                                                        acf_all_c = scale(acf_all))

###################################################
  # Model 4.2: Model controlling for acclimation time, 
  # type and habitat assuming type can vary by habitat
###################################################
rerun = FALSE
if(rerun){
  # More realistic model with 
  model4.2          <- metafor::rma.mv(effect_size ~ c_accl_time + type + habitat + type:habitat, V = V,
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_cvr), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data_wild)
  
   model4.2_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + type + habitat + type:habitat + (~1 | record_num) + (1 | gr(species_full, cov = A_wild_cvr)) + (1 | spp) + (1|trait), data2 = list(A_wild_cvr=A_wild_cvr), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnCVRQ10_data_wild)
                                  
  # Save model3.2
  saveRDS(model4.2, file = "./output/models/lnCVRQ10_4.2")
  saveRDS(model4.2_bayes, file = "./output/models/lnCVRQ10_4.2_bayes")

  } else{
        model4.2 <- readRDS("./output/models/lnCVRQ10_4.2")
  model4.2_bayes <- readRDS("./output/models/lnCVRQ10_4.2_bayes")
}

####################################################
  ## Model 4.2: Bayesian Contrasts
###################################################
  posteriors_4.2 <- posterior_samples(model4.2_bayes, pars = "^b")
  f_acute_wild_cvr  <- posteriors_4.2[,"b_Intercept"]
  f_acclim_wild_cvr <- posteriors_4.2[,"b_Intercept"] + posteriors_4.2[,"b_typeacclim"]
  m_acute_wild_cvr  <- posteriors_4.2[,"b_Intercept"] + posteriors_4.2[,"b_habitatm"]
  m_acclim_wild_cvr <- posteriors_4.2[,"b_Intercept"] + posteriors_4.2[,"b_habitatm"] + posteriors_4.2[,"b_typeacclim"] + posteriors_4.2[,"b_typeacclim:habitatm"]
  t_acute_wild_cvr  <- posteriors_4.2[,"b_Intercept"] + posteriors_4.2[,"b_habitatt"]
  t_acclim_wild_cvr <- posteriors_4.2[,"b_Intercept"] + posteriors_4.2[,"b_habitatt"] + posteriors_4.2[,"b_typeacclim"] + posteriors_4.2[,"b_typeacclim:habitatt"]

# CVRQ10 values for each category.
   f_acute_Q10_wild_cvr <- exp(f_acute_wild_cvr) ; mean(f_acute_Q10_wild_cvr)
  f_acclim_Q10_wild_cvr <- exp(f_acclim_wild_cvr); mean(f_acclim_Q10_wild_cvr)
   m_acute_Q10_wild_cvr <- exp(m_acute_wild_cvr) ; mean(f_acute_Q10_wild_cvr)
  m_acclim_Q10_wild_cvr <- exp(m_acclim_wild_cvr); mean(f_acclim_Q10_wild_cvr)
   t_acute_Q10_wild_cvr <- exp(t_acute_wild_cvr) ; mean(t_acute_Q10_wild_cvr)
  t_acclim_Q10_wild_cvr <- exp(t_acclim_wild_cvr); mean(t_acclim_Q10_wild_cvr)

# % change in acclimation on log scale
  change_f_wild_cvr <- ((f_acclim_wild_cvr - f_acute_wild_cvr) / f_acute_wild_cvr)*100; quantile(change_f_wild_cvr, c(0.025, 0.975))
  change_m_wild_cvr <- ((m_acclim_wild_cvr - m_acute_wild_cvr) /m_acute_wild_cvr)*100; quantile(change_m_wild_cvr, c(0.025, 0.975))
  change_t_wild_cvr <- ((t_acclim_wild_cvr - t_acute_wild_cvr)/t_acute_wild_cvr)*100; quantile(change_t_wild_cvr, c(0.025, 0.975))

####################################################
  # Model 4.3: Model environmental variability by acute/acclim
####################################################
rerun = FALSE
if(rerun){
  # More realistic model with 
  model4.3          <- metafor::rma.mv(effect_size ~ c_accl_time + cv_c + type + type:cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_cvr), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data_wild)
  
   model4.3_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + cv_c + type + type:cv_c + (~1 | record_num) + (1 | gr(species_full, cov = A_wild_cvr)) + (1 | spp) + (1|trait), data2 = list(A_wild_cvr=A_wild_cvr), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnCVRQ10_data_wild)
                                  
  # Save model4.3
  saveRDS(model4.3, file = "./output/models/lnCVRQ10_4.3")
  saveRDS(model4.3_bayes, file = "./output/models/lnCVRQ10_4.3_bayes")

  } else{
        model4.3 <- readRDS("./output/models/lnCVRQ10_4.3")
  model4.3_bayes <- readRDS("./output/models/lnCVRQ10_4.3_bayes")
}
  
################################################################
  # Model 4.4: Environmental autocorrelation model by acute/acclim
################################################################
if(rerun){
  # More realistic model with 
  model4.4          <- metafor::rma.mv(effect_size ~ c_accl_time + acf_all_c + type + type:acf_all_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_cvr), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data_wild)
  
   model4.4_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + acf_all_c + type + type:acf_all_c + (~1 | record_num) + (1 | gr(species_full, cov = A_wild_cvr)) + (1 | spp) + (1|trait), data2 = list(A_wild_cvr=A_wild_cvr), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnCVRQ10_data_wild)
                                  
  # Save model3.3
  saveRDS(model4.4, file = "./output/models/lnCVRQ10_4.4")
  saveRDS(model4.4_bayes, file = "./output/models/lnCVRQ10_4.4_bayes")

  } else{
        model4.4 <- readRDS("./output/models/lnCVRQ10_4.4")
  model4.4_bayes <- readRDS("./output/models/lnCVRQ10_4.4_bayes")
}
  
################################################################
  # Model 4.5: Environmental variability
################################################################
if(rerun){
  # More realistic model with 
  model4.5          <- metafor::rma.mv(effect_size ~ c_accl_time + cv_c + type, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_cvr), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data_wild)
  
   model4.5_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + cv_c + type + (~1 | record_num) + (1 | gr(species_full, cov = A_wild_cvr)) + (1 | spp) + (1|trait), data2 = list(A_wild_cvr=A_wild_cvr), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnCVRQ10_data_wild)
                                  
  # Save model4.5
  saveRDS(model4.5, file = "./output/models/lnCVRQ10_4.5")
  saveRDS(model4.5_bayes, file = "./output/models/lnCVRQ10_4.5_bayes")

  } else{
        model4.5 <- readRDS("./output/models/lnCVRQ10_4.5")
  model4.5_bayes <- readRDS("./output/models/lnCVRQ10_4.5_bayes")
}
  
################################################################
  # Model 4.6: Environmental autocorrelation model 
################################################################
if(rerun){
  # More realistic model with 
  model4.6          <- metafor::rma.mv(effect_size ~ c_accl_time + acf_all_c + type, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_cvr), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data_wild)
  
   model4.6_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + acf_all_c + type + (~1 | record_num) + (1 | gr(species_full, cov = A_wild_cvr)) + (1 | spp) + (1|trait), data2 = list(A_wild_cvr=A_wild_cvr), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnCVRQ10_data_wild)
                                  
  # Save model4.6
  saveRDS(model4.6, file = "./output/models/lnCVRQ10_4.6")
  saveRDS(model4.6_bayes, file = "./output/models/lnCVRQ10_4.6_bayes")

  } else{
        model4.6 <- readRDS("./output/models/lnCVRQ10_4.6")
  model4.6_bayes <- readRDS("./output/models/lnCVRQ10_4.6_bayes")
}
  
################################################################
  # Model 4.7: Environmental autocorrelation and variability
################################################################
if(rerun){
  # More realistic model with 
  model4.7          <- metafor::rma.mv(effect_size ~ c_accl_time + acf_all_c + cv_c + type, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_cvr), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data_wild)
  
   model4.7_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + acf_all_c + cv_c + type + (~1 | record_num) + (1 | gr(species_full, cov = A_wild_cvr)) + (1 | spp) + (1|trait) + (1|obs), data2 = list(A_wild_cvr=A_wild_cvr), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnCVRQ10_data_wild)
                                  
  # Save model4.7
  saveRDS(model4.7, file = "./output/models/lnCVRQ10_4.7")
  saveRDS(model4.7_bayes, file = "./output/models/lnCVRQ10_4.7_bayes")

  } else{
        model4.7 <- readRDS("./output/models/lnCVRQ10_4.7")   ### DIFFERENT 
  #model4.7_bayes <- readRDS("./output/models/lnCVRQ10_4.7_bayes")
}
  
############################################################################################
  # Model 4.8: Acclimatization lnCVRQ10 only. Test if environmental predictability explains 
  # differently in each habitat
############################################################################################  
  lnCVRQ10_data_wild_acclim <- lnCVRQ10_data_wild %>%  filter(type == "acclim")
  
  # Create the phylo correlation matrix
  
  # Check and prune tree
tree_lncvr_wild_acclim <- tree_checks(data = lnCVRQ10_data_wild_acclim, tree = tree_p0.7, dataCol = "species_full", type = "prune")
tree_checks(data = lnCVRQ10_data_wild_acclim, tree = tree_lncvr_wild_acclim, dataCol = "species_full", type = "check")

phylo_cor_wild_acclim <- vcv(tree_lncvr_wild_acclim, cor = TRUE)
        A_wild_acclim <- vcv(tree_lncvr_wild_acclim, cor = FALSE) # For bayes, need cov matrix
  
  
if(rerun){
  # More realistic model with 
  model4.8  <- metafor::rma.mv(effect_size ~ c_accl_time + acf_all_c + habitat + habitat:acf_all_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data_wild_acclim)
  
   model4.8_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + acf_all_c + habitat + habitat:acf_all_c + (~1 | record_num) + (1 | gr(species_full, cov = A_wild_acclim)) + (1 | spp) + (1|trait), data2 = list(A_wild_acclim=A_wild_acclim), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnCVRQ10_data_wild_acclim)
                                  
  # Save model4.8
  saveRDS(model4.8, file = "./output/models/lnRRQ10_4.8")
  saveRDS(model4.8_bayes, file = "./output/models/lnRRQ10_4.8_bayes")

  } else{
        model4.8 <- readRDS("./output/models/lnRRQ10_4.8")
  model4.8_bayes <- readRDS("./output/models/lnRRQ10_4.8_bayes")
}
     
#################################################
### Bayesian Slopes from Model 4.8
#################################################
 posteriors4.8 <- posterior_samples(model4.8_bayes, "^b") 
        
    slope_f_4.8 <- posteriors4.8[,"b_acf_all_c"]; mean(slope_f_4.8); pmcmc(slope_f_4.8); quantile(slope_f_4.8, c(0.025, 0.975))
    slope_m_4.8 <- posteriors4.8[,"b_acf_all_c"] + posteriors4.8[,"b_acf_all_c:habitatm"]; mean(slope_m_4.8); pmcmc(slope_m_4.8); quantile(slope_m_4.8, c(0.025, 0.975))
    slope_t_4.8 <- posteriors4.8[,"b_acf_all_c"] + posteriors4.8[,"b_acf_all_c:habitatt"]; mean(slope_t_4.8); pmcmc(slope_t_4.8); quantile(slope_t_4.8, c(0.025, 0.975))
    
############################################################################################
# Model 4.9: Acclimatization lnCVRQ10 only. Test if environmental variance explains 
# differently in each habitat
############################################################################################          
        
if(rerun){
  # More realistic model with 
  model4.9  <- metafor::rma.mv(effect_size ~ c_accl_time + cv_c + habitat + habitat:cv_c, V = V,
                                       random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | trait,
                                            ~1 | spp,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_wild_acclim), dfs = "contain", 
                              test = "t", data = lnCVRQ10_data_wild_acclim)
  
   model4.9_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + cv_c + habitat + habitat:cv_c + (~1 | record_num) + (1 | gr(species_full, cov = A_wild_acclim)) + (1 | spp) + (1|trait), data2 = list(A_wild_acclim=A_wild_acclim), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnCVRQ10_data_wild_acclim)
                                  
  # Save model3.8
  saveRDS(model4.9, file = "./output/models/lnRRQ10_4.9")
  saveRDS(model4.9_bayes, file = "./output/models/lnRRQ10_4.9_bayes")

  } else{
        model4.9 <- readRDS("./output/models/lnRRQ10_4.9")
  model4.9_bayes <- readRDS("./output/models/lnRRQ10_4.9_bayes")
}
                  
#################################################
### Bayesian Slopes from Model 4.9
#################################################
 posteriors4.9 <- posterior_samples(model4.9_bayes, "^b") 
        
    slope_f_4.9 <- posteriors4.9[,"b_cv_c"]; mean(slope_f_4.9); pmcmc(slope_f_4.9); quantile(slope_f_4.9, c(0.025, 0.975))
    slope_m_4.9 <- posteriors4.9[,"b_cv_c"] + posteriors4.9[,"b_cv_c:habitatm"]; mean(slope_m_4.9); pmcmc(slope_m_4.9); quantile(slope_m_4.9, c(0.025, 0.975))
    slope_t_4.9 <- posteriors4.9[,"b_cv_c"] + posteriors4.9[,"b_cv_c:habitatt"]; mean(slope_t_4.9); pmcmc(slope_t_4.9); quantile(slope_t_4.9, c(0.025, 0.975))

```

### *Past climate does not influence acclimation capacity or expected change in variance*

Thermal variability (i.e., $CV$) and predictability a population experienced in its past did not explain acclimation capacity or changes in physiological rate variance among terrestrial, marine or freshwater populations (@fig-4; @fig-5). 

```{r, fig-4}
#| label: fig-4
#| fig-align: center
#| fig-cap: "Predicted mean (thick black line) $lnRR_{Q_{10}}$ as a function of the Thermal Coefficient of Variation (CV) (A) and thermal predictability (B) for wild populations across marine, freshwater and terrestrial habitats. Dashed lines indicate 95% confidence intervals and dotted lines indicate 95% prediction intervals. Model slope ($\\beta$) along with the 95% CI and $p_{MCMC}$ value are shown for each habitat."

size_axis = 18
# CV
dat_text <- data.frame(label = c(text(slope_f), text(slope_m), text(slope_t)),
                      label2 = c(text(slope_f, b = FALSE), text(slope_m,b = FALSE), text(slope_t,b = FALSE)),
                      p = c(p_text(slope_f), p_text(slope_m), p_text(slope_t)),
                      title = c("Freshwater", "Marine", "Terrestrial"), 
                      condition = c("f", "m", "t"),
                      x = rep(1.2, 3),
                      y = rep(-1.2, 3))
 
 col <- c("#0871B9", "#F3B40D", "#1BB908")
p8.1 <- bubble_plot(model3.9, mod = "cv_c", group = "record_num", by = "habitat", ylab = TeX("$lnRR_{Q_{10}}$"), xlab = "Thermal Coefficient of Variation (CV)", condition.nrow = 1, k = FALSE) + 
theme_classic() + 
scale_fill_manual(values = c(col)) + 
geom_text(data = dat_text, aes(x = x, y = y, label = label), size = 5) + 
geom_text(data = dat_text, aes(x = x, y = y-0.3, label = label2), size = 5) +
geom_text(data = dat_text, aes(x = x, y = y-0.6, label = p), size = 5) +
geom_text(data = dat_text, aes(x = x, y = y+4, label = title), size = 5) + 
theme(legend.position = "none", strip.background = element_blank(), strip.text = element_blank(),axis.text = element_text(size = size_axis), axis.title = element_text(size = size_axis)) 

  # ACF
dat_text2 <- data.frame(label = c(text(slope_f_3.8), text(slope_m_3.8), text(slope_t_3.8)),
                      label2 = c(text(slope_f_3.8, b = FALSE), text(slope_m_3.8,b = FALSE), text(slope_t_3.8,b = FALSE)),
                      p = c(p_text(slope_f_3.8), p_text(slope_m_3.8), p_text(slope_t_3.8)),
                      condition = c("f", "m", "t"),
                      x = rep(-2.8, 3),
                      y = rep(-1.2, 3))

p8.2 <- bubble_plot(model3.8, mod = "acf_all_c", group = "record_num", by = "habitat",  ylab = TeX("$lnRR_{Q_{10}}$"), xlab = "Thermal Predictability", condition.nrow = 1, k = FALSE) + 
theme_classic() + 
scale_fill_manual(values = c(col)) + 
geom_text(data = dat_text2, aes(x = x+1, y = y, label =label), size = 5) + 
geom_text(data = dat_text2, aes(x = x+1, y = y-0.3, label =label2), size = 5) +
geom_text(data = dat_text2, aes(x = x+1, y = y-0.65, label = p), size = 5) +
theme(legend.position = "bottom", 
      strip.background = element_blank(), 
      strip.text = element_blank(), 
      axis.text = element_text(size = size_axis), 
      axis.title = element_text(size = size_axis),
      legend.text = element_text(size = 16),
      legend.title = element_text(size = 16))

p8.1.2 <- (p8.1 / p8.2) + plot_annotation(tag_levels = "A", tag_suffix = ")") & theme(plot.tag = element_text(size = 20))

ggsave(p8.1.2, width = 8.2, height = 8.7, filename = "./output/figures/fig8.png")

  p8.1.2 <- image_read("./output/figures/fig8.png")
  p8.1.2 
```

```{r, fig-5}
#| label: fig-5
#| fig-align: center
#| fig-cap: "Predicted mean (thick black line) $lnCVR_{Q_{10}}$ as a function of the Thermal Coefficient of Variation (CV) (A) and thermal predictability (B) for wild populations across marine, freshwater and terrestrial habitats. Dashed lines indicate 95% confidence intervals and dotted lines indicate 95% prediction intervals. Model slope ($\\beta$) along with the 95% CI and $p_{MCMC}$ value are shown for each habitat."

size_axis = 18
# CV
dat_text <- data.frame(label = c(text(slope_f_4.9), text(slope_m_4.9), text(slope_t_4.9)),
                      label2 = c(text(slope_f_4.9, b = FALSE), text(slope_m_4.9,b = FALSE), text(slope_t_4.9,b = FALSE)),
                      p = c(p_text(slope_f_4.9), p_text(slope_m_4.9), p_text(slope_t_4.9)),
                      title = c("Freshwater", "Marine", "Terrestrial"), 
                      condition = c("f", "m", "t"),
                      x = rep(1.2, 3),
                      y = rep(-4, 3))
 
 col <- c("#0871B9", "#F3B40D", "#1BB908")
p9.1 <- bubble_plot(model4.9, mod = "cv_c", group = "record_num", by = "habitat",  ylab = TeX("$lnCVR_{Q_{10}}$"), xlab = "Thermal Coefficient of Variation (CV)", condition.nrow = 1, k = FALSE) + 
theme_classic() + 
scale_fill_manual(values = c(col)) + 
geom_text(data = dat_text, aes(x = x, y = y, label = label), size = 5) + 
geom_text(data = dat_text, aes(x = x, y = y-1, label = label2), size = 5) +
geom_text(data = dat_text, aes(x = x, y = y-2, label = p), size = 5) +
geom_text(data = dat_text, aes(x = x, y = y+10, label = title, size = 5)) + 
theme(legend.position = "none", strip.background = element_blank(), strip.text = element_blank(),axis.text = element_text(size = size_axis), axis.title = element_text(size = size_axis)) 

  # ACF
dat_text2 <- data.frame(label = c(text(slope_f_4.8), text(slope_m_4.8), text(slope_t_4.8)),
                      label2 = c(text(slope_f_4.8, b = FALSE), text(slope_m_4.8,b = FALSE), text(slope_t_4.8,b = FALSE)),
                      p = c(p_text(slope_f_4.8), p_text(slope_m_4.8), p_text(slope_t_4.8)),
                      condition = c("f", "m", "t"),
                      x = rep(-2.8, 3),
                      y = rep(-4, 3))

p9.2 <- bubble_plot(model4.8, mod = "acf_all_c", group = "record_num", by = "habitat",  ylab = TeX("$lnCVR_{Q_{10}}$"), xlab = "Thermal Predictability", condition.nrow = 1, k = FALSE) + 
theme_classic() + 
scale_fill_manual(values = c(col)) + 
geom_text(data = dat_text2, aes(x = x+1, y = y, label = label), size = 5) + 
geom_text(data = dat_text2, aes(x = x+1, y = y-0.6, label = label2), size = 5) +
geom_text(data = dat_text2, aes(x = x+1, y = y-1.2, label = p), size = 5) +
theme(legend.position = "bottom", 
      strip.background = element_blank(), 
      strip.text = element_blank(), 
      axis.text = element_text(size = size_axis), 
      axis.title = element_text(size = size_axis),
      legend.text = element_text(size = 16),
      legend.title = element_text(size = 16))

p9.1.2 <- (p9.1 / p9.2) + plot_annotation(tag_levels = "A", tag_suffix = ")") & theme(plot.tag = element_text(size = 20))

ggsave(p9.1.2, width = 8.2, height = 8.7, filename = "./output/figures/fig9.png")

  p9.1.2 <- image_read("./output/figures/fig9.png")
  p9.1.2 
```

### Changes in physiological rate variance under climate change

```{r, global}
#| label: global
#| echo: false
#| include: false

# Here, we want to make global predcitions, at the lat/long in the data for how the opportunity of selection is expected to change with climate change. How can we do this? Q10 effects already have temperature controls within the effect size. So, what we want is to be able to understand how Q10 changes with latitude and longitude. Once we know that, we an extarct how temperature is expected to change from our current levels to future levels. This will be in degrees C. Then, assuming no plasticity and evolution (big assumption) we can get a baseline change in variance for each site. We first need to adjust the predcited Q10 value so that it's at 1C temperaure, not 10, we can do this through this formula Qt = (Q10 / 10)*T, where T is the temperature change in C. This will adjust the predcited Q10 value to the change in 1 degree C. We can then multiply this by the temperature change expected at that location to get the % change in variance or acure/acclim response. We can then plot these globally. 

#############################
rerun = FALSE
if(rerun){
  
  # Model lat and long. Need to exclude missing acclimdation data. That will make it easier to create predcitions and explore the model fit.
    
   model5_bayes <- brms::brm(effect_size | se(sqrt(V)) ~  c_accl_time + type*habitat + t2(Longitude, Latitude) + (~1 | record_num) + (1 | gr(species_full, cov = A_wild_cvr)) + (1 | spp) + (1|trait) + (1|obs), data2 = list(A_wild_cvr=A_wild_cvr), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.99, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnCVRQ10_data_wild[complete.cases(lnCVRQ10_data_wild$c_accl_time),])
         
  saveRDS(model5_bayes, file = "./output/models/lnCVRQ10_5_bayes")

  } else{
  model5_bayes <- readRDS("./output/models/lnCVRQ10_5_bayes")
}

# Lets explore the model and how it's predciting the real data
  data_w <- lnCVRQ10_data_wild[complete.cases(lnCVRQ10_data_wild$c_accl_time),]

# combine with predictions
  data_w_pred <- cbind(data_w, predict(model5_bayes))

# Fitted vs actual data
  ggplot(data = data_w_pred, aes(x = Estimate, y = effect_size)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Predicted Effect Size", y = "Observed Effect Size") + theme_classic() + 
  geom_abline(intercept = 0, slope = 1)

# Seems to be OK, but over and under-predciting at times. Lets explore the data for odd ball predictions to see if there are any obvious reasons why. T here are very few for the most part but lets see why sign changes occur which are most stricking differences. Sign changes indicate the observed data is completely opposite in sign to the predcited data

#  Spot check of a bunch of studies doesn't show any obvious issues with the data. Note that data is repeated because acute and acclimated rates are calculated. We expect the rows of raw data for acute and acclim to be repeated even though these data are NOT all used to make the calculation.
  sign_change_dat <- data_w_pred  %>% filter(sign(Estimate) != sign(effect_size))
  #View(sign_change_dat)

# Fitted by Lat/long Longitude, Latitude
  ggplot(data = data_w_pred, aes(y = Estimate, x = Latitude)) + geom_point() + geom_smooth(method = "loess") + labs(x = "Latitude", y = "Predicted Effect Size") + theme_classic() 

  ggplot(data = data_w_pred, aes(y = Estimate, x = Longitude)) + geom_point() + geom_smooth(method = "loess") + labs(x = "Longitude", y = "Predicted Effect Size") + theme_classic() 

# Observed by Lat/long
  ggplot(data = data_w_pred, aes(y = effect_size, x = Latitude)) + geom_point() + geom_smooth(method = "loess") + labs(x = "Latitude", y = "Observed Effect Size") + theme_classic() 

  ggplot(data = data_w_pred, aes(y = effect_size, x = Longitude)) + geom_point() + geom_smooth(method = "loess") + labs(x = "Longitude", y = "Observed Effect Size") + theme_classic() 

# How much variation does this model explain. Need to do this manually because function doesn't seme to work on the model object. We need to remember that predcit will include random effect variances so we may need to exclude this
  re_post <- posterior_samples(model5_bayes, pars = "^sd_")
  v_fix <- apply(predict(model5_bayes, summary = FALSE), 1, function(x) var(x)) # 0.71 (but remember includes random effect variances)

# sigma2_v = typical sampling error variance
sub_data <- lnCVRQ10_data_wild[complete.cases(lnCVRQ10_data_wild$c_accl_time),]
  sigma2_v <- sum(1 / sub_data$V) * (dim(sub_data)[1] - 1) /
              (sum(1 / sub_data$V)^2 - sum((1 / sub_data$V)^2))

# Now check that var fix from raw data and remove sampling variance. 
  v_fix2 <- var(sub_data$effect_size) - sigma2_v  #0.58

# Extract the random effect variances
  v_trait <- re_post$sd_trait__Intercept^2
    v_spp <- re_post$sd_spp__Intercept^2
    v_phy <- re_post$sd_species_full__Intercept^2
    v_std <- re_post$sd_record_num__Intercept^2
      v_r <- re_post$sd_obs__Intercept^2

# Lets get the total variance for the random effects only
  tot_re <- v_trait + v_spp + v_phy + v_std + v_r

# Now, calculate r2 marginal, by subtracting the random effect variance from the fixed effect variance (which includes random effects). Need to check this as it may not be this intuitive
    r2 <- (v_fix - tot_re - sigma2_v) / (v_fix - sigma2_v) # Need to remove sampling variance too

    mean(r2) # Seems a bit high 0.5
  quantile(r2, probs = c(0.025, 0.975)); #0.27-0.69

# Now lets check with our different method. This should be close to the above. Which it is, so I think we're ok in our intuition.
  r2_2 <- (v_fix2 - tot_re) / (v_fix2) # Already removed sampling variance from v_fix2
  
  mean(r2_2) #  0.48
  quantile(r2_2, probs = c(0.025, 0.975)); #0.31-0.60

######################################################################
# Model predictions for terrestrial, marine and freshwater ectotherms
######################################################################
# Now we need to make predictions for new data. We first need to create new data. We need to do this for each habitat type because they are all a little different. Lets do terrestrial first.

#############################
## Terrestrial Ectotherms
#############################

  terrest_data <- sub_data  %>% filter(habitat == "t")  %>% distinct(spp, species_full, habitat, type, Latitude, Longitude)
  new_data_t <- data.frame(
      c_accl_time = 0,
      V = 0,
      trait = 0,
      obs = 0, 
      record_num = 0
    )

  # Create new dataframe with only unique values for predcition.
  new_data_t2  <- cbind(terrest_data, new_data_t)

  # We'll now make the predcitions from the model object using the new dataframe
  terre_pred <- predict(model5_bayes, newdata = new_data_t2, summary = TRUE, allow_new_levels = TRUE, sample_new_levels = "uncertainty", robust = FALSE, intervals = "confidence")

  # We'll also keep the whole postriopr which we'll use later on. We need to transpose so that the data match. Each numbered columns is one sample of the posterior.
  terre_pred_no_sum <- cbind(new_data_t2, t(predict(model5_bayes, newdata = new_data_t2, summary = FALSE, allow_new_levels = TRUE, sample_new_levels = "uncertainty")))
  
  # Lets merge predictions with the original data
  terrest_data <- cbind(terrest_data, terre_pred)

  # Test manual calculations. We can also set summary = FALSE and then do the calculations ourselves. Note we want robust = FALSE to make the comparisons more similar as otherwise the calculation are different when using summary TRUE/FALSE . These are extremely close, and I suspect are only different because sample_new_levels is sampling differently each time predict is run, so will be slightly different from run-to-run
  terre_pred2 <- predict(model5_bayes, newdata = new_data_t2, summary = FALSE, allow_new_levels = TRUE, sample_new_levels = "uncertainty", robust = FALSE)
  plyr::ldply(apply(terre_pred2, 2, function(x) post_summary(x)))

#############################
## Marine ectotherms  
#############################
  marine_data <- sub_data  %>% filter(habitat == "m") %>% distinct(spp, species_full, habitat, type, Latitude, Longitude)
  
  new_data_m <- data.frame(
      c_accl_time = 0,
      V = 0,
      trait = 0,
      obs = 0, 
      record_num = 0
    )

  # Create new dataframe with only unique values for predcition.
  new_data_m  <- cbind(marine_data, new_data_m)

  # We'll now make the predcitions from the model object using the new dataframe
  marine_pred <- predict(model5_bayes, newdata = new_data_m, summary = TRUE, allow_new_levels = TRUE, sample_new_levels = "uncertainty", robust = FALSE, intervals = "confidence")

  # We'll also keep the whole postriopr which we'll use later on. We need to transpose so that the data match. Each numbered columns is one sample of the posterior.
  marine_pred_no_sum <- cbind(new_data_m, t(predict(model5_bayes, newdata = new_data_m, summary = FALSE, allow_new_levels = TRUE, sample_new_levels = "uncertainty")))

  # Lets merge predictions with the original data
  marine_data <- cbind(marine_data, marine_pred)

#############################
## Freshwater ectotherms
#############################
  fresh_data <- sub_data  %>% filter(habitat == "f")%>% distinct(spp, species_full, habitat, type, Latitude, Longitude)
  
  new_data_f <- data.frame(
      c_accl_time = 0,
      V = 0,
      trait = 0,
      obs = 0, 
      record_num = 0
    )

  # Create new dataframe with only unique values for predcition.
  new_data_f  <- cbind(fresh_data, new_data_f)

  # We'll now make the predcitions from the model object using the new dataframe
  fresh_pred <- predict(model5_bayes, newdata = new_data_f, summary = TRUE, allow_new_levels = TRUE, sample_new_levels = "uncertainty", robust = FALSE, intervals = "confidence")

  # We'll also keep the whole postriopr which we'll use later on. We need to transpose so that the data match. Each numbered columns is one sample of the posterior.
  fresh_pred_non_sum <- cbind(new_data_f, t(predict(model5_bayes, newdata = new_data_f, summary = FALSE, allow_new_levels = TRUE, sample_new_levels = "uncertainty")))

  # Lets merge predictions with the original data
  fresh_data <- cbind(fresh_data, fresh_pred)

# Now that we have all the predictions we can merge the data together. Note that species itself is not really that useful because each prediction at each latitude and longitude should incoperate the species effect. So we'll remove it. While I retain spp, it's still not totally specific to the species, but left it there so it's clear how these data match with the wild data. Note there are only 134 species because this is subset of the wild data.
  all_pred <- rbind(terrest_data, marine_data, fresh_data) %>% dplyr::select(-species_full)  %>% mutate(uniques = interaction(spp, Latitude, Longitude))
  all_pred_no_sum <- rbind(terre_pred_no_sum, marine_pred_no_sum, fresh_pred_non_sum) %>% dplyr::select(-species_full)
  spp_wild  <- length(unique(sub_data$spp))
```

```{r, future_clim}
#| label: future_clim
#| echo: false
#| warning: false
#| include: false

# Now we want to take the predictions from `global` and use this for future climate sceneios. We have the future temperatures expected for each location. We can then use the predicted Q10 values to calculate the expected change in variance. We can then plot these globally.

# First, lets get the current and future temperature data for 2081-2085. We'll use the mean. 
  future_temp <- read.csv("./output/climate_data/CanESM2_air_and_SST_timeseries.csv")

# Now, lets summarise the mean for the current temps (i.e., 2018-2022)
current_temps <-   future_temp  %>% 
                   dplyr::select(Species, Latitude, Longitude, grep("X2018|X2019|X2020|X2021|X2022", colnames(future_temp)))  %>% 
                                mutate(mean = apply(.[, grep("X2018|X2019|X2020|X2021|X2022", colnames(.))], 1, function(x) mean(x, na.rm = TRUE)), Celc_curr = mean - 273.15, match = interaction(Species, Latitude, Longitude))

# Lets clean this data up. We only need the mean temperature here, but this needs to be converted to Celcius as right now it's in Kelvins. We'll now take the last 5 years of the future temperature 2096-2100
  future_temps  <- future_temp  %>% 
                  dplyr::select(Species, Latitude, Longitude,  grep("X2096|X2097|X2098|X2099|X2100", colnames(future_temp)))  %>% 
                  mutate(mean = apply(.[, grep("X2096|X2097|X2098|X2099|X2100", colnames(.))], 1, function(x) mean(x, na.rm = TRUE)), Celc_future = mean - 273.15,  match = interaction(Species, Latitude, Longitude))

# Now we can merge the climate datasets together so that we have the species, lat and long, current and future climate. Then we can calculate the expected 'increase' in T into the future

  climate_data <- left_join(current_temps, future_temps, by = "match")  %>% dplyr::select(match, Latitude.x, Longitude.x, Species.x, Celc_curr, Celc_future)  %>% mutate(T_change = Celc_future - Celc_curr)  %>% rename(Species = Species.x, Latitude = Latitude.x, Longitude = Longitude.x)


# Lets look at future and current. Most, I would expect, should be above the line indicating higher future temperatures.
  ggplot(data = climate_data, aes(x = Celc_curr, y = Celc_future)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Current Temperature (C)", y = "Future Temperature (C)") + theme_classic() + geom_abline(intercept = 0, slope = 1)

# Lets have a global plot of temperature changes to see it sptially 

world_map = map_data("world") %>% 
  filter(! long > 180)

  map2_temp_proj <- ggplot() +
    geom_map(
      data = world_map, map = world_map,
      aes(long, lat, map_id = region),
      color = "black", fill = "lightgray") +
    expand_limits(x = world_map$long, y = world_map$lat) +
    coord_map("moll") +
    geom_point(
      data = climate_data[complete.cases(climate_data$T_change),],
      aes(Longitude, Latitude, color = T_change),
      alpha = 0.7, size = 5
    ) + labs(x = "Longitude", y = "Latitude", color = TeX("$\\Delta$ Temp. ($^\\circ$C)"), title = "Current (2018-2022) vs Future (2096-2100)") + scale_colour_gradient2(trans = "reverse") + theme_map(base_size = 22) + theme(plot.title = element_text(hjust = 0.5))

# Now lets merge all_pred with the climate projections
  # Simplify columns 
  climate_data_new <- climate_data  %>% dplyr::select(-Latitude, -Longitude)

  # Merge with model predcitions. This is the predcited lnCVRq10 for 10C change AT the specific latitude and longitude. We must assume that there is no plasticity or adaptation at each site to make projections
  all_pred2 <- all_pred %>% mutate(match = interaction(spp, Latitude, Longitude)) %>% 
              left_join(., climate_data_new, by = "match")  %>% 
              mutate(lnCVR_future = (Estimate / 10) * T_change,
                      lnCVR_F_l95 = (Q2.5 / 10) * T_change,
                      lnCVR_F_u95 = (Q97.5 / 10) * T_change, 
                      per_change = (exp(lnCVR_future) - 1) * 100,
                      per_change_l95 = (exp(lnCVR_F_l95) - 1) * 100,
                      per_change_u95 = (exp(lnCVR_F_u95) - 1) * 100)

  # Lets now use the whole posterior distribtion instead. This is a little hacky because the object is complicated
  
######## *** THE CODE BELOW NEEDS SOME NEW CHECKING AS ABOVE WAS MODIFIED! ****

  # First, lets merge the climate data with the predcitions, but here predcitions are not summarised. We have the entire posteior
   
    all_pred2_no_sum <-  all_pred_no_sum %>% 
                        mutate(match = interaction(spp, Latitude, Longitude))  %>% 
                        left_join(., climate_data_new, by = "match") 
   
  # Second, lets convert each estimate to lncvr 1 degree C instead of 10...
   all_pred2_no_sum2 <- all_pred2_no_sum %>%  
                        mutate_if(colnames(.) %in% c(1:3200), lncvr_1c) 

  # Third, lets multiply each estimate by the temperature change at that location. I've checked 4 different cells and they are calculated correctly.
    all_pred2_no_sum2[,colnames(all_pred2_no_sum2) %in% c(1:3200)]  <- all_pred2_no_sum2[,colnames(all_pred2_no_sum2) %in% c(1:3200)] * all_pred2_no_sum2$T_change

  # Fourth, we can calculate the percentage change on the posterior
    all_pred2_no_sum2[,paste0("perc", c(1:3200))]  <- (exp(all_pred2_no_sum2[,colnames(all_pred2_no_sum2) %in% c(1:3200)]) - 1)*100

  # Now we can summarise each. Here, what we are doing is taking the mean for each column. Effectively pooling across all the iterations for each dataset. This gives us an estimation of the mean change in variance across all locations/species., but it gives us 3200 point estimates of this mean. We can then use this to calculate the 95% CI's.
    mean_perc <-  apply(all_pred2_no_sum2[,paste0("perc", c(1:3200))], 1, mean, na.rm = TRUE) # Fixed an error here. It was applying the mean across columns, not rows!
    mean(mean_perc)
    quantile(mean_perc, 0.025)
    quantile(mean_perc, 0.975)
    hist(mean_perc)

  # Now, lets do this but for each habitat, the good old fashioned way. I think that these are so variable because the expected change in the future is quite dramatic, so the variability is high.
  mean_perc_habitat <-  lapply(split(all_pred2_no_sum2,  all_pred2_no_sum2$habitat), function(x) apply(x[,paste0("perc", c(1:3200))], 1, mean, na.rm = TRUE))
  lapply(mean_perc_habitat, mean)
  lapply(mean_perc_habitat, function(x) quantile(x, c(0.025, 0.975)))
  #lapply(mean_perc_habitat, hist)

# Need to take a step back
  # 1. Why do we have NA in this data set? Thats because some species in the Future projections don't have data!
  # 2. Why are l95 and u95 for marine not working...Fixed
  # 3. Apply to the posteriors, rather than summary. Done

tables_future <- all_pred2 %>% group_by(habitat) %>% summarise(mean = mean(per_change, na.rm = TRUE), 
                                                                l95 = mean(per_change_l95, na.rm = TRUE), 
                                                                u95 = mean(per_change_u95, na.rm = TRUE))

# Check on how many to decrease
  decreases <- all_pred2 %>% group_by(match)  %>% summarise(n = if_else(any(per_change < 0), 1, 0))
    
```

Acute and acclimation responses for wild ectotherms were much less common than studies done on captive populations ($N_{species}$ = `r length(unique(all_pred$spp))`, from `r length(unique(all_pred$uniques))` populations). Globally, there was a clear bias towards species in the Northern Hemiphere (@fig-fig6 A-C). Projected changes in physiological rate variance were highly variable across the globe, with some regions showing a decrease in physiological rate variance, while others showing an increase (@fig-fig6 D). However, out of the `r length(unique(all_pred2$match))` populations variance was predicted to decrease in `r (sum(decreases$n, na.rm = TRUE) / length(decreases$n[complete.cases(decreases$n)]))*100`% of the locations. 

Predictions of current global changes in physiological rate variance were generally conservative with our model explaining ~ 50% of the variation in the observed data ($R^2$ = `r round(mean(r2_2), 2)`, 95% CI: `r round(quantile(r2_2, 0.025)[1], 2)` to `r round(quantile(r2_2, 0.975)[1], 2)`). Across habitat types climate change is predicted to result in a only a `r abs(lapply(mean_perc_habitat, mean)$f)`% change in variance for freshwater systems (95% CI: `r lapply(mean_perc_habitat, function(x) quantile(x, c(0.025, 0.975)))$f[1]` to `r lapply(mean_perc_habitat, function(x) quantile(x, c(0.025, 0.975)))$f[2]`%, $p_{MCMC}$ = `r pmcmc(mean_perc_habitat$f)`), whereas we expect a `r abs(lapply(mean_perc_habitat, mean)$m)`% reduction in variance for marine systems (95% CI: `r lapply(mean_perc_habitat, function(x) quantile(x, c(0.025, 0.975)))$m[1]` to `r lapply(mean_perc_habitat, function(x) quantile(x, c(0.025, 0.975)))$m[2]`%, $p_{MCMC}$ = `r pmcmc(mean_perc_habitat$m)`) and a `r abs(lapply(mean_perc_habitat, mean)$t)`% reduction in variance for terrestrial systems (95% CI: `r lapply(mean_perc_habitat, function(x) quantile(x, c(0.025, 0.975)))$t[1]` to `r lapply(mean_perc_habitat, function(x) quantile(x, c(0.025, 0.975)))$t[2]`%, $p_{MCMC}$ = `r p_value(pmcmc(mean_perc_habitat$t))`) under a RCP8.5 climate scenerio. 

```{r, fig-fig6}
#| label: fig-fig6
#| echo: false
#| warning: false
#| message: false
#| fig-cap: Model predictions for the expected change in acclimation $lnCVR_{Q_{10}}$ across the globe for terrestrial, marine and freshwater ecthotherms. Predictions consider the uncertainty in random effects (i.e., species, phylogeny, study).  Predicted change in physiological rate variance (relative variance) for each population based on current temperatures (average from 2018-2022; A-C) as well as the expected change from current temperatures based on future temperature predictions (average from 2096-2100, D). Future climate predictions are the reduction in relative variance expected under a RCP8.5 climate scenerio relative to current climate conditions (% change).

#devtools::install_github("hughjonesd/ggmagnify") #https://github.com/hughjonesd/ggmagnify

world_map = map_data("world") %>% 
  filter(! long > 180)

map1_current <- ggplot() +
  geom_map(
    data = world_map, map = world_map,
    aes(long, lat, map_id = region),
    color = "black", fill = "lightgray") +
  expand_limits(x = world_map$long, y = world_map$lat) +
  coord_map("moll") +
  geom_point(
    data = all_pred  %>% filter(type == "acclim"),
    aes(Longitude, Latitude, color = Estimate),
    alpha = 0.7, size = 5
  ) + labs(x = "Longitude", y = "Latitude", color = TeX("$lnCVR_{Q_{10}}$"), title = "Current (2018-2022)") + scale_color_viridis() + theme_map(base_size = 22) +  theme(plot.title = element_text(hjust = 0.5))


zoom_areas <- data.frame(
     x = c(-130, -15, -60, 145),
  xend = c( -50, 48, -35, 155),
     y = c(  25, 34, 0, -45),
  yend = c(  55,  69.8, -60, -10),
  label = c("North America", "Europe", "South America", "Australia")
)

zoom_plots <- lapply(1:nrow(zoom_areas), function(i) {
  map1_current +
    geom_polygon(fill = "gray80", color = "black") +
    coord_cartesian(xlim = c(zoom_areas[i, "x"], zoom_areas[i, "xend"]), 
                    ylim = c(zoom_areas[i, "y"], zoom_areas[i, "yend"])) +
                    theme(legend.position = "none",
                        plot.title = element_blank())
})

map2_future <- ggplot() +
    geom_map(
      data = world_map, map = world_map,
      aes(long, lat, map_id = region),
      color = "black", fill = "lightgray") +
    expand_limits(x = world_map$long, y = world_map$lat) +
    coord_map("moll") +
    geom_point(
      data = all_pred2[complete.cases(all_pred2$per_change),],
      aes(Longitude, Latitude, color = per_change),
      alpha = 0.7, size = 5
    ) + labs(x = "Longitude", y = "Latitude", color = TeX("% $\\Delta$"), title = "Future (2096-2100)") + scale_colour_viridis() + theme_map(base_size = 22) + theme(plot.title = element_text(hjust = 0.5))

# Make a multipanel plot. Make the world_map plot the biggest, and then add the zoomed in plots arond it using pactchwork

p <- (((zoom_plots[[1]] | zoom_plots[[2]]) / map1_current) + map2_future) + plot_layout(heights  = c(1, 2, 2)) + plot_annotation(tag_levels = "A", tag_suffix = ")") & theme(plot.tag = element_text(size = 20, face = "bold"), plot.margin = unit(c(0, 0, 0, 0), "cm"))

ggsave(p, filename = "./output/figures/fig-preds.png", width = 7.8, height = 10.1)

image_read("./output/figures/fig-preds.png")
```


## **Discussion**

Understanding acclimation capacity and how variation in physiological rates change across populations and species is important for predicting the ecological and evolutionary consequences of climate change [@Chevin2017; @Chevin2010; @Bolnick2011]. Here, we show that the relative variance $lnCVR_{Q_{10}}$ in physiological rates is expected to decrease for ectotherms as temperatures increase, but particularly so for terrestrial ectotherms (~28%). Decreases in the relative variance of physiological rates are equal to or larger than the expected benefits from acclimation (i.e., $lnRR_{Q_{10_{acclimation}}}$) in marine and terrestrial ectotherms (*marine*: 16% acclimation vs. 15% reduction in relative variance; *terrestrial*: no acclimation vs 28% reduction in relative variance; @fig-1). Such effects are expected to result in a decrease in the variability in physiological rates for marine and terrestrial ectotherms between ~4-13% under future climate change projections. Our results provide a more complete picture of the impacts that climate warming will have on ectotherm populations, with important ecological and evolutionary implications that require further empirical and theoretical attention. We discuss our findings in the context of the current literature and highlight key areas for future research.

### ***Potential evolutionary consequences for reduced plasticity and variance in physiologcial rates across ectotherms***

There is a general interest in understanding the interplay and relative importance of plasticity and genetic adaptation to a population's capacity to mitigate climate change effects [@urban2023and; @Chevin2010; @hoffmann2011climate; @merila2014climate]. Phenotypic plasticity is expected to allow populations to persist in the face of climate extremes by better allowing phenotypes to match fitness optima, however, maladaptive responses can occur [@noble2019plastic; @radersma2020plasticity] and there may be limits / costs to plasticity that may prevent it from evolving [@Dewitt1998; but see @Murren2015]. We show that plastic adjustments in physiological rates and changes in their relative variance differs across habitats. In freshwater habitats, acclimation responses will likely be beneficial considering that these effects are larger than reductions in relative variance in physiological rates. In contrast, acclimation responses of marine organisms coincide with a nearly equal reduction in relative variance in physiolgical rates, suggesting acclimation may not be as beneficial. Relative variance reductions are particularly pronounced for terrestrial ectotherms and this coincides with a general inability to acclimate highlighting the vulnerability of terrestrial ectotherms to climate change. While it is unclear the extent to which such changes in variance are heritable, we expect changes in variance of this magnitude to impact the 'opportunity for selection' by reducing the strength of selection and/or impacting underlying genetic variance exposed to selection. Both are predicted to impact the capacity of populations to evolve under climate change [@hoffmann2011climate; @urban2023and]. 

One explanation for why terrestrial ectotherms show minimal acclimation capacity may be related to the fact that terrestrial ectotherms were, on average, acclimated for significantly less time than ectotherms from aquatic habitats. However, rates of acclimation have been shown to be faster for many terrestrial groups compared to aquatic organisms [e.g., amphibians and reptiles have higher rates of acclimation than fishes; See @Einum2023-lz]. Faster rates of acclimation would therefore result in the opposite patterns to those that we observed -- in other words, terrestrial species would be more likely to exhibit lower $lnRR_{Q_{10_{acclimation}}}$ compared to $lnRR_{Q_{10_{acute}}}$ when controlling for acclimation time. The weak acclimation responses of terrestrial ectotherms suggest that evolving plasticity  in physiological rates may be hard, possibly because terrestrial ectotherms are more likely to experience more variable and unpredictable thermal environments than aquatic ectotherms (see below). Reductions in physiological rate variance for terrestrial ectotherms may be because of selective mortality at higher temperatures reducing intrapopulation variability or populations being pushed closer to their thermal maxima (or a combination of both). Disentangling these hypotheses will require empirical studies to connect survival measures at different temperatures with thermal physiology across individuals (e.g., $CT_{max}$). 

### ***Plasticity and variance in physiologcial rates do not differ between life-stages***
Interestingly, there were no major differences in acclimation or reductions in physiological variance between life-stages across habitat types. Greater plasticity for early life-stages of development is expected to be important for dealing with the effects of climate change because early life-stages are usually particularly vulnerable periods in development [@martin2015age; @stearns1976life]. However, our results highlight that early life stages are not likely to be protected from the impacts of climate change. Evidence across the literature conflicts in terms of the extent to which one life-stage is more or less plastic than another [@carter2020life; @moghadam2019heat]. For example, @moghadam2019heat showed that larvae *Drosophila* were more plastic in their heat hardening responses compared to adults. In contrast, @carter2020life showed greater thermal plasticity in metabolism for adults but little in pupae of *Onthophagus taurus*. Across a diversity of taxa, we show that there were generally similar patterns between early and late life stages -- both in terms of variance changes and the capacity for plasticity. Unsurprisingly, there is much variation in the literature and our findings suggest that patterns will depend on the species and traits in question. However, very few studies measured multiple life-history stages within the same population. As such, we need more studies that explicitly compare, within populations, differences in plasticity among life stages across multiple traits. A better understanding of the microthermal enviroments experienced by different life-stages will also be important in understanding why plasticity (or lack thereof) may differ among life-stages.

### ***No signature of past climate on capacity for physiological plasticity***

Theoretical models predict that plasticity should evolve in populatons experiencing greater environmental variability (spatial or temporal), particularly if oscillations are predictable over time making environmental cues more reliable [@Chevin2017; @Lande2009; @Chevin2010; @Nunney2016; @Murren2015; @hendry2016key; @Reed2010]. Higher spatial and temporal heterogeneity in terrestrial ecosystems [@steele2019comparison] suggests that plasticity should be more likely to evolve in terrestrial environments. However, we did not find evidence to this effect.  The lack of relationship between physiological plasticity and environmental variability and predictability could be due to the challenges in estimating realistic microthermal environments experienced by taxa. Alternatively, lower predictability of thermal environments over time may make cues unreliable preventing plastic responses from evolving easily [@Leung2020; @hendry2016key]. Randomly flutuating environments have been suggested to select for reduced plasticity, particularly if plastic responses are costly and this has been demonstrated by a number of empirical studies [@Leung2020; @rescan2022experimental; @leung2023phenotypic]. For example, using seed beetles (*Callosobruchus maculatus*), @hallsson2012selection showed that experimentally evolving populations under randomly flutuating thermal conditions did not lead to the expected increase in plasticity, but rather reduced plasticity. @Leung2020 also showed reduced plasticity in morphological traits when environments experienced were less predictable by experimentally evolving algae populations (*Dunaliella salina*) [see also @leung2023phenotypic]. These findings, in combination with our results, suggests that there are costs to being plastic when environments are not predictable (either intrinsic physiological costs, fitness costs or both). The fact that aquatic ectotherms did show a capacity to acclimate suggest that environmental predictability, which is expected to be higher in aquatic environments, may be more important than environmental variability in driving the evolution of plasticity. However, disentangling the relative importance of environmental variability and predictability will require better distinguishing between active and passive plasticity, as the latter is expected to more likely be adaptive (@Havird2020-mj), and better a understanding the fitness consequences of exhibiting plastic versus canalised phenotypes. 

### ***Ecological consequences of reduced variation in physiological rates***
While we found that variance in physiological rates decreases at high temperatures, being especially pronouced in terrestrial ectotherms, variance reductions in metabolism and performance were key traits most strongly impacted. Changes in variability in physiological rates, particularly traits governing energy demand, could have important consequences on the flow of energy within and between populations, communities and ecosystems [@hendry2016key]. More variable populations, genetically and/or phenotypically, are predicted to be associated with broader niches, reduced intraspecific competition, increased growth rate, decreased vulnerability to environmental change and lower extinction risk [@forsman2015rethinking; @forsman2014effects; @Bolnick2011; @hendry2016key; @hart2016variation]. Maintaining intrapopulaton variability in physiological rates in a warmer world may therefore be important for population resilience to climate change. Nonetheless, few studies have explored the consequences that variation in physiological traits have for population dynamics. Those studies that have, have shown that such variation can have important implications. For example, @kooijman1989population integrated individual variation in dynamic energy budget (DEB) models developed for *Daphnia magna*. They showed that greater between-individual variation in DEB parameters led to less extreme population oscillations compared to scenarios with no variation [@kooijman1989population]. The differences in variance change across major habitat types suggest that terrestrial ectotherms will likely face an onslaught of ecological and evolutionary challenges which will mean greater rates of extinction and reduced productivity – predictions reinforced by several studies [@hoffmann2013upper; @Gunderson2015-hz; @Pottier2022]. To date, however, an appreciation for the wide-reaching impacts that changes in variance may have on populations and communities remains limited. The ecological consequences of changes in physiological rate variance across aquatic and terrestrial ecosystems remain unclear. What we desperately need now are the development of theoretical models that better integrate intrapopulation variation into mechanistic physiological models or ones that better capture stochasticity such as individual based models. Our meta-analytic findings can help us better position ourselves to start asking questions about the ecological and evolutionary consequences of changes in variance in physiological rates.

### ***Limitations***
A number of limitations need to be recognised to better contextualise our results. First, and as mentioned above, the evolutionary implications of changes in relative variances in physiological rates is still unclear because we lack a full understanding of how much variation is genetic versus environmental, or how traits are related to fitness. Second, while we found no relationships between historical climate variability / predictability and capacity for plasticity this does not necessarily mean they are not important. There are major challenges to estimating realistic microthermal environments experienced by taxa; it is possible that more fine-scale resolution of the habitats that organisms occupy will elucidate expected patterns. Third, while we show general patterns across taxa and habitats it is important to recognise that this does not mean such patterns apply to all populations. Substantial variation in acclimation responses and changes in variance exist among populations as evidenced by wide prediction intervals. As such, finer scale analyses that look at acclimation responses *and* changes in relative variance will be beneficial for developing a better understanding of their interplay when considering how populations will be impacted by climate change.

### ***Conclusions and future directions***

Enhanced knowledge of how variation in physiological rates vary across populations and species and the degree to which they can be adjusted in response to the environment may increase our ability to make more informed predictions about the ecological and evolutionary dynamics of natural populations [@forsman2015rethinking]. Changes in the relative variance in physiological rates could be better incorporated into physiological and ecological models to provide more nuanced and possibly more realistic predictions about the impacts of climate change on natural populations. While we do not yet understand the relative contribution of environmental and genetic factors to variances changes, models could better decouple how different levels of heritability with different total variance impact evolutionary and ecological predictions. Our meta-analysis allows for realistic models to be parameterised and ensure they are better aligned with empirical findings. Nonetheless, many fascinating questions remain unanswered that will require greater focus on the consequences of changes in variance (rather than just the mean). Particularly interesting questions include: How does a reduction in physiological rate variance change energy flow across tropic levels within communities? What are the biochemical, cellular and physiological mechanisms that underly reduced variance in physiological rates? Are reductions in variance in one trait associated with reductions in correlated traits, or do some traits increase while others decrease? How much of the reduction in variance is driven by lower levels of genetic variance? Answers to these questions will require integrative approaches that combine empirical and theoretical work across multiple levels of biological organisation but will likely provide useful advances in understanding the full consequences that climate change will have on ectotherms across all major ecosystems. 

## References

<br>
<div id="refs"></div>
<br> 

## Supplemental Results and Figures

#### PRISMA Flow Diagram

```{r, fig-prisma}
#| label: fig-prisma
#| fig-cap: "PRISMA flow diagram of the literature search and screening process."
#| echo: false

prisma <- magick::image_read("./output/figures/PRISMA.png")
prisma
```

#### Acute and acclimation $lnRR_{Q_{10}}$ for different trait categories across marine, freshwater and terrestrial taxa

```{r, fig-2}
#| label: fig-2
#| fig-cap: "Acute and Acclimation $lnRR_{Q_{10}}$ across traits for A) marine, B) freshwater and C) terrestrial systems. k = total number of effect size estimates while the numbers in brackets indicate the number of species. Thick bars indicate 95% confidence intervals and thin bars indicate 95% prediction intervals. The x-axis is truncated for ease of visualisation."
#| echo: false
k_marine=manual_extract(model1.3_m_het, mod = "trait_category", group = "record_num", exclude = "Antiox")
k_fresh=manual_extract(model1.3_f_het, mod = "trait_category", group = "record_num")
k_terrs=manual_extract(model1.3_t_het, mod = "trait_category", group = "record_num")

ptm <- orchard_plot(model1.3_m_het, mod = "trait_category", at = list(type = c("acute", "acclim")), by = "type", group = "record_num", weights = "prop", k.pos = "none", xlab = TeX("$lnRR_{Q_{10}}$"), angle = 0, condition.lab = "Type") +
  scale_x_discrete(labels = c("Mito_leak" = "Proton Leak",
                              "Metabolic_enzyme" = "Metabolic Enzymes",
                              "Rest_MR" = "Resting Metabolic Rate",
                              "Max_MR" = "Maximum Metabolic Rate",
                              "Mito_oxidation" = "OXPHOS")) + theme_classic() + theme(axis.text = element_text(size=12)) + ylim(-1.5, 2.5) +
                            annotate("text", label= paste0("k = ", k_marine$k, " (", k_marine$sdy, ")"), x = k_marine$moderator, y = 2.4) + add_theme()
#ptm$layers[[1]] <- NULL # Lets just remove the data point geom layer as it's too busy


ptf <- orchard_plot(model1.3_f_het, mod = "trait_category", at = list(type = c("acute", "acclim")), by = "type", group = "record_num", weights = "prop", k.pos = "none", xlab = TeX("$lnRR_{Q_{10}}$"), angle = 0, condition.lab = "Type") +
  scale_x_discrete(labels = c("Mito_leak" = "Proton Leak",
                              "Metabolic_enzyme" = "Metabolic Enzymes",
                              "Rest_MR" = "Resting Metabolic Rate",
                              "Max_MR" = "Maximum Metabolic Rate",
                              "Mito_oxidation" = "OXPHOS")) + theme_classic() + theme() + 
                              annotate("text", label= paste0("k = ", k_fresh$k, " (", k_fresh$sdy, ")"), x = k_fresh$moderator, y = 2.4) + add_theme()
#ptf$layers[[1]] <- NULL # Lets just remove the data point geom layer as it's too busy


ptt <- orchard_plot(model1.3_t_het, mod = "trait_category", at = list(type = c("acute", "acclim")), by = "type", group = "record_num", weights = "prop", k.pos = "none",  xlab = TeX("$lnRR_{Q_{10}}$"), angle = 0, condition.lab = "Type") +
  scale_x_discrete(labels = c("Metabolic_enzyme" = "Metabolic Enzymes",
                              "Rest_MR" = "Resting Metabolic Rate")) + theme_classic() + labs(legend = "Type")+ annotate("text", label= paste0("k = ", k_terrs$k, " (", k_terrs$sdy, ")"), x = k_terrs$moderator, y = 2.4) + add_theme() + ylim(-1,3)
#ptt$layers[[1]] <- NULL # Lets just remove the data point geom layer as it's too busy


fig2 <- (ptm / ptf / ptt) + plot_annotation(tag_levels = "A", tag_suffix = ")")
ggsave(fig2, filename = "./output/figures/fig2_trait.png", height = 14, width = 10)

img_fig2 <- magick::image_read("./output/figures/fig2_trait.png")
img_fig2
```

```{r, fig-cvrtrait}
#| label: fig-cvrtrait
#| fig-cap: "Acute and Acclimation $lnCVR_{Q_{10}}$ across traits for A) marine, B) freshwater and C) terrestrial systems. k = total number of effect size estimates while the numbers in brackets indicate the number of species. Thick bars indicate 95% confidence intervals and thin bars indicate 95% prediction intervals. The x-axis is truncated for ease of visualisation."
#| echo: false

k_marinecv=manual_extract(model2.3m, mod = "trait_category", group = "record_num", exclude = "Antiox")
k_freshcv=manual_extract(model2.3f, mod = "trait_category", group = "record_num")
k_terrscv=manual_extract(model2.3t, mod = "trait_category", group = "record_num")

ptm <- orchard_plot(model2.3m, mod = "trait_category", group = "record_num", weights = "prop",  xlab = TeX("$lnCVR_{Q_{10}}$"), angle = 0, k.pos = "none", condition.lab = "Type") +
  scale_x_discrete(labels = c("Mito_leak" = "Proton Leak",
                              "Metabolic_enzyme" = "Metabolic Enzymes",
                              "Rest_MR" = "Resting Metabolic Rate",
                              "Max_MR" = "Maximum Metabolic Rate",
                              "Mito_oxidation" = "OXPHOS")) + theme_classic() + add_theme() + annotate("text", label= paste0("k = ", k_marinecv$k, " (", k_marinecv$sdy, ")"), x = k_marinecv$moderator, y = 2.4) + ylim(-2, 2.6)
#ptm$layers[[1]] <- NULL # Lets just remove the data point geom layer as it's too busy


ptf <- orchard_plot(model2.3f, mod = "trait_category",  group = "record_num", weights = "prop",  xlab = TeX("$lnCVR_{Q_{10}}$"), angle = 0, condition.lab = "Type",  k.pos = "none") +
  scale_x_discrete(labels = c("Mito_leak" = "Proton Leak",
                              "Metabolic_enzyme" = "Metabolic Enzymes",
                              "Rest_MR" = "Resting Metabolic Rate",
                              "Max_MR" = "Maximum Metabolic Rate",
                              "Mito_oxidation" = "OXPHOS")) + theme_classic()+ add_theme() + annotate("text", label= paste0("k = ", k_freshcv$k, " (", k_freshcv$sdy, ")"), x = k_freshcv$moderator, y = 2.4) + ylim(-2.5, 2.65)
#ptf$layers[[1]] <- NULL # Lets just remove the data point geom layer as it's too busy


ptt <- orchard_plot(model2.3t, mod = "trait_category",  group = "record_num", weights = "prop",  xlab = TeX("$lnCVR_{Q_{10}}$"), angle = 0,  k.pos = "none", condition.lab = "Type") +
  scale_x_discrete(labels = c("Metabolic_enzyme" = "Metabolic Enzymes",
                              "Rest_MR" = "Resting Metabolic Rate",
                              "Max_MR" = "Maximum Metabolic Rate")) + theme_classic() +  annotate("text", label= paste0("k = ", k_terrscv$k, " (", k_terrscv$sdy, ")"), x = k_terrscv$moderator, y = 2.4) + labs(legend = "Type")+ add_theme() + ylim(-2, 2.65)
#ptt$layers[[1]] <- NULL # Lets just remove the data point geom layer as it's too busy


figcvrtrait <- (ptm / ptf / ptt) + plot_annotation(tag_levels = "A", tag_suffix = ")")
ggsave(figcvrtrait, filename = "./output/figures/figcvrtrait.png", height = 14, width = 10)

img_figcvrtrait <- magick::image_read("./output/figures/figcvrtrait.png")
img_figcvrtrait
```

#### Comparing raw variance changes using $lnVR_{Q_{10}}$
```{r, lnvrq10}
#| label: lnvrq10
#| echo: false
#| warning: false
#| error: false
#| include: false
#| cache: true

#############
  ## lnVRQ10
#############
##################################################
  # Organise the data and prune tree
#################################################
  lnVRQ10_data <- data_long2 %>% filter(grepl("lnVR", name) & !is.na(effect_size) & !is.na(V) & !V == 0 & !is.na(acclim_period)) %>% 
                              mutate(spp = species_full, c_accl_time = acclim_period - mean(acclim_period, na.rm = TRUE))

# Check and prune tree
  tree_lnVR <- tree_checks(data = lnVRQ10_data, tree = tree_p0.7, dataCol = "species_full", type = "prune")
  tree_checks(data = lnVRQ10_data, tree = tree_lnVR, dataCol = "species_full", type = "check") # Good

# Create the phylo correlation matrix
  phylo_cor_VR <- vcv(tree_lnVR, cor = TRUE)
          A_VR <- vcv(tree_lnVR, cor = FALSE) # For bayes, need cov matrix


###################################################
  # Model 3.1: Intercept only model.
  # Used for heterogeneity analysis
###################################################
rerun = FALSE
if(rerun){
  model3.1 <- metafor::rma.mv(effect_size ~ 1, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_VR), dfs = "contain", 
                              test = "t", data = lnVRQ10_data) 
  
  model3.1_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  1 + (~1 | record_num) + (1 | gr(species_full, cov = A_VR)) + (1 | spp) + (1|trait), data2 = list(A_VR=A_VR), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnVRQ10_data)
  
  # Save model1.1
  saveRDS(model3.1, file = "./output/models/lnVRQ10_3.1")
  saveRDS(model3.1_bayes, file = "./output/models/lnVRQ10_3.1_bayes")
} else{ 
        model3.1 <- readRDS("./output/models/lnVRQ10_3.1")
  model3.1_bayes <- readRDS("./output/models/lnVRQ10_3.1_bayes")
}

# Heterogeneity analysis
   w_VR <- with(lnVRQ10_data, 1/V) # weights
  sv_VR <- sum(w_VR*(dim(lnVRQ10_data)[1]-1)) / (sum(w_VR)^2 + sum(w_VR^2))

# extract posterior sds, but square them to turn to variance
  posteriors_3.1 <- posterior_samples(model3.1_bayes, pars = c("^sd", "sigma"))^2
  colnames(posteriors_3.1) <- gsub("__Intercept", "", colnames(posteriors_3.1))
  colnames(posteriors_3.1) <- gsub("sd_", "", colnames(posteriors_3.1))
  
    res_VR <- posteriors_3.1[,"sigma"]
   stdy_VR <- posteriors_3.1[,"record_num"]
  phylo_VR <- posteriors_3.1[,"species_full"]
    spp_VR <- posteriors_3.1[,"spp"]
  trait_VR <- posteriors_3.1[,"trait"]
  total_VR <- phylo_VR + spp_VR + res_VR + sv_VR + stdy_VR + trait_VR
 
  # Calculate I2
     tot_i2_VR <- (sv_VR / total_VR)*100    ; mean(tot_i2_VR)  ; quantile(tot_i2_VR, c(0.025, 0.975))
   phylo_i2_VR <- (phylo_VR / total_VR)*100 ; mean(phylo_i2_VR); quantile(phylo_i2_VR, c(0.025, 0.975))
     spp_i2_VR <- (spp_VR / total_VR)*100   ; mean(spp_i2_VR)  ; quantile(spp_i2_VR, c(0.025, 0.975))
    stdy_i2_VR <- (stdy_VR / total_VR)*100  ; mean(stdy_i2_VR) ; quantile(stdy_i2_VR, c(0.025, 0.975))
   trait_i2_VR <- (trait_VR / total_VR)*100 ; mean(trait_i2_VR); quantile(trait_i2_VR, c(0.025, 0.975))
     res_i2_VR <- (res_VR / total_VR)*100   ; mean(res_i2_VR)  ; quantile(res_i2_VR, c(0.025, 0.975))
  
  # Table
     i2_lnVR <- data.frame(name = c("Phylogeny", "Species", "Study", "Trait"),
                           est = c(mean(phylo_i2_VR),mean(spp_i2_VR), mean(stdy_i2_VR), mean(trait_i2_VR)),
                           lci = c(quantile(phylo_i2_VR, c(0.025, 0.975))[1], quantile(spp_i2_VR, c(0.025, 0.975))[1],
                                   quantile(stdy_i2_VR, c(0.025, 0.975))[1], quantile(trait_i2_VR, c(0.025, 0.975))[1]),
                           uci = c(quantile(phylo_i2_VR, c(0.025, 0.975))[2], quantile(spp_i2_VR, c(0.025, 0.975))[2],
                                   quantile(stdy_i2_VR, c(0.025, 0.975))[2], quantile(trait_i2_VR, c(0.025, 0.975))[2]))  
  
###################################################
  # Model 3.2: Model controlling for acclimation time, 
  # type and habitat assuming type can vary by habitat
###################################################

if(rerun){
  # More realistic model 
  model3.2 <- metafor::rma.mv(effect_size ~  c_accl_time + type + habitat + type:habitat, V = V, 
                              random = list(~1 | record_num,
                                            ~1 | species_full,
                                            ~1 | spp,
                                            ~1 | trait,
                                            ~1 | obs),
                              R = list(species_full = phylo_cor_VR), dfs = "contain", 
                              test = "t", data = lnVRQ10_data)
  
   model3.2_bayes <- brms::brm(effect_size | se(sqrt(V), sigma = TRUE) ~  c_accl_time + type + habitat + type:habitat + (~1 | record_num) + (1 | gr(species_full, cov = A_VR)) + (1 | spp) + (1|trait), data2 = list(A_VR=A_VR), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 4, data = lnVRQ10_data)
                              
  # Save model1.2
  saveRDS(model3.2, file = "./output/models/lnVRQ10_3.2")
  saveRDS(model3.2_bayes, file = "./output/models/lnVRQ10_3.2_bayes")

  } else{
        model3.2 <- readRDS("./output/models/lnVRQ10_3.2")
  model3.2_bayes <- readRDS("./output/models/lnVRQ10_3.2_bayes")
}

######################################################
  # Bayesian Contrasts
######################################################

  posteriors_3.2 <- posterior_samples(model3.2_bayes, pars = "^b")
  f_acute_VR  <- posteriors_3.2[,"b_Intercept"]; pmcmc(f_acute_VR)
  f_acclim_VR <- posteriors_3.2[,"b_Intercept"] + posteriors_3.2[,"b_typeacclim"]
  m_acute_VR  <- posteriors_3.2[,"b_Intercept"] + posteriors_3.2[,"b_habitatm"]
  m_acclim_VR <- posteriors_3.2[,"b_Intercept"] + posteriors_3.2[,"b_habitatm"] + posteriors_3.2[,"b_typeacclim"] + posteriors_3.2[,"b_typeacclim:habitatm"]
  t_acute_VR  <- posteriors_3.2[,"b_Intercept"] + posteriors_3.2[,"b_habitatt"]
  t_acclim_VR <- posteriors_3.2[,"b_Intercept"] + posteriors_3.2[,"b_habitatt"] + posteriors_3.2[,"b_typeacclim"] + posteriors_3.2[,"b_typeacclim:habitatt"]

# We'll take the marginalised mean for each type as there is no difference between acclimation and acute really except for in freshwater, but this effect size is so tiny. It's a 10% reduction at high temps and acclim is only a 2% reduction in variance at high temps.
  # First get sample sizes
    N <- lnVRQ10_data %>% group_by(habitat, type) %>% summarise(n=n())
  
  # Calculated weighted mean by sample size. 
    f_VR_mean <- (f_acute_VR * N[1,"n"][[1]] + f_acclim_VR * N[2,"n"][[1]]) / sum(N[1:2, "n"]); pmcmc(f_VR_mean)
    m_VR_mean <- (m_acute_VR * N[3,"n"][[1]] + m_acclim_VR * N[3,"n"][[1]]) / sum(N[3:4, "n"]); pmcmc(m_VR_mean)
    t_VR_mean <- (t_acute_VR * N[5,"n"][[1]] + t_acclim_VR * N[6,"n"][[1]]) / sum(N[5:6, "n"]); pmcmc(t_VR_mean)
  
  # Lets now convert these to a %
    f_VR_mean_ef  <- abs((exp(f_VR_mean) - 1)*100) 
    m_VR_mean_ef  <- abs((exp(m_VR_mean) - 1)*100) 
    t_VR_mean_ef  <- abs((exp(t_VR_mean) - 1)*100) 

```


Analysis of $lnVR_{Q_{10}}$ suggested that variance increases with higher temperatures across all habitat types, with terrestrial ectotherms having the smallest increase in variance (@fig-s1). @tbl-s1

```{r, fig-s1}
#| label: fig-s1
#| fig-align: center
#| fig-cap: "Estimated mean $lnVR_{Q_{10}}$ for marine, freshwater and terrestrial systems. Note there were no differences between acute and acclimation $Q_{10}$ types so they were averaged. Thick black bars are 95% confidence intervals (CI's) and thin bars 95% prediction intervals (PI's). The percentage change in variance is also back calculated. Note that these are raw variances and do not account for changes in mean physiological rates. k = total number of effect size estimates while the numbers in brackets indicate the number of species."


##################
  # Figure S1
################## 
  # Sensitivity analysis that looks at how variance changes but not controlling for the mean.
  col <- c("#0871B9", "#F3B40D", "#1BB908")
  p3 <- orchard_plot(model3.2, xlab = TeX("$lnVR_{Q_{10}}$"), mod = "habitat", group  = "record_num", weights = "prop", angle = 45, trunk.size = 5) +
              scale_x_discrete(labels = c("T" = "Terrestrial","M" = "Marine" ,"F" = "Freshwater")) + annotate("text", x = 1.3, y = -5.2, 
           label =TeX(paste0("$\\mu = $", round(mean(f_VR_mean), 2), " [", round(quantile(f_VR_mean, 0.025), 2)," to ", round(quantile(f_VR_mean, 0.975),2), "] ")), hjust = 0, size = 6) + 
  annotate("text", x = 1.15, y = -3.5, label = TeX(paste0("$\\italic(p)$ ", p_value(round(pmcmc(f_VR_mean), digit = 2)))), hjust = 0, size = 6) + 
  annotate("text", x = 1.15, y = -5, 
           label =paste0(round(mean(exp(f_VR_mean)-1)*100, 2), "%"), hjust = 0, size = 6) + 
  annotate("text", x = 2.3, y = -5.2, 
           label =TeX(paste0("$\\mu = $", round(mean(m_VR_mean), 2), " [", round(quantile(m_VR_mean, 0.025), 2)," to ", round(quantile(m_VR_mean, 0.975),2), "] ")), hjust = 0, size = 6) + 
  annotate("text", x = 2.15, y = -3.5, label = TeX(paste0("$\\italic(p)$ ", p_value(round(pmcmc(m_VR_mean), digit = 2)))), hjust = 0, size = 6) + 
  annotate("text", x = 2.15, y = -5, 
           label =paste0(round(mean(exp(m_VR_mean)-1)*100, 2), "%"), hjust = 0, size = 6) + annotate("text", x = 3.3, y = -5.2, 
           label =TeX(paste0("$\\mu = $", round(mean(t_VR_mean), 2), " [", round(quantile(t_VR_mean, 0.025), 2)," to ", round(quantile(t_VR_mean, 0.975),2), "] ")), hjust = 0, size = 6) + 
  annotate("text", x = 3.15, y = -5, 
           label =paste0(round(mean(exp(t_VR_mean)-1)*100, 2), "%"), hjust = 0, size = 6) + labs(shape = "Type") +
    annotate("text", x = 3.15, y = -3.5, label = TeX(paste0("$\\italic(p)$ ", p_value(round(pmcmc(t_VR_mean), digit = 3)))), hjust = 0, size = 6) + scale_fill_manual(values = c(col))
   
  
  p3 <- p3 + theme_classic() + theme(axis.title  = element_text(size = 24),
          axis.text = element_text(size = 15), legend.text = element_text(size = 15),
          legend.title = element_text(size = 15))
  
  ggsave(p3, filename = "./output/figures/figS1.pdf", width = 11.5, height = 8)

  figs1 <- image_read("./output/figures/figS1.pdf")
  figs1
```

```{r, tbl-s1}
#| label: tbl-s1
#| echo: false
#| tbl-cap: Model estimates, standard error, and 95% credible intervals comparing changes in acute and acclimation $lnVR_{Q_{10}}$ across habitat types. Models estimates are based off 1,253 effect sizes from 139 studies.
 
 # Extract the fixed / population-level effect summaries of the posterior
    fixed <- do.call(rbind, apply(posterior_samples(model3.2_bayes, pars = "^b"), 2,  function(x) post_summary(x)))
    fixed <- cbind(Parameter = c("Intercept", "Acclimation Time (z scaled)", "Acclimation Effect", "Habitat (Marine)", "Habitat (Terrestrial)", "Acclimation*Marine", "Acclimation*Terrestrial"), fixed)
    rownames(fixed) <- NULL

 # Extract the random effect summaries of the posteriors (SDs)
    random <- do.call(rbind, apply(posterior_samples(model3.2_bayes, pars = "^sd"), 2,  function(x) post_summary(x)))
    random <- cbind(Parameter = c( "Study", "Phylogeny", "Species", "Trait"), random)
    rownames(random) <- NULL

# Create the table
    tabs1 <- rbind(fixed, random)

    flextable(tabs1) %>% bold(part = "header") %>% autofit() %>% add_body_row(values = as_paragraph(as_b("Fixed Effects")), top = TRUE, colwidths = 5) %>% compose(value = as_paragraph(as_b(c(("Random Effects"), rep("", 4)))), i = 8)
```

#### Plots of $I^2$ for multi-level models
```{r, fig-s3}
#| label: fig-s3
#| fig-cap: "$I^2$ estimates. A) $lnRR_{Q_{10}}$ B) $lnCVR_{Q_{10}}$ and C) $lnVR_{Q_{10}}$." 
#| fig-align: center

ps3_1 <- ggplot(i2_lnrr, aes(x = est, y = name)) + xlim(0, 50) + geom_point(size = 5) + geom_errorbar(aes(xmin = lci, xmax = uci), width = 0.15) + theme_bw() + labs(x = "Percentage of Variation (%)") + theme(axis.title.y = element_blank(), axis.text = element_text(size = 20), axis.title = element_text(size = 24)) + geom_text(aes(label = paste0(round(est, 2), "% ", "[", round(lci, 2), " - ", round(uci, 2), "%]")), position = position_nudge(x = 5, y = 0.2)) + annotate("text", x = 30, y = 1.5, label = TeX(paste0("$I^2_{sv}$ = ", round(mean(tot_i2), 2), "%")), size = 10)

ps3_2 <- ggplot(i2_lncvr, aes(x = est, y = name)) + xlim(0, 50) + geom_point(size = 5) + geom_errorbar(aes(xmin = lci, xmax = uci), width = 0.15) + theme_bw() + labs(x = "Percentage of Variation (%)") + theme(axis.title.y = element_blank(), axis.text = element_blank(), axis.title = element_text(size = 24)) + geom_text(aes(label = paste0(round(est, 2), "% ", "[", round(lci, 2), " - ", round(uci, 2), "%]")), position = position_nudge(x = 5, y = 0.2)) + annotate("text", x = 30, y = 1.5, label = TeX(paste0("$I^2_{sv}$ = ", round(mean(tot_i2_cvr), 2), "%")), size = 10)

ps3_3 <- ggplot(i2_lnVR, aes(x = est, y = name)) + xlim(0, 50) + geom_point(size = 5) + geom_errorbar(aes(xmin = lci, xmax = uci), width = 0.15) + theme_bw() + labs(x = "Percentage of Variation (%)") + theme(axis.title.y = element_blank(), axis.text = element_blank(), axis.title = element_text(size = 24)) + geom_text(aes(label = paste0(round(est, 2), "% ", "[", round(lci, 2), " - ", round(uci, 2), "%]")), position = position_nudge(x = 5, y = 0.2)) + annotate("text", x = 30, y = 1.5, label = TeX(paste0("$I^2_{sv}$ = ", round(mean(tot_i2_cvr), 2), "%")), size = 10)

figs3 <- (ps3_1 | ps3_2 | ps3_3) + plot_annotation(tag_levels = "A", tag_suffix = ")") & theme(plot.tag = element_text(size = 20))
ggsave(figs3, width = 16, height = 5.7, filename = "./output/figures/figs3.png")

figs3 <- image_read("./output/figures/figs3.png")
figs3
```


#### Publicaton Bias Analysis

Funnel plots did not show any noticable deviation from the typical funnel shape for any of the effect size estimates (@fig-s2). 

```{r, pubias}
#| label: pubias
#| echo: false
#| include: false
rerun = FALSE
if(rerun){
  model_full_lnrr_pb <- brms::brm(effect_size | se(sqrt(V)) ~  c_accl_time + V + habitat*life.hist*type + trait_category + habitat:type + habitat:life.hist + habitat:life.hist:type + (~1 | record_num) + (1 | gr(species_full, cov = A)) + (1 | spp) + (1 | trait) + (1  | obs),  data2 = list(A=A), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnRRQ10_data)

  model_full_lncvr_pb <- brms::brm(effect_size | se(sqrt(V)) ~  c_accl_time + V + habitat*life.hist*type + trait_category + (~1 | record_num) + (1 | gr(species_full, cov = A_CVR)) + (1 | spp) + (1 | trait) + (1  | obs),  data2 = list(A_CVR=A_CVR), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnCVRQ10_data)

  model_full_lnvr_pb <- brms::brm(effect_size | se(sqrt(V)) ~  c_accl_time + V + habitat*life.hist*type + trait_category  + (~1 | record_num) + (1 | gr(species_full, cov = A_VR)) + (1 | spp) + (1 | trait) + (1  | obs),  data2 = list(A_VR=A_VR), family = gaussian(), prior = c(prior(normal(0, 10), "Intercept"), prior(student_t(3, 0, 10), "sd")), control = list(adapt_delta = 0.98, max_treedepth = 12), chains = 4, thin = 5, iter = 5000, warmup = 1000, cores = 8, data = lnVRQ10_data)

  saveRDS(model_full_lnrr_pb, file = "./output/models/lnRRQ10_pubbias")
  saveRDS(model_full_lncvr_pb, file = "./output/models/lnCVRQ10_pubbias")
  saveRDS(model_full_lnvr_pb, file = "./output/models/lnVRQ10_pubbias")
} else {
   model_full_lnrr_pb <- readRDS(file = "./output/models/lnRRQ10_pubbias")
  model_full_lncvr_pb <- readRDS(file = "./output/models/lnCVRQ10_pubbias")
  model_full_lnvr_pb <- readRDS(file = "./output/models/lnVRQ10_pubbias")
}

```

```{r, fig-s2}
#| label: fig-s2
#| fig-cap: Funnel plot of precision (1/sampling standard error) against effect size for A) log response ratio $Q_{10}$ ($lnRR_{Q_{10}}$), B)log coefficient of variance ratio $Q_{10}$ ($lnCVR_{Q_{10}}$) and C) log variance ratio $Q_{10}$ ($lnVR_{Q_{10}}$). Both acute ('green') and acclimation ('orange') effect sizes are plotted.
cols <- c("#303234", "#D3D3D3")
ps2_1 <- ggplot(lnRRQ10_data, aes(y = 1/sqrt(V), x = effect_size, color = type)) + geom_point() + theme_classic() + labs(y = TeX("Precision\\ $\\left( \\frac{1}{\\sqrt{V}} \\right)$"), x = TeX("$lnRR_{Q_{10}}$"))+geom_vline(xintercept = 0, linetype = 3) + theme(legend.title  = element_text(size = 15), legend.text = element_text(size = 15), axis.title = element_text(size = 15), axis.text = element_text(size = 15), legend.position = "none") + scale_color_manual(name = "Type", values = cols)

ps2_2 <- ggplot(lnCVRQ10_data, aes(y = 1/sqrt(V), x = effect_size, color = type)) + geom_point() + theme_classic() + labs(y = TeX("Precision\\ $\\left( \\frac{1}{\\sqrt{V}} \\right)$"), x = TeX("$lnCVR_{Q_{10}}$"))+geom_vline(xintercept = 0, linetype = 3) + theme(legend.title  = element_text(size = 15), legend.text = element_text(size = 15), axis.title = element_text(size = 15), axis.text = element_text(size = 15), legend.position = "none", axis.title.y = element_blank())+ scale_color_manual(name = "Type", values = cols)

ps2_3 <- ggplot(lnVRQ10_data, aes(y = 1/sqrt(V), x = effect_size, color = type)) + geom_point() + theme_classic() + labs(y = TeX("Precision\\ $\\left( \\frac{1}{\\sqrt{V}} \\right)$"), x = TeX("$lnVR_{Q_{10}}$"))+geom_vline(xintercept = 0, linetype = 3) + theme(legend.title  = element_text(size = 15), legend.text = element_text(size = 15), axis.title = element_text(size = 15), axis.text = element_text(size = 15),  axis.title.y = element_blank())+ scale_color_manual(name = "Type", values = cols)

figs2 <- (ps2_1 | ps2_2 | ps2_3) + plot_annotation(tag_levels = "A", tag_suffix = ")") & theme(plot.tag = element_text(size = 20))
ggsave(figs2, width = 11.5, height = 4.8, filename = "./output/figures/figS2.png")

figs2 <- image_read("./output/figures/figS2.png")
figs2
```


